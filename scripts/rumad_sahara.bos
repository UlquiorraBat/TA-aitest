#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, flare, turret, pitchturret, barrel1, barrel2, barrel3, fork, 
		flare1, flare2, msl_sleeves, msl_turret;

static-var  restore_delay, msl_1;

// Signal definitions
#define SIG_AIM_1			2
#define SIG_AIM_2			4

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	restore_delay = 3000;
	msl_1 = 0;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0.000000> speed <35.0>;
	turn pitchturret to x-axis <0.000000> speed <15.0>;
	turn msl_turret to y-axis <0.0> speed <100.0>;
	turn msl_sleeves to x-axis <0.000000> speed <100.0>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn turret to y-axis heading speed <60.000000>;
	turn pitchturret to x-axis <0.000000> - pitch speed <45.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	move barrel1 to z-axis [-1.8] speed [500.000000];
	move barrel2 to z-axis [-1.8] speed [500.000000];
	move barrel3 to z-axis [-1.8] speed [500.000000];
	sleep 150;
	move barrel1 to z-axis [0.000000] speed [3.000000];
	move barrel2 to z-axis [0.000000] speed [3.000000];
	move barrel3 to z-axis [0.000000] speed [3.000000];
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromWeapon2(piecenum)
{
	piecenum = msl_sleeves;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn msl_turret to y-axis heading speed <250.0>;
	turn msl_sleeves to x-axis <0.000000> - pitch speed <200.0>;
	wait-for-turn msl_turret around y-axis;
	wait-for-turn msl_sleeves around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
	while(TRUE)
	{
		sleep 125;	
		++msl_1;
		if (msl_1 == 3)
		{
			msl_1 = 1;
			return (0);		
		}
	}
}

QueryWeapon2(piecenum)
{
	if( msl_1 == 1 )
	{
		piecenum = flare1;
	}
	if( msl_1 == 2 )
	{
		piecenum = flare2;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1 type NOHEATCLOUD;
		explode hull type NOHEATCLOUD;
		explode pitchturret type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode hull type NOHEATCLOUD;
		explode pitchturret type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode hull type NOHEATCLOUD;
	explode pitchturret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
