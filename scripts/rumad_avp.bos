#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, socle, buildpad, building1,  system1, lathe1, spray1, system2, lathe2, spray2, decor1, decor2, decor3, decor4, decor5,
       building2, shield3, shield4, system3, lathe3, spray3, system4, lathe4, spray4, decor9, decor10, decor11, decor12, decor13, decor14,
       building3, decor6, decor7, decor8;

static-var  DesiredState, StateChanging, Spray;

RequestState(RequestedState, CurrentState)
{
	if( StateChanging )
	{
		DesiredState = RequestedState;
		return;
	}
	
	StateChanging = 1;
	CurrentState = DesiredState;
	DesiredState = RequestedState;
	
	while( DesiredState != CurrentState )
	{
		if( !DesiredState )
		{
			move system1 to y-axis [2.00] speed [8.00];
			move system2 to y-axis [2.00] speed [8.00];
			move system3 to y-axis [2.00] speed [8.00];
			move system4 to y-axis [2.00] speed [8.00];
			move shield3 to y-axis [-4.00] speed [8.00];
			move shield4 to y-axis [-4.00] speed [8.00];
			sleep 250;
			move building1 to x-axis [11.00] speed [8.00];
			move building3 to x-axis [-22.00] speed [8.00];
			move system1 to x-axis [-2.00] speed [8.00];
			move system2 to x-axis [-2.00] speed [8.00];
			move system3 to x-axis [2.00] speed [8.00];
			move system4 to x-axis [2.00] speed [8.00];
			sleep 925;
			move lathe1 to x-axis [-2.00] speed [4.00];
			move lathe2 to x-axis [-2.00] speed [4.00];
			move lathe3 to x-axis [2.00] speed [4.00];
			move lathe4 to x-axis [2.00] speed [4.00];
			turn lathe1 to z-axis <30.00> speed <60.00>;
			turn lathe2 to z-axis <30.00> speed <60.00>;
			turn lathe3 to z-axis <-45.00> speed <60.00>;
			turn lathe4 to z-axis <-45.00> speed <60.00>;
			sleep 1250;
					
			set YARD_OPEN to 1;
			
			while( !get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 1;
			}
			
			set BUGGER_OFF to 0;
			set INBUILDSTANCE to 1;
			CurrentState = 0;
		}
		if( DesiredState )
		{
			set INBUILDSTANCE to 0;
			set YARD_OPEN to 0;
			
			while( get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 0;
			}
			
			set BUGGER_OFF to 0;
						
			move building3 to x-axis [0.00] speed [8.00];
			sleep 750;
			move lathe1 to x-axis [0.00] speed [4.00];
			move lathe2 to x-axis [0.00] speed [4.00];
			move lathe3 to x-axis [0.00] speed [4.00];
			move lathe4 to x-axis [0.00] speed [4.00];
			turn lathe1 to z-axis <0.00> speed <60.00>;
			turn lathe2 to z-axis <0.00> speed <60.00>;
			turn lathe3 to z-axis <0.00> speed <60.00>;
			turn lathe4 to z-axis <0.00> speed <60.00>;
			sleep 500;
			move building1 to x-axis [0.00] speed [8.00];
			sleep 125;
			move system1 to x-axis [0.00] speed [8.00];
			move system2 to x-axis [0.00] speed [8.00];
			move system3 to x-axis [0.00] speed [8.00];
			move system4 to x-axis [0.00] speed [8.00];
			sleep 200;
			move system1 to y-axis [0.00] speed [8.00];
			move system2 to y-axis [0.00] speed [8.00];
			move system3 to y-axis [0.00] speed [8.00];
			move system4 to y-axis [0.00] speed [8.00];
			move shield3 to y-axis [0.00] speed [8.00];
			move shield4 to y-axis [0.00] speed [8.00];
			sleep 500;
			
			CurrentState = 1;
		}
	}
	
	StateChanging = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	DesiredState = 1;
	StateChanging = 0;
	Spray = spray1;	
	start-script SmokeUnit();
}

QueryNanoPiece(PieceNum)
{
	if( Spray == spray1 )
	{
		PieceNum = spray1;
		Spray = spray2;
		return;
	}
	if( Spray == spray2 )
	{
		PieceNum = spray2;
		Spray = spray3;
		return;
	}
	if( Spray == spray3 )
	{
		PieceNum = spray3;
		Spray = spray4;
		return;
	}
	
	PieceNum = spray4;
	Spray = spray1;
}

Activate()
{
	signal 2;
	start-script RequestState(0);
}

Deactivate()
{
	signal 2;
	set-signal-mask 2;
	sleep 5000;
	set-signal-mask 0;
	start-script RequestState(1);
}

QueryBuildInfo(PieceNum)
{
	PieceNum = buildpad;
}

StartBuilding()
{
}

StopBuilding()
{
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType, Random)
{
	if( get BUILD_PERCENT_LEFT )
	{
		CorpseType = 3;
		return;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode shield3 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode shield4 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor1 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor2 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor3 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor4 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor5 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor9 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor10 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor11 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor12 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor13 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor14 type NOHEATCLOUD;
	}
	
	if( Severity <= 100 )
	{
		CorpseType = 1;
		return;
	}
	
	CorpseType = 2;
}
