#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, flare, shell,
       barrel1, barrel2, barrel3, barrel4, barrel5, barrel6, sleeve1, sleeve2,
       sleeve3, sleeve4, sleeve5, sleeve6, spindle;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare;
	hide shell;
	turn spindle to x-axis <-45.0> now;
	start-script SmokeUnit();
}

Restore()
{
	sleep 1000;
	turn spindle to x-axis <0.0> speed <80.0>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <20.000000>;
	wait-for-turn turret around y-axis;
	//start-script Restore();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	explode shell type NOHEATCLOUD | FALL;
	turn spindle to x-axis <-45.0> now;
	turn spindle to x-axis <0.0> speed <160.0>;
	move barrel1 to z-axis [-1.750000] now;
	move barrel1 to z-axis [0.000000] speed [5.00000];	
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = spindle;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	return (corpsetype);
}
