#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, lleg, lboot, ltoe, rleg, rboot, rtoe, torso, torsorecoil,
       larm, larmrecoil, lgun, lgunrecoil, lbarrel, rspray,
       rarm, rarmrecoil, rgun, rgunrecoil, rbarrel, lspray,
       headturn, head, antitorso, turret, pitchturret, flare1, flare2;

static-var  bMoving, bAiming, msl_1, spray, Main_Heading;

// Signal definitions
#define SIG_AIM			2
#define SIG_CONS		4
#define SIG_MOVE		8

MotionControl(Moving, Aiming, JustMoved)
{
	JustMoved = 1;
	while( TRUE )
	{		
		if( bMoving )
		{
			if( bMoving )
			{
				turn lleg to x-axis <25.00> speed <80.00>;
				turn lboot to x-axis <-10.00> speed <20.00>;
				turn ltoe to x-axis <-20.00> speed <60.00>;
				turn rleg to x-axis <-30.00> speed <120.00>;
				turn rboot to x-axis <50.00> speed <40.00>;
				//turn rtoe to x-axis <0.00> speed <0.00>;
				move pelvis to y-axis [0.90] speed [5.40];
				if( !bAiming )
				{
					turn larm to x-axis <-10.00> speed <60.00>;
					turn rarm to x-axis <10.00> speed <60.00>;
					turn lgun to x-axis <10.00> speed <40.00>;
					turn rgun to x-axis <10.00> speed <40.00>;
					turn torso to y-axis <-5.00> speed <40.00>;
					turn head to y-axis <10.00> speed <50.00>;
					turn torsorecoil to x-axis <5.00> speed <20.00>;
				}						
				sleep 350;
			}
			
			if( bMoving )
			{
				turn lleg to x-axis <30.00> speed <60.00>;
				turn lboot to x-axis <20.00> speed <80.00>;
				turn ltoe to x-axis <10.00> speed <80.00>;
				turn rleg to x-axis <-30.00> speed <60.00>;
				turn rboot to x-axis <10.00> speed <100.00>;
				turn rtoe to x-axis <20.00> speed <60.00>;
				move pelvis to y-axis [-0.90] speed [5.20];
				if( !bAiming )
				{
					turn larm to x-axis <-10.00> speed <40.00>;
					turn rarm to x-axis <10.00> speed <40.00>;
					turn torsorecoil to x-axis <0.00> speed <20.00>;
				}
				sleep 350;
			}
			
			if( bMoving )
			{
				turn lleg to x-axis <0.00> speed <100.00>;
				turn lboot to x-axis <90.00> speed <100.00>;
				turn ltoe to x-axis <0.00> speed <40.00>;
				turn rleg to x-axis <5.00> speed <90.00>;
				turn rboot to x-axis <0.00> speed <40.00>;
				turn rtoe to x-axis <0.00> speed <60.00>;
				move pelvis to y-axis [-0.45] speed [1.80];
				if( !bAiming )
				{
					turn larm to x-axis <10.00> speed <30.00>;
					turn rarm to x-axis <-10.00> speed <30.00>;
					turn lgun to x-axis <15.00> speed <50.00>;
					turn rgun to x-axis <15.00> speed <50.00>;
					turn torso to y-axis <0.00> speed <40.00>;
					turn head to y-axis <0.00> speed <50.00>;
					turn torsorecoil to x-axis <10.00> speed <40.00>;
				}
				sleep 350;
			}
			
			if( bMoving )
			{
				turn lleg to x-axis <-30.00> speed <100.00>;
				turn lboot to x-axis <50.00> speed <40.00>;
				//turn ltoe to x-axis <0.00> speed <0.00>;
				turn rleg to x-axis <30.00> speed <60.00>;
				turn rboot to x-axis <-10.00> speed <40.00>;
				turn rtoe to x-axis <-20.00> speed <60.00>;
				move pelvis to y-axis [0.90] speed [5.40];
				if( !bAiming )
				{
					turn larm to x-axis <10.00> speed <60.00>;
					turn rarm to x-axis <-10.00> speed <60.00>;
					turn lgun to x-axis <10.00> speed <40.00>;
					turn rgun to x-axis <10.00> speed <40.00>;
					turn torso to y-axis <5.00> speed <40.00>;
					turn head to y-axis <-10.00> speed <60.00>;
					turn torsorecoil to x-axis <5.00> speed <20.00>;
				}
				sleep 350;
			}
			
			if( bMoving )
			{
				turn lleg to x-axis <-40.00> speed <60.00>;
				turn lboot to x-axis <10.00> speed <100.00>;
				turn ltoe to x-axis <20.00> speed <60.00>;
				turn rleg to x-axis <30.00> speed <60.00>;
				turn rboot to x-axis <20.00> speed <80.00>;
				turn rtoe to x-axis <10.00> speed <80.00>;
				move pelvis to y-axis [-0.90] speed [7.20];
				if( !bAiming )
				{
					turn larm to x-axis <10.00> speed <40.00>;
					turn rarm to x-axis <-10.00> speed <40.00>;
					turn torsorecoil to x-axis <0.00> speed <20.00>;
				}
				sleep 350;
			}
			
			if( bMoving )
			{
				turn lleg to x-axis <5.00> speed <180.00>;
				turn lboot to x-axis <0.00> speed <40.00>;
				turn ltoe to x-axis <0.00> speed <80.00>;
				turn rleg to x-axis <0.00> speed <200.00>;
				turn rboot to x-axis <90.00> speed <280.00>;
				turn rtoe to x-axis <0.00> speed <40.00>;
				move pelvis to y-axis [-0.45] speed [1.80];
				if( !bAiming )
				{
					turn larm to x-axis <-10.00> speed <40.00>;
					turn rarm to x-axis <10.00> speed <40.00>;
					turn lgun to x-axis <15.00> speed <60.00>;
					turn rgun to x-axis <15.00> speed <60.00>;
					turn torso to y-axis <0.00> speed <40.00>;
					turn head to y-axis <0.00> speed <60.00>;
					turn torsorecoil to x-axis <10.00> speed <40.00>;
				}
				sleep 350;
			}
			JustMoved = 1;
		}
		if( !Moving )
		{
			if( JustMoved )
			{
				turn lleg to x-axis <0.00> speed <180.00>;
				turn lboot to x-axis <0.00> speed <180.00>;
				turn ltoe to x-axis <0.00> speed <180.00>;
				turn rleg to x-axis <0.00> speed <180.00>;
				turn rboot to x-axis <0.00> speed <180.00>;
				turn rtoe to x-axis <0.00> speed <180.00>;
				move pelvis to y-axis [0.00] speed [7.20];
				turn torsorecoil to x-axis <0.00> speed <20.00>;
				if( !bAiming )
				{
					turn larm to x-axis <0.00> speed <120.00>;
					turn rarm to x-axis <0.00> speed <120.00>;
					turn lgun to x-axis <0.00> speed <60.00>;
					turn rgun to x-axis <0.00> speed <60.00>;
					turn torso to y-axis <0.00> speed <40.00>;
					turn head to y-axis <0.00> speed <60.00>;
				}
				JustMoved = 0;
			}
			sleep 100;
		}
	}
}


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script MotionControl();
		
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			
			emit-sfx smoketype from pelvis;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	bMoving = FALSE;
}
	
Create()
{
	bMoving = FALSE;
	bAiming = FALSE;	
	msl_1 = 0;
	spray = 1;	
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 2500;
	turn turret to y-axis <0.00> speed <120.00>;
	turn pitchturret to x-axis <0.00> speed <90.00>;
}

RestorePosition()
{
	sleep 1000;
	if( !bAiming )
	{
		turn rarm to x-axis <0.000000> speed <15.000000>;
		turn larm to x-axis <0.000000> speed <15.000000>;
		turn rgun to x-axis <0.000000> speed <25.000000>;
		turn lgun to x-axis <0.000000> speed <25.000000>;
		turn torso to y-axis <0.0> speed <80.000000>;
	}
}

AimFromWeapon1(PieceNum)
{
	PieceNum = pitchturret;
}

AimWeapon1(Heading, Pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	turn turret to y-axis Heading + Main_Heading speed <120.00>;
	turn pitchturret to x-axis <0.00> - Pitch speed <90.00>;

	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

FireWeapon1(Random, Reload)
{
	while(TRUE)
	{
		sleep 125;	
		++msl_1;
		if (msl_1 == 5)
		{
			return (0);		
		}
		if (msl_1 == 9)
		{
			msl_1 = 1;
			return (0);		
		}
	}
}

QueryWeapon1(piecenum)
{
	if ( msl_1 == 1)
	{
		piecenum = flare1;
	}
	if ( msl_1 == 2)
	{
		piecenum = flare2;
	}
	if ( msl_1 == 3)
	{
		piecenum = flare1;
	}
	if ( msl_1 == 4)
	{
		piecenum = flare2;
	}
	if ( msl_1 == 5)
	{
		piecenum = flare1;
	}
	if ( msl_1 == 6)
	{
		piecenum = flare2;
	}
	if ( msl_1 == 7)
	{
		piecenum = flare1;
	}
	if ( msl_1 == 8)
	{
		piecenum = flare2;
	}
}


QueryNanoPiece(piecenum)
{
	if( spray == 1 )
	{
		spray = 2;
		piecenum = lspray;
		return (0);
	}
	if( spray == 2 )
	{
		spray = 1;
		piecenum = rspray;
		return (0);
	}
}

StartBuilding(Func_Var_1, Func_Var_2)
{
	signal SIG_CONS;
	bAiming = TRUE;
	turn rarm to x-axis <-15.000000> speed <25.000000>;
	turn larm to x-axis <-15.000000> speed <25.000000>;
	turn rgun to x-axis <-75.000000> speed <50.000000>;
	turn lgun to x-axis <-75.000000> speed <50.000000>;
	turn torso to y-axis Func_Var_1 speed <120.000000>;
	Main_Heading = Func_Var_1;
	wait-for-turn torso around y-axis;
	wait-for-turn larm around x-axis;
	wait-for-turn lgun around x-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	bAiming = FALSE;
	signal SIG_CONS;
	set-signal-mask SIG_CONS;
	call-script RestorePosition();
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType, Random)
{	
	if( Severity <= 50 )
	{
		CorpseType = 1;
		return (CorpseType);
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode rgunrecoil type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode lgunrecoil type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode lleg type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rtoe type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	if( Severity <= 75 )
	{
		CorpseType = 2;
		return (CorpseType);
	}
	CorpseType = 2;
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode rleg type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode ltoe type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	return (CorpseType);
}
