#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, pelvis, rleg, rfoot, lleg, lfoot, head, lthigh,
       rthigh, ground, launchers, llauncher, lfire1, lfire2, lfire3, lfire4,
       lfire5, lfire6, lfire7, lfire8, lfire9, lfire10, lfire11, lfire12,
       lfire13, lfire14, lfire15, lfire16, lfire17, lfire18, lfire19, lfire20,
       rlauncher, rfire1, rfire2, rfire3, rfire4, rfire5, rfire6, rfire7,
       rfire8, rfire9, rfire10, rfire11, rfire12, rfire13, rfire14, rfire15,
       rfire16, rfire17, rfire18, rfire19, rfire20;

static-var  bMoving, Static_Var_4, Static_Var_5;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

walk()
{
	if (TRUE)
	{
		turn pelvis to x-axis <-2.0> speed <15.00000>;	
		turn lthigh to x-axis <20.0> speed <100.000000>;
		turn lfoot to x-axis <-10.0> speed <20.000000>;
		turn lleg to x-axis <-40.0> speed <80.000000>;
		turn rthigh to x-axis <-15.0> speed <100.000000>;
		turn rfoot to x-axis <10.0> speed <20.000000>;
		turn rleg to x-axis <30.000000> speed <80.000000>;
		sleep 700;
	}
	if (TRUE)
	{	
		turn pelvis to x-axis <2.000000> speed <15.00000>;	
		turn lthigh to x-axis <-15.0> speed <100.000000>;
		turn lfoot to x-axis <10.0> speed <20.000000>;
		turn lleg to x-axis <30.0> speed <80.000000>;
		turn rthigh to x-axis <20.0> speed <100.000000>;
		turn rfoot to x-axis <-10.0> speed <20.000000>;
		turn rleg to x-axis <-40.000000> speed <80.000000>;
		sleep 700;
	}

}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		
		if( moving )
		{
			call-script walk();		
			justmoved = TRUE;
		}
		if( !moving )
		{
			if( justmoved )
			{
				turn pelvis to x-axis <0.000000> speed <15.00000>;	
				turn rthigh to x-axis <0.000000> speed <100.000000>;
				turn rleg to x-axis <0.000000> speed <100.000000>;
				turn rfoot to x-axis <0.000000> speed <100.000000>;
				turn lthigh to x-axis <0.000000> speed <100.000000>;
				turn lleg to x-axis <0.000000> speed <100.000000>;
				turn lfoot to x-axis <0.000000> speed <100.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide rfire1;
	hide lfire1;
	bMoving = FALSE;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep 3000;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn launchers to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn launchers around x-axis;
}

AimFromWeapon1(piecenum)
{
	piecenum = launchers;
}

FireWeapon1()
{
	Static_Var_4 = -1;
	Static_Var_5 = 1;
}

Shot1()
{
	if( Static_Var_5 )
	{
		++Static_Var_4;
	}
	Static_Var_5 = !Static_Var_5;
}

QueryWeapon1(piecenum)
{
	if( Static_Var_4 >= 0 AND Static_Var_4 < 20 )
	{
		if( Static_Var_5 )
		{
			piecenum = 33 + Static_Var_4;
		}
		else
		{
			piecenum = 12 + Static_Var_4;
		}
	}
	else
	{
		piecenum = launchers;
	}
}

AimWeapon1(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn torso to y-axis heading speed <90.000000>;
	turn launchers to x-axis <10.000000> - pitch speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn launchers around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	hide rfire1;
	hide lfire1;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type NOHEATCLOUD;
		explode head type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type NOHEATCLOUD | FALL;
		explode head type NOHEATCLOUD | FALL;
		explode lfoot type NOHEATCLOUD | FALL;
		explode lleg type NOHEATCLOUD | FALL;
		explode lthigh type NOHEATCLOUD | FALL;
		explode pelvis type NOHEATCLOUD | FALL;
		explode rfoot type NOHEATCLOUD | FALL;
		explode rleg type NOHEATCLOUD | FALL;
		explode rthigh type NOHEATCLOUD | FALL;
		explode torso type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode head type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode torso type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode ground type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode head type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode torso type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
