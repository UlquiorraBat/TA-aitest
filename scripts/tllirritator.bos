#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body,
		turret, main_sleeve, barrel, blast,
		LMFront, RMFront, LMBack, RMBack,
		rlleg, rfoot, llleg, lfoot, lupleg, rupleg, 
		LMF, RMF, LMB, RMB, LMFFlare, RMFFlare, LMBFlare, RMBFlare,
		emit1, emit2, emit3, emit4, emit5, emit6, emit7, emit8, emit9, shield_pos;

static-var  shieldonoff ,bMoving, bAiming, bFiring, missile_1;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_MOVE			32

Sparks()
{
	while( TRUE )
	{
		while( bFiring )
		{
			sleep 100;
		}
		emit-sfx 1024 + 1 from emit1;
		sleep 15;
		emit-sfx 1024 + 1 from emit2;
		sleep 15;
		emit-sfx 1024 + 1 from emit3;
		sleep 15;
		emit-sfx 1024 + 1 from emit4;
		sleep 15;
		emit-sfx 1024 + 1 from emit5;
		sleep 15;
		emit-sfx 1024 + 1 from emit6;
		sleep 15;
		emit-sfx 1024 + 1 from emit8;
		sleep 15;
		emit-sfx 1024 + 1 from emit9;
		sleep 15;
		emit-sfx 1024 + 1 from emit9;
		sleep 200;
	}
}


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script Sparks();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from Body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl()
{
	while( TRUE )
	{
		if( TRUE )
		{
			turn body to x-axis <1.500000> speed <15.0>;
			turn rupleg to x-axis <-25.000000> speed <50.0>;
			turn lupleg to x-axis <28.000000> speed <25.0>;
			turn rupleg to x-axis <-25.000000> speed <25.0>;
			turn lupleg to x-axis <20.000000> speed <15.0>;
			turn llleg to x-axis <-15.000000> speed <12.0>;
			turn lfoot to x-axis <-18.000000> speed <12.0>;
			sleep 800;
		}
		
		if( TRUE )
		{
			turn body to x-axis <0.000000> speed <20.0>;			
			turn rupleg to x-axis <10.000000> speed <30.0>;
			turn rlleg to x-axis <5.000000> speed <8.0>;
			turn lupleg to x-axis <25.000000> speed <8.0>;
			turn llleg to x-axis <10.000000> speed <30.0>;
			turn lfoot to x-axis <5.000000> speed <20.0>;
			sleep 800;
		}
		if( TRUE )
		{
			turn body to x-axis <-1.500000> speed <11.0>;
			turn body to y-axis <2.000000> speed <3.0>;
			turn lupleg to x-axis <-30.000000> speed <50.0>;
			turn rupleg to x-axis <30.000000> speed <25.0>;
			turn rlleg to x-axis <-15.000000> speed <25.0>;
			turn rfoot to x-axis <-18.000000> speed <15.0>;
			sleep 800;
		}
		if( TRUE )
		{
			turn body to x-axis <0.000000> speed <15.0>;
			turn lupleg to x-axis <10.000000> speed <25.0>;
			turn llleg to x-axis <5.000000> speed <8.0>;
			turn rupleg to x-axis <-20.000000> speed <10.0>;
			turn rlleg to x-axis <10.000000> speed <30.0>;
			turn rfoot to x-axis <5.000000> speed <20.0>;
			sleep 800;
		}
		
		sleep 250;
	}
}

Shield()
{
	shieldonoff = !shieldonoff;
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	bFiring = FALSE;
	missile_1 = 0;
	start-script SmokeUnit();
	shieldonoff = 1;
}

RestoreAfterDelay()
{
	sleep 10000;
	turn turret to y-axis <0.000000> speed <20.0>;
	turn main_sleeve to x-axis <0.000000> speed <10.0>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	start-script MotionControl();
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	bMoving = FALSE;
	
	turn rupleg to x-axis <0.000000> speed <70.000000>;
	turn rlleg to x-axis <0.000000> speed <50.000000>;
	turn rfoot to x-axis <0.000000> speed <42.000000>;
	turn lupleg to x-axis <0.000000> speed <70.000000>;
	turn llleg to x-axis <0.000000> speed <50.000000>;
	turn lfoot to x-axis <0.000000> speed <42.000000>;
	if( !bAiming )
	{
		turn Body to x-axis <0.000000> speed <8.0>;
		turn Body to y-axis <0.000000> speed <1.0>;
	}
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <30.0>;
	turn main_sleeve to x-axis <0.000000> - pitch speed <12.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn main_sleeve around x-axis;
	Start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	bFiring = TRUE;
	sleep 20;
	emit-sfx 1024 from blast;
	sleep 2500;
	bFiring = FALSE;
}

QueryPrimary(piecenum)
{
	piecenum = blast;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimFromTertiary(piecenum)
{
	piecenum = body;
}

QueryTertiary(piecenum)
{
	if( missile_1 == 0 )
	{
		piecenum = LMFFlare;
	}
	if( missile_1 == 1 )
	{
		piecenum = RMFFlare;
	}
	if( missile_1 == 2 )
	{
		piecenum = LMBFlare;
	}
	if( missile_1 == 3 )
	{
		piecenum = RMBFlare;
	}
}

FireTertiary()
{
	if( missile_1 == 0 )
	{
		missile_1 = 1;
		return (0);
	}
	if( missile_1 == 1 )
	{
		missile_1 = 2;
		return (0);
	}
	if( missile_1 == 2 )
	{
		missile_1 = 3;
		return (0);
	}
	if( missile_1 == 3 )
	{
		missile_1 = 0;
		return (0);
	}
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	return (1);
}

AimFromWeapon4(piecenum)
{
	piecenum = shield_pos;
}

AimWeapon4(heading, pitch)
{
	return(shieldonoff);
}

QueryWeapon4(piecenum)
{
	piecenum = shield_pos;
}

FireWeapon4(Func_Var_1)
{
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode main_sleeve type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode LMF type NOHEATCLOUD;
		explode RMF type NOHEATCLOUD;
		explode LMB type NOHEATCLOUD | FALL;
		explode RMB type NOHEATCLOUD | FALL;
		explode llleg type NOHEATCLOUD;
		explode lupleg type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rlleg type NOHEATCLOUD;
		explode rupleg type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode main_sleeve type NOHEATCLOUD | FALL;
		explode lfoot type NOHEATCLOUD;
		explode LMF type NOHEATCLOUD | FALL;
		explode RMF type NOHEATCLOUD | FALL;
		explode LMB type NOHEATCLOUD | FALL;
		explode RMB type NOHEATCLOUD | FALL;
		explode llleg type NOHEATCLOUD;
		explode lupleg type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rlleg type NOHEATCLOUD;
		explode rupleg type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode main_sleeve type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lfoot type NOHEATCLOUD;
	explode LMF type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode RMF type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode LMB type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode RMB type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode llleg type NOHEATCLOUD;
	explode lupleg type NOHEATCLOUD;
	explode body type NOHEATCLOUD;
	explode rfoot type NOHEATCLOUD;
	explode rlleg type NOHEATCLOUD;
	explode rupleg type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | SHATTER;
	return (corpsetype);
}
