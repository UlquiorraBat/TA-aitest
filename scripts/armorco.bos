#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, ruparm, Rarm, rhand, Rweapon, Raim1, Rbarr1,
       Rbflare1, Raim2, Rbarr2, Rbflare2, Raim3, Rbarr3, Rbflare3, luparm,
       Larm, lhand, Lweapon, Laim1, Lbarr1, Lbflare1, Laim2, Lbarr2,
       Lbflare2, Laim3, Lbarr3, Lbflare3, launcher, Rmissflare, Lmissflare, pelvis,
       Rhileg, Rleg, Rdownleg, Rfoot, Rbackfing, Rfinger, Rfinger1, Rfinger2,
       Lhileg, Lleg, Ldownleg, Lfoot, Lbackfing, Lfinger, Lfinger1, Lfinger2,
       head, Raim, Rbarrl, Rheadflare, Laim, Lbarrl, Lheadflare, luparmhold,
       ruparmhold, Lweapglo, Rweapglo;

static-var  gun_1, gun_2, gun_3, gun_4, bMoving, bAiming,
            Static_Var_6, Static_Var_8, Static_Var_9, Static_Var_10,
            Static_Var_11, Static_Var_12, Static_Var_13, Static_Var_15;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_AIM_4			16


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		Func_Var_4 = Rand( 1, 4 );
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from base;
			}
			else if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from Rarm;
			}
			else if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from Rfoot;
			}
			else
			{
				emit-sfx smoketype from Lweapon;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Walk()
{
	while( bMoving )
	{
		if( Static_Var_6 )
		{
			turn Rhileg to x-axis <-7.000000> speed <10.000000>;
			turn Rleg to x-axis <-28.000000> speed <28.000000>;
			turn Rdownleg to x-axis <15.000000> speed <15.000000>;
			turn Rfoot to x-axis <5.000000> speed <5.000000>;
			turn Rfinger to x-axis <40.000000> speed <50.000000>;
			turn Rfinger1 to x-axis <40.000000> speed <60.000000>;
			turn Rfinger2 to x-axis <40.000000> speed <60.000000>;
			turn Rbackfing to x-axis <-50.000000> speed <70.000000>;
		}
		if( !Static_Var_6 )
		{
			turn Rhileg to x-axis <-7.000000> speed <20.000000>;
			turn Rleg to x-axis <-28.000000> speed <48.000000>;
			turn Rdownleg to x-axis <15.000000> speed <21.000000>;
		}
		Static_Var_6 = 0;
		if( !bAiming )
		{
			turn luparm to x-axis <-6.000000> speed <16.000000>;
			turn lhand to y-axis <5.000000> speed <5.000000>;
			turn rhand to y-axis <0.000000> speed <12.000000>;
			turn Larm to x-axis <-10.000000> speed <10.000000>;
			turn ruparm to x-axis <6.000000> speed <8.000000>;
			turn Rarm to x-axis <9.000000> speed <12.000000>;
			turn body to y-axis <4.000000> speed <9.000000>;
			turn head to y-axis <3.000000> speed <7.000000>;
			turn body to z-axis <2.000000> speed <2.000000>;
			move body to y-axis [1.000000] speed [1.500000];
			move head to y-axis [1.500000] speed [1.875000];
		}
		turn Lhileg to x-axis <8.000000> speed <8.000000>;
		turn Lleg to x-axis <20.000000> speed <30.000000>;
		turn Ldownleg to x-axis <-5.000000> speed <15.000000>;
		turn Lfoot to x-axis <-15.000000> speed <15.000000>;
		turn Lfinger to x-axis <-13.000000> speed <13.000000>;
		turn Lfinger1 to x-axis <-13.000000> speed <13.000000>;
		turn Lfinger2 to x-axis <-13.000000> speed <13.000000>;
		turn Lbackfing to x-axis <-25.000000> speed <25.000000>;
		sleep 800;
		if( !bAiming )
		{
			turn lhand to y-axis <-15.000000> speed <15.000000>;
			turn Rarm to x-axis <10.000000> speed <30.000000>;
			move body to y-axis [0.000000] speed [0.750000];
			move head to y-axis [1.500000] speed [1.000000];
		}
		sleep 200;
		turn Rhileg to x-axis <0.000000> speed <14.000000>;
		turn Rleg to x-axis <-10.000000> speed <28.000000>;
		turn Rdownleg to x-axis <10.000000> speed <12.000000>;
		turn Rfoot to x-axis <0.000000> speed <5.000000>;
		turn Rfinger to x-axis <0.000000> speed <80.000000>;
		turn Rfinger1 to x-axis <0.000000> speed <80.000000>;
		turn Rfinger2 to x-axis <0.000000> speed <80.000000>;
		turn Rbackfing to x-axis <0.000000> speed <100.000000>;
		turn Lhileg to x-axis <10.000000> speed <4.000000>;
		turn Ldownleg to x-axis <10.000000> speed <30.000000>;
		turn Lfinger to x-axis <-18.000000> speed <16.659341>;
		turn Lfinger1 to x-axis <-18.000000> speed <16.659341>;
		turn Lfinger2 to x-axis <-18.000000> speed <16.659341>;
		turn Lbackfing to x-axis <-30.000000> speed <16.659341>;
		sleep 300;
		turn Lfinger to x-axis <40.000000> speed <80.000000>;
		turn Lfinger1 to x-axis <40.000000> speed <80.000000>;
		turn Lfinger2 to x-axis <40.000000> speed <80.000000>;
		turn Lbackfing to x-axis <-20.000000> speed <35.000000>;
		sleep 200;
		turn Lhileg to x-axis <-7.000000> speed <20.000000>;
		turn Lleg to x-axis <-28.000000> speed <48.000000>;
		turn Ldownleg to x-axis <15.000000> speed <21.000000>;
		turn Rhileg to x-axis <8.000000> speed <8.000000>;
		turn Rleg to x-axis <20.000000> speed <30.000000>;
		turn Rdownleg to x-axis <-5.000000> speed <15.000000>;
		turn Rfoot to x-axis <-15.000000> speed <15.000000>;
		turn Rfinger to x-axis <-13.000000> speed <13.000000>;
		turn Rfinger1 to x-axis <-13.000000> speed <13.000000>;
		turn Rfinger2 to x-axis <-13.000000> speed <13.000000>;
		turn Rbackfing to x-axis <-25.000000> speed <25.000000>;
		if( !bAiming )
		{
			turn ruparm to x-axis <-6.000000> speed <16.000000>;
			turn rhand to y-axis <5.000000> speed <5.000000>;
			turn lhand to y-axis <0.000000> speed <12.000000>;
			turn Rarm to x-axis <-10.000000> speed <10.000000>;
			turn luparm to x-axis <6.000000> speed <8.000000>;
			turn Larm to x-axis <9.000000> speed <12.000000>;
			turn body to y-axis <-4.000000> speed <9.000000>;
			turn head to y-axis <-3.000000> speed <7.000000>;
			turn body to z-axis <-2.000000> speed <2.000000>;
			move body to y-axis [1.000000] speed [1.500000];
			move head to y-axis [1.500000] speed [1.875000];
		}
		sleep 800;
		if( !bAiming )
		{
			turn rhand to y-axis <15.000000> speed <15.000000>;
			turn Larm to x-axis <10.000000> speed <30.000000>;
			move body to y-axis [0.000000] speed [0.750000];
			move head to y-axis [0.000000] speed [1.000000];
		}
		sleep 200;
		turn Lhileg to x-axis <0.000000> speed <14.000000>;
		turn Lleg to x-axis <-10.000000> speed <28.000000>;
		turn Ldownleg to x-axis <10.000000> speed <12.000000>;
		turn Lfoot to x-axis <0.000000> speed <5.000000>;
		turn Lfinger to x-axis <0.000000> speed <80.000000>;
		turn Lfinger1 to x-axis <0.000000> speed <80.000000>;
		turn Lfinger2 to x-axis <0.000000> speed <80.000000>;
		turn Lbackfing to x-axis <0.000000> speed <100.000000>;
		turn Rhileg to x-axis <10.000000> speed <4.000000>;
		turn Rdownleg to x-axis <10.000000> speed <30.000000>;
		turn Rfinger to x-axis <-18.000000> speed <16.659341>;
		turn Rfinger1 to x-axis <-18.000000> speed <16.659341>;
		turn Rfinger2 to x-axis <-18.000000> speed <16.659341>;
		turn Rbackfing to x-axis <-30.000000> speed <16.659341>;
		sleep 300;
		turn Rfinger to x-axis <40.000000> speed <80.000000>;
		turn Rfinger1 to x-axis <40.000000> speed <80.000000>;
		turn Rfinger2 to x-axis <40.000000> speed <80.000000>;
		turn Rbackfing to x-axis <-20.000000> speed <35.000000>;
		sleep 200;
	}
}

StartMoving()
{
	set-signal-mask 32;
	bMoving = TRUE;
	sleep 200;
	Static_Var_10 = 1;
	Static_Var_8 = Rand( 1, 6 );
	start-script Walk();
}

StopMoving()
{
	signal 16;
	bMoving = FALSE;
	Static_Var_6 = 1;
	turn Rhileg to x-axis <0.000000> speed <40.000000>;
	turn Rleg to x-axis <0.000000> speed <60.000000>;
	turn Rdownleg to x-axis <0.000000> speed <50.000000>;
	turn Rfoot to x-axis <0.000000> speed <35.000000>;
	turn Rfinger to x-axis <0.000000> speed <60.000000>;
	turn Rfinger1 to x-axis <0.000000> speed <60.000000>;
	turn Rfinger2 to x-axis <0.000000> speed <60.000000>;
	turn Rbackfing to x-axis <0.000000> speed <60.000000>;
	turn Lhileg to x-axis <0.000000> speed <40.000000>;
	turn Lleg to x-axis <0.000000> speed <60.000000>;
	turn Ldownleg to x-axis <0.000000> speed <50.000000>;
	turn Lfoot to x-axis <0.000000> speed <35.000000>;
	turn Lfinger to x-axis <0.000000> speed <60.000000>;
	turn Lfinger1 to x-axis <0.000000> speed <60.000000>;
	turn Lfinger2 to x-axis <0.000000> speed <60.000000>;
	turn Lbackfing to x-axis <0.000000> speed <60.000000>;
	move head to x-axis [0.000000] speed [12.500000];
	move body to x-axis [0.000000] speed [17.500000];
	turn body to z-axis <0.000000> speed <9002.192308>;
	move head to y-axis [0.000000] speed [2.500000];
	if( !bAiming )
	{
		turn body to y-axis <0.000000> speed <80.000000>;
		turn ruparm to x-axis <0.000000> speed <65.000000>;
		turn rhand to x-axis <0.000000> speed <60.000000>;
		turn head to y-axis <0.000000> speed <50.000000>;
		turn luparm to x-axis <0.000000> speed <65.000000>;
		turn lhand to x-axis <0.000000> speed <60.000000>;
		turn lhand to y-axis <0.000000> speed <50.000000>;
		turn rhand to y-axis <0.000000> speed <50.000000>;
		turn Rarm to y-axis <0.000000> speed <40.000000>;
		turn Larm to y-axis <0.000000> speed <40.000000>;
		turn Rarm to x-axis <0.000000> speed <30.000000>;
		turn Larm to x-axis <0.000000> speed <30.000000>;
	}
}

Create()
{
	gun_1 = 1;
	gun_2 = 0;
	gun_3 = 0;
	gun_4 = 0;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_6 = 1;
	Static_Var_11 = 0;
	Static_Var_9 = 0;
	Static_Var_8 = 0;
	Static_Var_10 = 0;
	Static_Var_13 = 0;
	Static_Var_15 = 0;
	hide Rbflare1;
	hide Lbflare1;
	hide Rbflare2;
	hide Lbflare2;
	hide Rbflare3;
	hide Lbflare3;
	hide Lheadflare;
	hide Rheadflare;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 7500;
	turn body to y-axis <0.000000> speed <80.000000>;
	turn ruparm to x-axis <0.000000> speed <60.000000>;
	turn luparm to x-axis <0.000000> speed <60.000000>;
	turn lhand to y-axis <0.000000> speed <40.000000>;
	turn rhand to y-axis <0.000000> speed <40.000000>;
	turn ruparmhold to x-axis <0.000000> speed <60.000000>;
	turn luparmhold to x-axis <0.000000> speed <60.000000>;
	wait-for-turn body around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn lhand around y-axis;
	wait-for-turn ruparmhold around x-axis;
	bAiming = FALSE;
	
}

RestoreWeapon4()
{
	sleep 5000;
	turn head to y-axis <0.000000> speed <80.000000>;
	wait-for-turn head around y-axis;
}

QueryWeapon2(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = Rbflare1;
	}
	if( gun_2 == 1 )
	{
		piecenum = Rbflare2;
	}
	if( gun_2 == 2 )
	{
		piecenum = Rbflare3;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = body;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	bAiming = TRUE;
	turn body to y-axis heading speed <75.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <70.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <70.000000>;
	turn ruparmhold to x-axis <0.000000> speed <70.000000>;
	turn luparmhold to x-axis <0.000000> speed <70.000000>;
	turn rhand to y-axis <0.000000> speed <55.000000>;
	turn lhand to y-axis <0.000000> speed <55.000000>;
	turn rhand to x-axis <0.000000> speed <55.000000>;
	turn lhand to x-axis <0.000000> speed <55.000000>;
	turn Larm to x-axis <0.000000> speed <55.000000>;
	turn Rarm to x-axis <0.000000> speed <55.000000>;
	wait-for-turn body around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparmhold around x-axis;
	wait-for-turn luparmhold around x-axis;
	wait-for-turn lhand around y-axis;
	wait-for-turn rhand around y-axis;
	wait-for-turn Larm around x-axis;
	wait-for-turn Rarm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
	
	if( gun_2 == 0 )
	{		
		move Rbarr1 to z-axis [-3.000000] speed [125.000000];
		sleep 80;
		move Rbarr1 to z-axis [0.000000] speed [8.500000];
	}	
	if( gun_2 == 1 )
	{		
		move Rbarr2 to z-axis [-3.000000] speed [125.000000];
		sleep 80;
		move Rbarr2 to z-axis [0.000000] speed [8.500000];
	}
	if( gun_2 == 2 )
	{		
		move Rbarr3 to z-axis [-3.000000] speed [125.000000];
		sleep 80;
		move Rbarr3 to z-axis [0.000000] speed [8.500000];
	}
	++gun_2;
	if( gun_2 == 3 )
	{
		gun_2 = 0;
	}
}

QueryWeapon3(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = Lbflare1;
	}
	if( gun_3 == 1 )
	{
		piecenum = Lbflare2;
	}
	if( gun_3 == 2 )
	{
		piecenum = Lbflare3;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = body;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	bAiming = TRUE;
	wait-for-turn body around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn lhand around y-axis;
	wait-for-turn rhand around y-axis;
	wait-for-turn ruparmhold around x-axis;
	wait-for-turn luparmhold around x-axis;
	wait-for-turn Larm around x-axis;
	wait-for-turn Rarm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon3()
{
	if( gun_3 == 0 )
	{		
		move Lbarr1 to z-axis [-3.000000] speed [125.000000];
		sleep 80;
		move Lbarr1 to z-axis [0.000000] speed [8.500000];
	}	
	if( gun_3 == 1 )
	{		
		move Lbarr2 to z-axis [-3.000000] speed [125.000000];
		sleep 80;
		move Lbarr2 to z-axis [0.000000] speed [8.500000];
	}
	if( gun_3 == 2 )
	{		
		move Lbarr3 to z-axis [-3.000000] speed [125.000000];
		sleep 80;
		move Lbarr3 to z-axis [0.000000] speed [8.500000];
	}
	++gun_3;
	if( gun_3 == 3 )
	{
		gun_3 = 0;
	}
}


// Starburst
QueryPrimary(piecenum)
{
	if( gun_1 )
	{
		piecenum = Lmissflare;
	}
	else
	{
		piecenum = Rmissflare;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = launcher;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

FirePrimary()
{
	gun_1 = !gun_1;
}

// Head
QueryWeapon4(piecenum)
{
	if( gun_4 )
	{
		piecenum = Lheadflare;
	}
	else
	{
		piecenum = Rheadflare;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = Laim;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	bAiming = TRUE;
	Static_Var_15 = 1;
	turn head to y-axis heading speed <110.000000>;
	wait-for-turn head around y-axis;
	start-script RestoreWeapon4();
	return (1);
}

FireWeapon4()
{
	gun_4 = !gun_4;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode ruparm type NOHEATCLOUD;
		explode Rarm type NOHEATCLOUD;
		explode rhand type NOHEATCLOUD;
		explode Rweapon type NOHEATCLOUD | SHATTER;
		explode Raim1 type NOHEATCLOUD | SHATTER;
		explode Rbarr1 type NOHEATCLOUD | SHATTER;
		explode Rbflare1 type NOHEATCLOUD;
		explode Raim2 type NOHEATCLOUD;
		explode Rbarr2 type NOHEATCLOUD;
		explode Rbflare2 type NOHEATCLOUD;
		explode Raim3 type NOHEATCLOUD;
		explode Rbarr3 type NOHEATCLOUD;
		explode Rbflare3 type NOHEATCLOUD;
		explode luparm type NOHEATCLOUD;
		explode Larm type NOHEATCLOUD;
		explode lhand type NOHEATCLOUD;
		explode Lweapon type NOHEATCLOUD;
		explode Laim1 type NOHEATCLOUD;
		explode Lbarr1 type NOHEATCLOUD;
		explode Lbflare1 type NOHEATCLOUD;
		explode Laim2 type NOHEATCLOUD;
		explode Lbarr2 type NOHEATCLOUD;
		explode Lbflare2 type NOHEATCLOUD;
		explode Laim3 type NOHEATCLOUD;
		explode Lbarr3 type NOHEATCLOUD;
		explode Lbflare3 type NOHEATCLOUD;
		explode launcher type NOHEATCLOUD;
		explode Rmissflare type NOHEATCLOUD;
		explode Lmissflare type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode Rhileg type NOHEATCLOUD;
		explode Rleg type NOHEATCLOUD;
		explode Rdownleg type NOHEATCLOUD;
		explode Rfoot type NOHEATCLOUD;
		explode Rbackfing type NOHEATCLOUD;
		explode Rfinger type NOHEATCLOUD;
		explode Rfinger1 type NOHEATCLOUD;
		explode Rfinger2 type NOHEATCLOUD;
		explode Lhileg type NOHEATCLOUD;
		explode Lleg type NOHEATCLOUD;
		explode Ldownleg type NOHEATCLOUD;
		explode Lfoot type NOHEATCLOUD;
		explode Lbackfing type NOHEATCLOUD;
		explode Lfinger type NOHEATCLOUD;
		explode Lfinger1 type NOHEATCLOUD;
		explode Lfinger2 type NOHEATCLOUD;
		explode head type NOHEATCLOUD;
		explode Raim type NOHEATCLOUD;
		explode Rbarrl type NOHEATCLOUD;
		explode Rheadflare type NOHEATCLOUD;
		explode Laim type NOHEATCLOUD;
		explode Lbarrl type NOHEATCLOUD;
		explode Lheadflare type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD | SHATTER;
		explode ruparm type NOHEATCLOUD | SHATTER;
		explode Rarm type NOHEATCLOUD | SHATTER;
		explode rhand type NOHEATCLOUD | SHATTER;
		explode Rweapon type NOHEATCLOUD | SHATTER;
		explode Raim1 type NOHEATCLOUD | SHATTER;
		explode Rbarr1 type NOHEATCLOUD | SHATTER;
		explode Rbflare1 type NOHEATCLOUD | SHATTER;
		explode Raim2 type NOHEATCLOUD | SHATTER;
		explode Rbarr2 type NOHEATCLOUD | SHATTER;
		explode Rbflare2 type NOHEATCLOUD | SHATTER;
		explode Raim3 type NOHEATCLOUD | SHATTER;
		explode Rbarr3 type NOHEATCLOUD | SHATTER;
		explode Rbflare3 type NOHEATCLOUD | SHATTER;
		explode luparm type NOHEATCLOUD | SHATTER;
		explode Larm type NOHEATCLOUD | SHATTER;
		explode lhand type NOHEATCLOUD | SHATTER;
		explode Lweapon type NOHEATCLOUD | SHATTER;
		explode Laim1 type NOHEATCLOUD | SHATTER;
		explode Lbarr1 type NOHEATCLOUD | SHATTER;
		explode Lbflare1 type NOHEATCLOUD | SHATTER;
		explode Laim2 type NOHEATCLOUD | SHATTER;
		explode Lbarr2 type NOHEATCLOUD | SHATTER;
		explode Lbflare2 type NOHEATCLOUD | SHATTER;
		explode Laim3 type NOHEATCLOUD | SHATTER;
		explode Lbarr3 type NOHEATCLOUD | SHATTER;
		explode Lbflare3 type NOHEATCLOUD | SHATTER;
		explode launcher type NOHEATCLOUD | SHATTER;
		explode Rmissflare type NOHEATCLOUD | SHATTER;
		explode Lmissflare type NOHEATCLOUD | SHATTER;
		explode pelvis type NOHEATCLOUD | SHATTER;
		explode Rhileg type NOHEATCLOUD | SHATTER;
		explode Rleg type NOHEATCLOUD | SHATTER;
		explode Rdownleg type NOHEATCLOUD | SHATTER;
		explode Rfoot type NOHEATCLOUD | SHATTER;
		explode Rbackfing type NOHEATCLOUD | SHATTER;
		explode Rfinger type NOHEATCLOUD | SHATTER;
		explode Rfinger1 type NOHEATCLOUD | SHATTER;
		explode Rfinger2 type NOHEATCLOUD | SHATTER;
		explode Lhileg type NOHEATCLOUD | SHATTER;
		explode Lleg type NOHEATCLOUD | SHATTER;
		explode Ldownleg type NOHEATCLOUD | SHATTER;
		explode Lfoot type NOHEATCLOUD | SHATTER;
		explode Lbackfing type NOHEATCLOUD | SHATTER;
		explode Lfinger type NOHEATCLOUD | SHATTER;
		explode Lfinger1 type NOHEATCLOUD | SHATTER;
		explode Lfinger2 type NOHEATCLOUD | SHATTER;
		explode head type NOHEATCLOUD | SHATTER;
		explode Raim type NOHEATCLOUD | SHATTER;
		explode Rbarrl type NOHEATCLOUD | SHATTER;
		explode Rheadflare type NOHEATCLOUD | SHATTER;
		explode Laim type NOHEATCLOUD | SHATTER;
		explode Lbarrl type NOHEATCLOUD | SHATTER;
		explode Lheadflare type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode ruparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rarm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rhand type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rweapon type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Raim1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbarr1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbflare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Raim2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbarr2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbflare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Raim3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbarr3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbflare3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode luparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Larm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lhand type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lweapon type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Laim1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbarr1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbflare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Laim2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbarr2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbflare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Laim3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbarr3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbflare3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode launcher type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rmissflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lmissflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rhileg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rdownleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbackfing type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rfinger type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rfinger1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rfinger2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lhileg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Ldownleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbackfing type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lfinger type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lfinger1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lfinger2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode head type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Raim type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rbarrl type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Rheadflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Laim type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lbarrl type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode Lheadflare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
