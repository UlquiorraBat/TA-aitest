#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, socle, ruparm, luparm, pelvis, lthigh, rthigh, rleg, rfoot, lleg, lfoot,
       lloarm, lhand, rloarm, rhand, nanoturd, nanobase, nanoturn, 
       nano1, nano2, lath1, lath2;

static-var  bEmit, bAiming, statechg_DesiredState, statechg_StateChanging;

activatescr()
{
	if( TRUE )
	{
		move nano1 to y-axis [6.] speed [6.];
		move nano2 to y-axis [8.] speed [8.];
		wait-for-move nano1 along y-axis;
	}
	if( TRUE )
	{
		spin nano1 around y-axis speed <360.>;
		spin nano2 around y-axis speed <90.>;
	}
	sleep 750;
}

deactivatescr()
{
	set INBUILDSTANCE to 0;
	move nanobase to z-axis [0.] speed [15.];
	
	turn nanoturd to y-axis <0.> speed <100.>;
	
	if( TRUE )
	{
		stop-spin nano1 around y-axis;
		stop-spin nano2 around y-axis;
		turn nano1 to y-axis <0.> speed <360.>;
		turn nano2 to y-axis <0.> speed <360.>;
		wait-for-turn nano2 around y-axis;
		wait-for-turn nano1 around y-axis;
	}
	if( TRUE )
	{
		move nano1 to y-axis [0.] speed [6.];
		move nano2 to y-axis [0.] speed [8.];
		wait-for-move nano1 along y-axis;
	}
	sleep 50;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
			bAiming = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
			bAiming = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Stop()
{
	set INBUILDSTANCE to 0;
	move nanobase to z-axis [0.] speed [15.];
	turn nanoturd to y-axis <0.> now;
	call-script deactivatescr();
}

walk()
{
	while( TRUE )
	{
		if( TRUE )
		{
			turn pelvis to z-axis <-3.> speed <20.000000>;
			turn lthigh to x-axis <34.> speed <90.000000>;
			turn rthigh to x-axis <0.> speed <90.000000>;
			turn rleg to x-axis <25.> speed <90.000000>;
			turn rfoot to x-axis <-32.> speed <90.000000>;
			turn lleg to x-axis <7.> speed <90.000000>;
			turn lfoot to x-axis <-6.> speed <90.000000>;
			turn ruparm to x-axis <23.> speed <90.000000>;
			turn luparm to x-axis <-51.> speed <90.000000>;
			turn lloarm to x-axis <21.> speed <90.000000>;
			turn lhand to x-axis <36.> speed <90.000000>;
			turn rloarm to x-axis <0.> speed <90.000000>;
			turn rhand to x-axis <-6.> speed <90.000000>;
			sleep 180;
		}
		if( TRUE )
		{
			turn lthigh to x-axis <47.> speed <90.000000>;
			turn rthigh to x-axis <7.> speed <90.000000>;
			turn rleg to x-axis <-20.> speed <90.000000>;
			turn rfoot to x-axis <17.> speed <90.000000>;
			turn lleg to x-axis <0.> speed <90.000000>;
			turn lfoot to x-axis <0.> speed <90.000000>;
			turn ruparm to x-axis <7.> speed <90.000000>;
			turn luparm to x-axis <-29.> speed <90.000000>;
			turn lloarm to x-axis <14.> speed <90.000000>;
			turn lhand to x-axis <16.> speed <90.000000>;
			turn rloarm to x-axis <4.> speed <90.000000>;
			turn rhand to x-axis <106.> speed <90.000000>;
			sleep 180;
		}
		if( TRUE )
		{
			turn lthigh to x-axis <51.> speed <90.000000>;
			turn rthigh to x-axis <9.> speed <90.000000>;
			turn rleg to x-axis <11.> speed <90.000000>;
			turn rfoot to x-axis <-10.> speed <90.000000>;
			turn lleg to x-axis <0.> speed <90.000000>;
			turn lfoot to x-axis <18.> speed <90.000000>;
			turn luparm to x-axis <0.> speed <90.000000>;
			turn lloarm to x-axis <0.> speed <90.000000>;
			turn lhand to x-axis <0.> speed <90.000000>;
			turn rloarm to x-axis <-41.> speed <90.000000>;
			turn rhand to x-axis <143.> speed <90.000000>;
			sleep 180;
		}
		if( TRUE )
		{
			turn lthigh to x-axis <1.> speed <90.000000>;
			turn rthigh to x-axis <21.> speed <90.000000>;
			turn rleg to x-axis <4.> speed <90.000000>;
			turn rfoot to x-axis <-15.> speed <90.000000>;
			turn lleg to x-axis <35.> speed <90.000000>;
			turn lfoot to x-axis <1.> speed <90.000000>;
			turn ruparm to x-axis <-18.> speed <90.000000>;
			turn luparm to x-axis <18.> speed <90.000000>;
			turn lloarm to x-axis <-3.> speed <90.000000>;
			turn lhand to x-axis <-5.> speed <90.000000>;
			sleep 180;
		}
		if( TRUE )
		{
			turn pelvis to z-axis <3.> speed <20.000000>;
			turn lthigh to x-axis <-16.> speed <90.000000>;
			turn rthigh to x-axis <36.> speed <90.000000>;
			turn rfoot to x-axis <-9.> speed <90.000000>;
			turn lleg to x-axis <55.> speed <90.000000>;
			turn lfoot to x-axis <-22.> speed <90.000000>;
			turn ruparm to x-axis <-49.> speed <90.000000>;
			turn luparm to x-axis <20.> speed <90.000000>;
			turn lloarm to x-axis <9.> speed <90.000000>;
			turn lhand to x-axis <-17.> speed <90.000000>;
			turn rloarm to x-axis <14.> speed <90.000000>;
			turn rhand to x-axis <46.> speed <90.000000>;
			sleep 180;
		}
		if( TRUE )
		{
			turn lthigh to x-axis <0.> speed <90.000000>;
			turn rthigh to x-axis <46.> speed <90.000000>;
			turn rfoot to x-axis <6.> speed <90.000000>;
			turn lleg to x-axis <0.> speed <90.000000>;
			turn lfoot to x-axis <0.> speed <90.000000>;
			turn ruparm to x-axis <-34.> speed <90.000000>;
			turn luparm to x-axis <11.> speed <90.000000>;
			turn lloarm to x-axis <0.> speed <90.000000>;
			turn lhand to x-axis <117.> speed <90.000000>;
			turn rhand to x-axis <20.> speed <90.000000>;
			sleep 180;
		}
		if( TRUE )
		{
			turn lthigh to x-axis <11.> speed <90.000000>;
			turn rthigh to x-axis <60.> speed <90.000000>;
			turn rfoot to x-axis <11.> speed <90.000000>;
			turn lleg to x-axis <13.> speed <90.000000>;
			turn lfoot to x-axis <-15.> speed <90.000000>;
			turn ruparm to x-axis <5.> speed <90.000000>;
			turn luparm to x-axis <-9.> speed <90.000000>;
			turn lloarm to x-axis <-29.> speed <90.000000>;
			turn lhand to x-axis <149.> speed <90.000000>;
			turn rloarm to x-axis <-6.> speed <90.000000>;
			turn rhand to x-axis <7.> speed <90.000000>;
			sleep 180;
		}
		turn pelvis to z-axis <0.> speed <20.000000>;
		turn lthigh to x-axis <37.> speed <90.000000>;
		turn rthigh to x-axis <27.> speed <90.000000>;
		turn rleg to x-axis <29.> speed <90.000000>;
		turn lleg to x-axis <-0.> speed <90.000000>;
		turn lfoot to x-axis <-17.> speed <90.000000>;
		turn luparm to x-axis <-21.> speed <90.000000>;
		turn lloarm to x-axis <-41.> speed <90.000000>;
		turn lhand to x-axis <90.> speed <90.000000>;
		turn rloarm to x-axis <4.> speed <90.000000>;
		turn rhand to x-axis <-10.> speed <90.000000>;
		sleep 180;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from pelvis;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bEmit = 1;
	call-script InitState();
	start-script SmokeUnit();
}

StartMoving()
{
	signal 2;
	set-signal-mask 2;
	start-script walk();
}

StopMoving()
{
	move pelvis to y-axis [0.] speed <90.000000>;
	move ruparm to y-axis [0.] speed <90.000000>;
	move ruparm to z-axis [0.] speed <90.000000>;
	move luparm to y-axis [0.] speed <90.000000>;
	move luparm to z-axis [0.] speed <90.000000>;
	turn pelvis to z-axis <0.> speed <90.000000>;
	turn pelvis to z-axis <0.> speed <90.000000>;
	turn lthigh to x-axis <0.> speed <90.000000>;
	turn rthigh to x-axis <0.> speed <90.000000>;
	turn rleg to x-axis <0.> speed <90.000000>;
	turn rfoot to x-axis <0.> speed <90.000000>;
	turn lleg to x-axis <0.> speed <90.000000>;
	turn lfoot to x-axis <0.> speed <90.000000>;
	turn ruparm to x-axis <0.> speed <90.000000>;
	turn luparm to x-axis <0.> speed <90.000000>;
	turn lloarm to x-axis <0.> speed <90.000000>;
	turn lhand to x-axis <0.> speed <90.000000>;
	turn rloarm to x-axis <0.> speed <90.000000>;
	turn rhand to x-axis <0.> speed <90.000000>;
	signal 2;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	start-script RequestState(0);
	while( bAiming )
	{
		sleep 100;
	}
	signal 8;
	turn nanoturd to y-axis Func_Var_1 speed <180.>;
	move nanobase to z-axis [25.] speed [15.];
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal 8;
	set-signal-mask 8;
	sleep 2000;
	set-signal-mask 0;
	signal 8;
	start-script RequestState(1);
}

QueryNanoPiece(piecenum)
{
	if( bEmit == 1 )
	{
		piecenum = lath1;
	}
	if( bEmit == 2 )
	{
		piecenum = lath2;
	}
	++bEmit;
	if( bEmit == 3 )
	{
		bEmit = 1;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lfoot type NOHEATCLOUD;
		explode lhand type NOHEATCLOUD ;
		explode lleg type NOHEATCLOUD ;
		explode lloarm type NOHEATCLOUD ;
		explode lthigh type NOHEATCLOUD ;
		explode luparm type NOHEATCLOUD ;
		explode rfoot type NOHEATCLOUD ;
		explode rhand type NOHEATCLOUD ;
		explode rleg type NOHEATCLOUD ;
		explode rloarm type NOHEATCLOUD ;
		explode rthigh type NOHEATCLOUD ;
		explode ruparm type NOHEATCLOUD ;
		explode pelvis type NOHEATCLOUD ;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lfoot type FALL | NOHEATCLOUD ;
		explode lhand type FALL | NOHEATCLOUD ;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode lloarm type FALL | NOHEATCLOUD ;
		explode lthigh type FALL | NOHEATCLOUD ;
		explode luparm type FALL | NOHEATCLOUD ;
		explode rfoot type FALL | NOHEATCLOUD ;
		explode rhand type FALL | NOHEATCLOUD ;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode rloarm type FALL | NOHEATCLOUD ;
		explode rthigh type FALL | NOHEATCLOUD ;
		explode ruparm type FALL | NOHEATCLOUD ;
		explode pelvis type NOHEATCLOUD ;
		return (corpsetype);
	}
	corpsetype = 3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode pelvis type NOHEATCLOUD ;
	return (corpsetype);
}
