#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, torso, shield, rarm, larm, sleeves,
		lflegy, lfleg, lfleg2, lfleg3, rflegy, rfleg, rfleg2, rfleg3,
       lblegy, lbleg, lbleg2, lbleg3, rblegy, rbleg, rbleg2, rbleg3,
       tail1, tail2, barrel, flare, circle,
       rfirept, lfirept, torsoflare01, torsoflare02, torsoflare03, torsoflare04;

static-var  bMoving, bAiming, bFlaming, gun_1, gun_2, Main_Gun_Heading;

// Signal definitions
#define SIG_AIM_1				2
#define SIG_AIM_2				4
#define SIG_AIM_3				8
#define SIG_AIM_4				16

lua_FlameShot(Func_Var_1)
{
}

PilotLight(Func_Var_1)
{
	while( TRUE )
	{
		while( bFlaming )
		{
			sleep 100;
		}
		emit-sfx 1024 from lfirept;
		emit-sfx 1024 from rfirept;
		sleep 100;
	}
}

Playtail()
{
	while( TRUE )
	{
		if( !bAiming)
		{
			turn tail1 to y-axis <4> speed <0.25>;
			turn tail1 to x-axis <-4> speed <0.25>;			
			turn tail2 to x-axis <-12> speed <0.5>;		
			sleep 2000;
		}
		if( !bAiming)
		{
			turn tail1 to y-axis <-4> speed <0.25.>;			
			turn tail1 to x-axis <4> speed <0.25.>;
			turn tail2 to x-axis <12> speed <0.5>;
			sleep 2000;
		}
		sleep 2000;
	}
}
	

MotionControl(Moving, Aiming, JustMoved)
	{
	while( TRUE )
		{
		Moving = bMoving;
		Aiming = bAiming;
		if( Moving )
			{
			if( bMoving )
				{
				move pelvis to y-axis [0.00] speed [1.00];
				move pelvis to z-axis [0.50] speed [2.00];
				
				turn lblegy to y-axis <62.50> speed <20.00>;
				turn lbleg to z-axis <-20.00> speed <30.00>;
				turn lbleg2 to z-axis <50.00> speed <55.00>;
				turn lbleg3 to z-axis <-55.00> speed <55.00>;
				
				turn rblegy to y-axis <0.00> speed <30.00>;
				turn rbleg to z-axis <-20.00> speed <10.00>;
				turn rbleg2 to z-axis <50.00> speed <10.00>;
				turn rbleg3 to z-axis <-30.00> speed <12.00>;
				
				turn lflegy to y-axis <-45.00> speed <20.00>;
				turn lfleg to z-axis <-10.00> speed <15.00>;
				turn lfleg2 to z-axis <-10.00> speed <45.00>;
				turn lfleg3 to z-axis <-25.00> speed <30.00>;
				
				turn rflegy to y-axis <0.00> speed <30.00>;
				turn rfleg to z-axis <-20.00> speed <6.00>;
				turn rfleg2 to z-axis <30.00> speed <12.00>;
				turn rfleg3 to z-axis <-15.00> speed <10.00>;
				
				sleep 250;
				}
			
			if( bMoving )
				{
				//move pelvis to y-axis [-0.50] speed [2.00];
				move pelvis to z-axis [0.00] speed [1.00];
				turn lbleg to z-axis <-10.00> speed <9.00>;
				turn lbleg2 to z-axis <10.00> speed <35.00>;
				turn lbleg3 to z-axis <-25.00> speed <25.00>;
				turn rbleg2 to z-axis <30.00> speed <15.00>;
				turn rbleg3 to z-axis <-15.00> speed <12.00>;
			
				turn lfleg to z-axis <-20.00> speed <9.00>;
				turn lfleg2 to z-axis <-15.00> speed <35.00>;
				turn lfleg3 to z-axis <-20.00> speed <25.00>;
				turn rfleg2 to z-axis <30.00> speed <16.00>;
				turn rfleg3 to z-axis <-30.00> speed <12.00>;
				sleep 250;
				}
			
			if( bMoving )
				{
				//move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [-0.50] speed [1.00];
				
				turn lblegy to y-axis <37.50> speed <20.00>;
				
				turn lbleg to z-axis <10.00> speed <15.00>;
				turn lbleg2 to z-axis <-40.00> speed <45.00>;
				turn lbleg3 to z-axis <15.00> speed <35.00>;
			
				
				turn rblegy to y-axis <-37.50> speed <30.00>;
			
				turn rbleg to z-axis <-12.50> speed <6.00>;
				turn rbleg2 to z-axis <15.00> speed <12.00>;
				turn rbleg3 to z-axis <-2.50> speed <10.00>;
			
				
				turn lflegy to y-axis <-37.50> speed <20.00>;
			
				turn lfleg to z-axis <12.50> speed <30.00>;
				turn lfleg2 to z-axis <-15.00> speed <45.00>;
				turn lfleg3 to z-axis <2.50> speed <45.00>;
			
				
				turn rflegy to y-axis <37.50> speed <30.00>;
			
				turn rfleg to z-axis <-10.00> speed <9.00>;
				turn rfleg2 to z-axis <30.00> speed <9.00>;
				turn rfleg3 to z-axis <-15.00> speed <12.00>;
			
				
				sleep 250;
				}
			////
			if( bMoving )
				{
				//move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [0.50] speed [2.00];
				
				turn lblegy to y-axis <0.00> speed <12.00>;
			
				turn lbleg to z-axis <20.00> speed <9.00>;
				turn lbleg2 to z-axis <-50.00> speed <9.00>;
				turn lbleg3 to z-axis <30.00> speed <12.00>;
			
				
				turn rblegy to y-axis <-62.50> speed <20.00>;
			
				turn rbleg to z-axis <20.00> speed <25.00>;
				turn rbleg2 to z-axis <-50.00> speed <45.00>;
				turn rbleg3 to z-axis <55.00> speed <45.00>;
			
				
				turn lflegy to y-axis <0.00> speed <30.00>;
			
				turn lfleg to z-axis <20.00> speed <15.00>;
				turn lfleg2 to z-axis <-20.00> speed <12.00>;
				turn lfleg3 to z-axis <15.00> speed <10.00>;
			
				
				turn rflegy to y-axis <45.50> speed <20.00>;
			
				turn rfleg to z-axis <10.00> speed <15.00>;
				turn rfleg2 to z-axis <0.00> speed <80.00>;
				turn rfleg3 to z-axis <25.00> speed <30.00>;
			
				
				sleep 250;
				}
			
			if( bMoving )
				{
				move pelvis to z-axis [0.00] speed [1.00];
				turn lbleg2 to z-axis <-30.00> speed <15.00>;
				turn lbleg3 to z-axis <15.00> speed <12.00>;
				turn rbleg to z-axis <10.00> speed <9.00>;
				turn rbleg2 to z-axis <-10.00> speed <30.00>;
				turn rbleg3 to z-axis <25.00> speed <30.00>;
				turn lfleg2 to z-axis <-30.00> speed <12.00>;
				turn lfleg3 to z-axis <30.00> speed <12.00>;
				turn rfleg to z-axis <20.00> speed <9.00>;
				turn rfleg2 to z-axis <-15.00> speed <30.00>;
				turn rfleg3 to z-axis <30.00> speed <30.00>;				
				sleep 250;
				}
			
			if( bMoving )
				{
				move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [-0.50] speed [2.00];
				
				turn lblegy to y-axis <37.50> speed <30.00>;
				turn lbleg to z-axis <12.50> speed <15.00>;
				turn lbleg2 to z-axis <-15.00> speed <12.00>;
				turn lbleg3 to z-axis <2.50> speed <25.00>;
					
				turn rblegy to y-axis <-37.50> speed <20.00>;
				turn rbleg to z-axis <-10.00> speed <12.00>;
				turn rbleg2 to z-axis <18.00> speed <40.00>;
				turn rbleg3 to z-axis <-15.00> speed <25.00>;
							
				turn lflegy to y-axis <-37.50> speed <30.00>;
				turn lfleg to z-axis <10.00> speed <9.00>;
				turn lfleg2 to z-axis <-30.00> speed <9.00>;
				turn lfleg3 to z-axis <15.00> speed <12.00>;
							
				turn rflegy to y-axis <37.50> speed <20.00>;
				turn rfleg to z-axis <-12.50> speed <25.00>;
				turn rfleg2 to z-axis <15.00> speed <45.00>;
				turn rfleg3 to z-axis <-2.50> speed <45.00>;
							
				sleep 250;
				}
			JustMoved = 1;
			}
		if( !Moving )
			{
			if( JustMoved )
				{
				move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [0.00] speed [2.00];
				
				turn lblegy to y-axis <45.00> speed <25.00>;
				turn lbleg to z-axis <0.00> speed <25.00>;
				turn lbleg2 to z-axis <0.00> speed <25.00>;
				turn lbleg3 to z-axis <0.00> speed <25.00>;
			
				turn rblegy to y-axis <-45.00> speed <25.00>;
				turn rbleg to z-axis <0.00> speed <25.00>;
				turn rbleg2 to z-axis <0.00> speed <25.00>;
				turn rbleg3 to z-axis <0.00> speed <25.00>;
			
				turn lflegy to y-axis <-45.00> speed <25.00>;
				turn lfleg to z-axis <0.00> speed <25.00>;
				turn lfleg2 to z-axis <-30.00> speed <25.00>;
				turn lfleg3 to z-axis <0.00> speed <25.00>;
			
				turn rflegy to y-axis <45.00> speed <25.00>;
				turn rfleg to z-axis <0.00> speed <25.00>;
				turn rfleg2 to z-axis <0.00> speed <25.00>;
				turn rfleg3 to z-axis <0.00> speed <25.00>;
			
				JustMoved = 0;
				}
			sleep 40;
			}
		}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 135;
	}
	
	start-script MotionControl();
	start-script PilotLight();
	start-script Playtail();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from pelvis;
			emit-sfx smoketype from tail1;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = 0;
	bAiming = 0;
	gun_1 = 0;
	gun_2 = 0;
	Main_Gun_Heading = 0;
	turn lflegy to y-axis <-45.00> now;
	turn rflegy to y-axis <45.00> now;
	turn lblegy to y-axis <45.00> now;
	turn rblegy to y-axis <-45.00> now;
	start-script Smokeunit();
}

RestoreAfterDelay()
{
	sleep 500;
	spin circle around z-axis speed <0.> accelerate <-1.0>;
	sleep 4500;
	Main_Gun_Heading = 0;
	bAiming = 0;
	bFlaming = 0;	
	turn torso to y-axis <0.> speed <20.000000>;
	turn barrel to x-axis <0.> speed <20.000000>;
	turn sleeves to x-axis <0.> speed <20.000000>;
	turn tail1 to x-axis <0.> speed <20.000000>;
}

AimFromPrimary(PieceNum)
{
	PieceNum = barrel;
}

AimPrimary(heading, Pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	bAiming = 1;
	Main_Gun_Heading = heading;
	turn torso to y-axis heading speed <50.000000>;
	turn barrel to x-axis <-12.0> - pitch speed <50.000000>;
	turn tail1 to x-axis <12.0> speed <50.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn tail1 around x-axis;
	wait-for-turn sleeves around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

FirePrimary()
{
	spin circle around z-axis speed <25.0> accelerate <1.0>;
	sleep 1000;
}

QueryPrimary(PieceNum)
{
	piecenum = flare;
}

AimFromSecondary(PieceNum)
{
	PieceNum = torso;
}

AimSecondary(heading, Pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	wait-for-turn torso around y-axis;
	return(1);
}

FireSecondary()
{
	++gun_1;
	if( gun_1 == 4 )
	{
		gun_1 = 0;
	}
}

QuerySecondary(PieceNum)
{
	if( gun_1 == 0 )
	{
		piecenum = torsoflare01;
	}
	if( gun_1 == 1 )
	{
		piecenum = torsoflare02;
	}
	if( gun_1 == 2 )
	{
		piecenum = torsoflare03;
	}
	if( gun_1 == 3 )
	{
		piecenum = torsoflare04;
	}
}

AimFromWeapon3(PieceNum)
{
	PieceNum = torso;
}

AimWeapon3(heading, Pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	bFlaming = 1;
	turn sleeves to x-axis <0.0> - pitch speed <50.000000>;	
	wait-for-turn torso around y-axis;
	wait-for-turn sleeves around x-axis;
	return(1);
}

Shot3()
{
	call-script lua_FlameShot(3);
	return (1);
}

QueryWeapon3(PieceNum)
{
	piecenum = lfirept;
}

AimFromWeapon4(PieceNum)
{
	PieceNum = torso;
}

AimWeapon4(heading, Pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	bFlaming = 1;
	wait-for-turn torso around y-axis;
	wait-for-turn sleeves around x-axis;
	return(1);
}

Shot4()
{
	call-script lua_FlameShot(4);
	return (1);
}

QueryWeapon4(PieceNum)
{
	piecenum = rfirept;
}

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(severity, corpseType)
{

	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pelvis type NOHEATCLOUD;
		explode tail1 type NOHEATCLOUD;
		explode tail2 type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD;
		explode larm type NOHEATCLOUD;
		explode rarm type NOHEATCLOUD;
		explode rblegy type NOHEATCLOUD;
		explode lbleg type NOHEATCLOUD;
		explode lfleg2 type NOHEATCLOUD;
		explode shield type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pelvis type NOHEATCLOUD  | SHATTER;
		explode tail1 type NOHEATCLOUD  | SHATTER;
		explode tail2 type NOHEATCLOUD  | SHATTER;
		explode barrel type NOHEATCLOUD  | SHATTER;
		explode larm type NOHEATCLOUD  | SHATTER;
		explode rarm type NOHEATCLOUD  | SHATTER;
		explode rblegy type NOHEATCLOUD  | SHATTER;
		explode lbleg type NOHEATCLOUD  | SHATTER;
		explode lfleg2 type NOHEATCLOUD  | SHATTER;
		explode shield type NOHEATCLOUD  | SHATTER;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode pelvis type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode tail1 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode tail2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode barrel type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode larm type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode rarm type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode rblegy type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode lbleg type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode lfleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode shield type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode torso type NOHEATCLOUD;
}