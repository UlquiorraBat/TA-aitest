#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, launcher1, launcher2, launcher3, turret, pitchturret, msl1, msl2, msl3, flare1, flare2, flare3;

static-var  msl_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	msl_1 = 1;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	turn turret to y-axis heading speed <450.000000>;
	turn pitchturret to x-axis <0.000000> - pitch speed <450.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	return (1);
}

RestoreMsl(numberMsl)
{
	if( numberMsl == 1 )
	{
		sleep 1000;
		move msl1 to z-axis [0.0] speed [3.0];
	}
	if( numberMsl == 2 )
	{
		sleep 1000;
		move msl2 to z-axis [0.0] speed [3.0];
	}
	if( numberMsl == 3 )
	{
		sleep 1000;
		move msl3 to z-axis [0.0] speed [3.0];
	}	
}

FirePrimary()
{
	if( msl_1 == 1 )
	{
		move msl1 to z-axis [-2.4] now;
		start-script RestoreMsl(msl_1);
	}
	if( msl_1 == 2 )
	{
		move msl2 to z-axis [-2.4] now;
		start-script RestoreMsl(msl_1);
	}
	if( msl_1 == 3 )
	{
		move msl3 to z-axis [-2.4] now;
		start-script RestoreMsl(msl_1);
	}
	++msl_1;
	if( msl_1 == 4 )
	{
		msl_1 = 1;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( msl_1 == 1 )
	{
		piecenum = flare1;
	}
	if( msl_1 == 2 )
	{
		piecenum = flare2;
	}
	if( msl_1 == 3 )
	{
		piecenum = flare3;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pitchturret type NOHEATCLOUD;
		explode msl1 type NOHEATCLOUD;
		explode msl2 type NOHEATCLOUD;
		explode msl3 type NOHEATCLOUD;
		explode launcher1 type NOHEATCLOUD;
		explode launcher2 type NOHEATCLOUD;
		explode launcher3 type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pitchturret type NOHEATCLOUD;
		explode msl1 type NOHEATCLOUD | FALL;
		explode msl2 type NOHEATCLOUD | FALL;
		explode msl3 type NOHEATCLOUD | SHATTER;
		explode launcher1 type NOHEATCLOUD | FALL;
		explode launcher2 type NOHEATCLOUD | FALL;
		explode launcher3 type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode pitchturret type NOHEATCLOUD;
	explode msl1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode msl2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode msl3 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode launcher1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode launcher2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode launcher3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD;
	return (corpsetype);
}
