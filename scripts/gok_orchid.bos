#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, core, decor, decor1, decor2, decor3, decor4, decor5, decor6, decor7, decor8, socle,
       turret, sleeves, pitchturretrecoil, barrel1, flare1, system1a, system1b, system1c, system1bturn, system1cturn;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from barrel1;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from socle;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	turn system1bturn to z-axis <-120.> now;
	turn system1cturn to z-axis <120.> now;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <30.000000>;
	turn sleeves to x-axis <0.000000> - pitch speed <20.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare1;
	move barrel1 to z-axis [-2.0] speed [25.];		
	sleep 100;
	
	turn pitchturretrecoil to x-axis <-10.> speed <25.>;
	turn system1a to x-axis <-15.> speed <150.>;
	turn system1b to x-axis <-15.> speed <150.>;
	turn system1c to x-axis <-15.> speed <150.>;
	sleep 100;
		
	turn pitchturretrecoil to x-axis <-10.> speed <10.>;
	turn system1a to x-axis <-15.> speed <90.>;
	turn system1b to x-axis <-15.> speed <90.>;
	turn system1c to x-axis <-15.> speed <90.>;
	sleep 100;
		
	turn pitchturretrecoil to x-axis <-10.> speed <5.>;
	turn system1a to x-axis <0.> speed <14.>;
	turn system1b to x-axis <0.> speed <14.>;
	turn system1c to x-axis <0.> speed <14.>;
	sleep 250;
	
	turn pitchturretrecoil to x-axis <0.> speed <4.>;
	move barrel1 to z-axis [0.] speed [1.];
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode socle type NOHEATCLOUD;
		explode decor2 type NOHEATCLOUD | SHATTER;
		explode decor1 type NOHEATCLOUD | SHATTER;
		explode decor3 type NOHEATCLOUD | SHATTER;
		explode decor5 type NOHEATCLOUD | SHATTER;
		explode decor4 type NOHEATCLOUD | SHATTER;
		explode decor6 type NOHEATCLOUD | SHATTER;
		explode decor8 type NOHEATCLOUD | BITMAP5;
		explode decor7 type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode socle type NOHEATCLOUD | SHATTER;
		explode sleeves type SHATTER | NOHEATCLOUD;
		explode decor2 type NOHEATCLOUD | SHATTER;
		explode decor1 type NOHEATCLOUD | SHATTER;
		explode decor3 type NOHEATCLOUD | SHATTER;
		explode decor5 type NOHEATCLOUD | SHATTER;
		explode decor4 type NOHEATCLOUD | SHATTER;
		explode decor6 type NOHEATCLOUD | SHATTER;
		explode decor8 type NOHEATCLOUD | SHATTER;
		explode decor7 type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode socle type NOHEATCLOUD | SHATTER;
	explode sleeves type SHATTER | BITMAP2;
	explode decor2 type NOHEATCLOUD | SHATTER;
	explode decor1 type NOHEATCLOUD | SHATTER;
	explode decor3 type NOHEATCLOUD | SHATTER;
	explode decor5 type NOHEATCLOUD | SHATTER;
	explode decor4 type NOHEATCLOUD | SHATTER;
	explode decor6 type NOHEATCLOUD | SHATTER;
	explode decor8 type NOHEATCLOUD | SHATTER;
	explode decor7 type NOHEATCLOUD | SHATTER;
	explode turret type NOHEATCLOUD | SHATTER;
	return (corpsetype);
}
