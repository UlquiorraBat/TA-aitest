#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, lleg, lboot, ltoe, rleg, rboot, rtoe, torso,
       larm, larmrecoil, lgun, lgunrecoil, lzap, lflare,
       rarm, rarmrecoil, rgun, rgunrecoil, rzap, rflare,
       head, jet1, jet2;

static-var  bMoving, bAiming, bJumpAngle, bJumping;

// Signal definitions
#define SIG_AIM_1		2
#define SIG_AIM_2		4
#define SIG_MOVE		8
#define SIG_JUMP		16


JumpControl(Func_Var_1)
{
	bJumpAngle = Func_Var_1;
}

Jumping()
{
	while( TRUE )
	{
		if( bJumpAngle < 75 )
		{
			emit-sfx 1024 + 0 from jet1;
			emit-sfx 1024 + 0 from jet2;
			sleep 444;
		}
		sleep 1200;
	}
	sleep 1200;
}

BeginJump()
{
	bJumping = 1;
	bMoving = FALSE;
	signal SIG_JUMP;
	set-signal-mask SIG_JUMP;
	start-script Jumping();
	wait-for-turn lleg around x-axis;
	turn lleg to x-axis <-60.00> speed <80.00>;
	turn lboot to x-axis <60.00> speed <20.00>;
	turn ltoe to x-axis <20.00> speed <60.00>;
	turn rleg to x-axis <-60.00> speed <120.00>;
	turn rboot to x-axis <60.00> speed <40.00>;
	turn rtoe to x-axis <20.00> speed <60.00>;
}

EndJump()
{
	bJumping = 0;
	turn lleg to x-axis <0.00> speed <80.00>;
	turn lboot to x-axis <0.00> speed <20.00>;
	turn ltoe to x-axis <0.00> speed <60.00>;
	turn rleg to x-axis <0.00> speed <120.00>;
	turn rboot to x-axis <0.00> speed <40.00>;
	turn rtoe to x-axis <0.00> speed <60.00>;
}

MotionControl(Moving, Aiming, JustMoved)
{
	JustMoved = 1;
	while( TRUE )
	{		
		if( bMoving )
		{
			if( bMoving && !bjumping  )
			{
				turn lleg to x-axis <25.00> speed <80.00>;
				turn lboot to x-axis <-10.00> speed <20.00>;
				turn ltoe to x-axis <-20.00> speed <60.00>;
				turn rleg to x-axis <-30.00> speed <120.00>;
				turn rboot to x-axis <50.00> speed <40.00>;
				//turn rtoe to x-axis <0.00> speed <0.00>;
				move pelvis to y-axis [0.90] speed [5.40];
				if( !bAiming )
				{
					turn larm to x-axis <-10.00> speed <60.00>;
					turn rarm to x-axis <10.00> speed <60.00>;
					turn lgun to x-axis <10.00> speed <40.00>;
					turn rgun to x-axis <10.00> speed <40.00>;
					turn torso to y-axis <-5.00> speed <40.00>;
					turn head to y-axis <10.00> speed <50.00>;
					turn torso to x-axis <5.00> speed <20.00>;
				}						
				sleep 350;
			}
			
			if( bMoving && !bjumping  )
			{
				turn lleg to x-axis <30.00> speed <60.00>;
				turn lboot to x-axis <20.00> speed <80.00>;
				turn ltoe to x-axis <10.00> speed <80.00>;
				turn rleg to x-axis <-30.00> speed <60.00>;
				turn rboot to x-axis <10.00> speed <100.00>;
				turn rtoe to x-axis <20.00> speed <60.00>;
				move pelvis to y-axis [-0.90] speed [5.20];
				if( !bAiming )
				{
					turn larm to x-axis <-10.00> speed <40.00>;
					turn rarm to x-axis <10.00> speed <40.00>;
					turn torso to x-axis <0.00> speed <20.00>;
				}
				sleep 350;
			}
			
			if( bMoving && !bjumping  )
			{
				turn lleg to x-axis <0.00> speed <100.00>;
				turn lboot to x-axis <90.00> speed <100.00>;
				turn ltoe to x-axis <0.00> speed <40.00>;
				turn rleg to x-axis <5.00> speed <90.00>;
				turn rboot to x-axis <0.00> speed <40.00>;
				turn rtoe to x-axis <0.00> speed <60.00>;
				move pelvis to y-axis [-0.45] speed [1.80];
				if( !bAiming )
				{
					turn larm to x-axis <10.00> speed <30.00>;
					turn rarm to x-axis <-10.00> speed <30.00>;
					turn lgun to x-axis <15.00> speed <50.00>;
					turn rgun to x-axis <15.00> speed <50.00>;
					turn torso to y-axis <0.00> speed <40.00>;
					turn head to y-axis <0.00> speed <50.00>;
					turn torso to x-axis <10.00> speed <40.00>;
				}
				sleep 350;
			}
			
			if( bMoving && !bjumping  )
			{
				turn lleg to x-axis <-30.00> speed <100.00>;
				turn lboot to x-axis <50.00> speed <40.00>;
				//turn ltoe to x-axis <0.00> speed <0.00>;
				turn rleg to x-axis <30.00> speed <60.00>;
				turn rboot to x-axis <-10.00> speed <40.00>;
				turn rtoe to x-axis <-20.00> speed <60.00>;
				move pelvis to y-axis [0.90] speed [5.40];
				if( !bAiming )
				{
					turn larm to x-axis <10.00> speed <60.00>;
					turn rarm to x-axis <-10.00> speed <60.00>;
					turn lgun to x-axis <10.00> speed <40.00>;
					turn rgun to x-axis <10.00> speed <40.00>;
					turn torso to y-axis <5.00> speed <40.00>;
					turn head to y-axis <-10.00> speed <60.00>;
					turn torso to x-axis <5.00> speed <20.00>;
				}
				sleep 350;
			}
			
			if( bMoving && !bjumping  )
			{
				turn lleg to x-axis <-40.00> speed <60.00>;
				turn lboot to x-axis <10.00> speed <100.00>;
				turn ltoe to x-axis <20.00> speed <60.00>;
				turn rleg to x-axis <30.00> speed <60.00>;
				turn rboot to x-axis <20.00> speed <80.00>;
				turn rtoe to x-axis <10.00> speed <80.00>;
				move pelvis to y-axis [-0.90] speed [7.20];
				if( !bAiming )
				{
					turn larm to x-axis <10.00> speed <40.00>;
					turn rarm to x-axis <-10.00> speed <40.00>;
					turn torso to x-axis <0.00> speed <20.00>;
				}
				sleep 350;
			}
			
			if( bMoving && !bjumping  )
			{
				turn lleg to x-axis <5.00> speed <180.00>;
				turn lboot to x-axis <0.00> speed <40.00>;
				turn ltoe to x-axis <0.00> speed <80.00>;
				turn rleg to x-axis <0.00> speed <200.00>;
				turn rboot to x-axis <90.00> speed <280.00>;
				turn rtoe to x-axis <0.00> speed <40.00>;
				move pelvis to y-axis [-0.45] speed [1.80];
				if( !bAiming )
				{
					turn larm to x-axis <-10.00> speed <40.00>;
					turn rarm to x-axis <10.00> speed <40.00>;
					turn lgun to x-axis <15.00> speed <60.00>;
					turn rgun to x-axis <15.00> speed <60.00>;
					turn torso to y-axis <0.00> speed <40.00>;
					turn head to y-axis <0.00> speed <60.00>;
					turn torso to x-axis <10.00> speed <40.00>;
				}
				sleep 350;
			}
			JustMoved = 1;
		}
		if( !Moving )
		{
			if( JustMoved )
			{
				turn lleg to x-axis <0.00> speed <180.00>;
				turn lboot to x-axis <0.00> speed <180.00>;
				turn ltoe to x-axis <0.00> speed <180.00>;
				turn rleg to x-axis <0.00> speed <180.00>;
				turn rboot to x-axis <0.00> speed <180.00>;
				turn rtoe to x-axis <0.00> speed <180.00>;
				move pelvis to y-axis [0.00] speed [7.20];
				turn torso to x-axis <0.00> speed <20.00>;
				if( !bAiming )
				{
					turn larm to x-axis <0.00> speed <120.00>;
					turn rarm to x-axis <0.00> speed <120.00>;
					turn lgun to x-axis <0.00> speed <60.00>;
					turn rgun to x-axis <0.00> speed <60.00>;
					turn torso to y-axis <0.00> speed <40.00>;
					turn head to y-axis <0.00> speed <60.00>;
				}
				JustMoved = 0;
			}
			sleep 100;
		}
	}
}


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script MotionControl();
		
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			
			emit-sfx smoketype from pelvis;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	bMoving = FALSE;
}
	
Create()
{
	bMoving = FALSE;
	bAiming = FALSE;		
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 4000;
	turn torso to y-axis <0.00> speed <120.00>;
}

AimFromWeapon1(PieceNum)
{
	PieceNum = torso;
}

AimWeapon1(Heading, Pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn torso to y-axis Heading speed <120.00>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return(1);
}

QueryWeapon1(piecenum)
{
	piecenum = lflare;
}

AimFromWeapon2(PieceNum)
{
	PieceNum = torso;
}

AimWeapon2(Heading, Pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	wait-for-turn torso around y-axis;
	return(1);
}

QueryWeapon2(piecenum)
{
	piecenum = rflare;
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType, Random)
{	
	if( Severity <= 50 )
	{
		CorpseType = 1;
		return (CorpseType);
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode rgunrecoil type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode lgunrecoil type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode lleg type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rtoe type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	if( Severity <= 75 )
	{
		CorpseType = 2;
		return (CorpseType);
	}
	CorpseType = 2;
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode rleg type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode ltoe type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	return (CorpseType);
}
