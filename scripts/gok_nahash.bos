#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, bigsphere, sphere, support,
       turret, sleeves, flare1, flare2,
       turret2, msl11, msl12, msl13, msl14, msl15, msl16;

static-var  gun_1, gun_2;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 0;
	gun_2 = 0;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 4000;
	move turret to y-axis [0.0] speed [1.00];
	turn sleeves to x-axis <0.0> speed <100.>;
	turn turret to y-axis <0.> speed <80.>;
}

RestoreAfterDelay2()
{
	sleep 2000;
	move turret2 to y-axis [0.0] speed [1.00];
	turn turret2 to x-axis <0.0> speed <80.>;
	turn turret2 to y-axis <0.> speed <80.>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	move turret to y-axis [4.00] speed [15.00];
	turn turret to y-axis heading speed <300.>;
	turn sleeves to x-axis <0.> - pitch speed <300.>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimTertiary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	move turret2 to y-axis [2.50] speed [15.00];
	turn turret2 to y-axis heading speed <300.>;
	turn turret2 to x-axis <0.> - pitch speed <300.>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn turret2 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FirePrimary()
{
	++gun_1;
	if( gun_1 == 2 )
	{
		gun_1 = 0;
	}
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}
	
FireTertiary()
{
	++gun_2;
	if( gun_2 == 6 )
	{
		gun_2 = 0;
	}
}

QueryTertiary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = msl11;
	}
	if( gun_2 == 1 )
	{
		piecenum = msl12;
	}
	if( gun_2 == 2 )
	{
		piecenum = msl13;
	}
	if( gun_2 == 3 )
	{
		piecenum = msl14;
	}
	if( gun_2 == 4 )
	{
		piecenum = msl15;
	}
	if( gun_2 == 5 )
	{
		piecenum = msl16;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = sleeves;
}

AimFromTertiary(piecenum)
{
	piecenum = turret2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode sleeves type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode sphere type NOHEATCLOUD;
		explode bigsphere type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode sleeves type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | SHATTER;
		explode turret2 type NOHEATCLOUD | SHATTER;
		explode sphere type NOHEATCLOUD | SHATTER;
		explode bigsphere type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode sleeves type NOHEATCLOUD | FALL | SMOKE | FIRE;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE;
	explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE;
	explode sphere type NOHEATCLOUD | FALL | SMOKE | FIRE;
	explode bigsphere type NOHEATCLOUD | FALL | SMOKE | FIRE;
	return (corpsetype);
}
