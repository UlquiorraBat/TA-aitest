#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, torso, luparm, ruparm,
		rthigh, lthigh, lleg, lfoot, rleg, rfoot,
		left_pack, right_pack, rack,
		barrel1, sbarrel1, flare1,
		barrel2, sbarrel2, flare2,
		barrel3, sbarrel3, flare3,
		barrel4, sbarrel4, flare4,
		barrel5, sbarrel5, flare5,
		barrel6, sbarrel6, flare6,
		barrel7, sbarrel7, flare7,
		barrel8, sbarrel8, flare8,		
		msl1, msl2, msl3, msl4, msl5, msl6, msl7, msl8,
		right_gun, left_gun, rcanon1, rcanon2, lcanon1, lcanon2, rflare, lflare;

static-var  bMoving, bAiming, restore_delay, Main_Gun_Heading, msl_1, msl_2, gun_1;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM_1			4
#define SIG_AIM_2			8
#define SIG_AIM_3			16
#define SIG_AIM_4			32
#define SIG_AIM_5			64
#define SIG_AIM_6			128
#define SIG_AIM_7			256
#define SIG_AIM_8			512
#define SIG_AIM_9			1024
#define SIG_AIM_10			2048
#define SIG_AIM_11			4096

walk()
{
	if( bMoving )
	{
		if( !bAiming )
		{
			turn luparm to x-axis <-5.0> speed <50.0>;
			turn luparm to x-axis <5.0> speed <35.0>;		
		}
		move pelvis to y-axis [5] speed [25.000000];
		turn lthigh to x-axis <20.0> speed <35.000000>;
		turn rthigh to x-axis <-10.0> speed <35.000000>;
		turn lfoot to x-axis <-5.0> speed <60.000000>;
		turn rfoot to x-axis <1.0> speed <45.000000>;
		turn rleg to x-axis <-10.0> speed <50.000000>;
		sleep 505;
		turn lfoot to x-axis <7.0> speed <60.000000>;
		turn rfoot to x-axis <3.0> speed <45.000000>;
		turn rleg to x-axis <20.0> speed <60.000000>;
		sleep 600;
		turn pelvis to z-axis <4.0> speed <3.000000>;
	}
	if( bMoving )
	{
		if( !bAiming )
		{
			turn luparm to x-axis <5.0> speed <50.0>;
			turn luparm to x-axis <-5.0> speed <35.0>;		
		}
		move pelvis to y-axis [3] speed [25.000000];
		turn lthigh to x-axis <-10.0> speed <37.000000>;
		turn rthigh to x-axis <10.0> speed <40.000000>;
		turn rfoot to x-axis <-3.0> speed <80.000000>;
		turn lleg to x-axis <-10.0> speed <80.000000>;
		sleep 1050;
		turn rfoot to x-axis <7.0> speed <60.000000>;
		turn lleg to x-axis <20.0> speed <60.000000>;
		sleep 600;
		turn pelvis to z-axis <-4.000000> speed <7.000000>;
	}
	while( bMoving )
	{
		if( bMoving )
		{
			if( !bAiming )
			{
				turn luparm to x-axis <-5.0> speed <50.0>;
				turn luparm to x-axis <5.0> speed <35.0>;		
			}
			move pelvis to y-axis [5] speed [25.000000];
			turn pelvis to y-axis <-5.000000> speed <10.000000>;
			turn pelvis to x-axis <-2.000000> speed <5.000000>;
			turn lthigh to x-axis <20.005495> speed <37.000000>;
			turn rthigh to x-axis <-20.005495> speed <40.000000>;
			turn lfoot to x-axis <-7.005495> speed <85.000000>;
			turn rleg to x-axis <-3.005495> speed <60.000000>;
			sleep 1050;
			turn lfoot to x-axis <7.005495> speed <60.000000>;
			turn rfoot to x-axis <7.005495> speed <45.000000>;
			turn rleg to x-axis <10.005495> speed <50.000000>;
			sleep 600;
			turn pelvis to z-axis <4.000000> speed <7.000000>;
		}
		if( bMoving )
		{
			if( !bAiming )
			{
				turn luparm to x-axis <5.0> speed <50.0>;
				turn luparm to x-axis <-5.0> speed <35.0>;		
			}
			move pelvis to y-axis [3] speed [25.000000];
			turn pelvis to y-axis <4.000000> speed <11.000000>;
			turn pelvis to x-axis <6.000000> speed <5.000000>;
			turn lthigh to x-axis <-20.005495> speed <35.000000>;
			turn rthigh to x-axis <20.005495> speed <45.000000>;
			turn rfoot to x-axis <-7.005495> speed <70.000000>;
			turn lleg to x-axis <-10.005495> speed <50.000000>;
			sleep 1050;
			turn rfoot to x-axis <12.005495> speed <50.000000>;
			turn lleg to x-axis <10.005495> speed <50.000000>;
			sleep 600;		
			turn pelvis to z-axis <-3.000000> speed <7.000000>;
		}
	}
}

Stand()
{
	turn lthigh to x-axis <0.000000> speed <50.000000>;
	turn rthigh to x-axis <0.000000> speed <50.000000>;
	turn lleg to x-axis <0.000000> speed <80.000000>;
	turn rleg to x-axis <0.000000> speed <80.000000>;
	turn pelvis to y-axis <0.000000> speed <80.000000>;
	turn pelvis to x-axis <0.000000> speed <20.000000>;
	move pelvis to y-axis [0.000000] speed [20.000000];
	turn pelvis to z-axis <0.000000> speed <20.000000>;
	turn rfoot to x-axis <0.000000> speed <80.000000>;
	turn lfoot to x-axis <0.000000> speed <80.000000>;
	turn pelvis to x-axis <0.000000> speed <46.000000>;
	sleep 20;
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		if( bMoving )
		{
				call-script Walk();
		}
		if( !bMoving )
		{
			call-script Stand();
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script MotionControl();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 3 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from base;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from torso;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from rfoot;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	msl_1 = 0;
	msl_2 = 0;
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	hide flare5;
	hide flare6;
	hide flare7;
	hide flare8;
	Main_Gun_Heading = 0;
	gun_1 = 0;
	restore_delay = 7500;
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.0> speed <65.000000>;
	turn rack to x-axis <0> speed <65.000000>;
	bAiming = FALSE;
}

// Plasma Battery

AimFromWeapon1(PieceNum)
{
	PieceNum = rack;
}

AimFromWeapon2(PieceNum)
{
	PieceNum = rack;
}

AimFromWeapon3(PieceNum)
{
	PieceNum = rack;
}

AimFromWeapon4(PieceNum)
{
	PieceNum = rack;
}

AimFromWeapon5(PieceNum)
{
	PieceNum = rack;
}

AimFromWeapon6(PieceNum)
{
	PieceNum = rack;
}

AimFromWeapon7(PieceNum)
{
	PieceNum = rack;
}

AimFromWeapon8(PieceNum)
{
	PieceNum = rack;
}


AimWeapon1(Heading, Pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn torso to y-axis Heading speed <60.00>;
	turn rack to x-axis <0.00> - Pitch speed <25.00>;
	Main_Gun_Heading = Heading;
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

AimWeapon2(Heading, Pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

AimWeapon3(Heading, Pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

AimWeapon4(Heading, Pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

AimWeapon5(Heading, Pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

AimWeapon6(Heading, Pitch)
{
	signal SIG_AIM_6;
	set-signal-mask SIG_AIM_6;
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

AimWeapon7(Heading, Pitch)
{
	signal SIG_AIM_7;
	set-signal-mask SIG_AIM_7;
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

AimWeapon8(Heading, Pitch)
{
	signal SIG_AIM_8;
	set-signal-mask SIG_AIM_8;
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

FireWeapon1()
{	
	emit-sfx 1024 from flare1;
	move barrel1 to z-axis [-2.500000] speed [500.000000];
	move sbarrel1 to z-axis [-4.500000] speed [500.000000];
	sleep 100;
	move barrel1 to z-axis [0.000000] speed [1.000000];
	move sbarrel1 to z-axis [0.000000] speed [1.000000];
}

FireWeapon2()
{	
	emit-sfx 1024 from flare2;
	move barrel2 to z-axis [-2.500000] speed [500.000000];
	move sbarrel2 to z-axis [-4.500000] speed [500.000000];
	sleep 100;
	move barrel2 to z-axis [0.000000] speed [1.000000];
	move sbarrel2 to z-axis [0.000000] speed [1.000000];
}

FireWeapon3()
{	
	emit-sfx 1024 from flare3;
	move barrel3 to z-axis [-2.500000] speed [500.000000];
	move sbarrel3 to z-axis [-4.500000] speed [500.000000];
	sleep 100;
	move barrel3 to z-axis [0.000000] speed [1.000000];
	move sbarrel3 to z-axis [0.000000] speed [1.000000];
}

FireWeapon4()
{	
	emit-sfx 1024 from flare4;
	move barrel4 to z-axis [-2.500000] speed [500.000000];
	move sbarrel4 to z-axis [-4.500000] speed [500.000000];
	sleep 100;
	move barrel4 to z-axis [0.000000] speed [1.000000];
	move sbarrel4 to z-axis [0.000000] speed [1.000000];
}

FireWeapon5()
{	
	emit-sfx 1024 from flare5;
	move barrel5 to z-axis [-2.500000] speed [500.000000];
	move sbarrel5 to z-axis [-4.500000] speed [500.000000];
	sleep 100;
	move barrel5 to z-axis [0.000000] speed [1.000000];
	move sbarrel5 to z-axis [0.000000] speed [1.000000];
}

FireWeapon6()
{	
	emit-sfx 1024 from flare6;
	move barrel6 to z-axis [-2.500000] speed [500.000000];
	move sbarrel6 to z-axis [-4.500000] speed [500.000000];
	sleep 100;
	move barrel6 to z-axis [0.000000] speed [1.000000];
	move sbarrel6 to z-axis [0.000000] speed [1.000000];
}

FireWeapon7()
{	
	emit-sfx 1024 from flare7;
	move barrel7 to z-axis [-2.500000] speed [500.000000];
	move sbarrel7 to z-axis [-4.500000] speed [500.000000];
	sleep 100;
	move barrel7 to z-axis [0.000000] speed [1.000000];
	move sbarrel7 to z-axis [0.000000] speed [1.000000];
}

FireWeapon8()
{	
	emit-sfx 1024 from flare8;
	move barrel8 to z-axis [-2.500000] speed [500.000000];
	move sbarrel8 to z-axis [-4.500000] speed [500.000000];
	sleep 100;
	move barrel8 to z-axis [0.000000] speed [1.000000];
	move sbarrel8 to z-axis [0.000000] speed [1.000000];
}

QueryWeapon1(PieceNum)
{
	PieceNum = flare1;
}

QueryWeapon2(PieceNum)
{
	PieceNum = flare2;
}

QueryWeapon3(PieceNum)
{
	PieceNum = flare3;
}

QueryWeapon4(PieceNum)
{
	PieceNum = flare4;
}

QueryWeapon5(PieceNum)
{
	PieceNum = flare5;
}

QueryWeapon6(PieceNum)
{
	PieceNum = flare6;
}

QueryWeapon7(PieceNum)
{
	PieceNum = flare7;
}

QueryWeapon8(PieceNum)
{
	PieceNum = flare8;
}

// Gun Missiles

AimFromWeapon9(piecenum)
{
	piecenum = torso;
}

AimWeapon9(heading, pitch)
{
	signal SIG_AIM_9;
	set-signal-mask SIG_AIM_9;
	
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

FireWeapon9()
{
	while(TRUE)
	{
		sleep 125;	
		++msl_1;
		if (msl_1 == 16)
		{
			msl_1 = 0;
			return (0);		
		}
	}
}

QueryWeapon9(piecenum)
{
	if ( msl_1 == 0 OR msl_1 == 4 OR msl_1 == 8 OR msl_1 == 12)
	{
		piecenum = msl1;
	}
	if ( msl_1 == 1 OR msl_1 == 5 OR msl_1 == 9 OR msl_1 == 13)
	{
		piecenum = msl2;
	}
	if ( msl_1 == 2 OR msl_1 == 6 OR msl_1 == 10 OR msl_1 == 14)
	{
		piecenum = msl3;
	}
	if ( msl_1 == 3 OR msl_1 == 7 OR msl_1 == 11 OR msl_1 == 15)
	{
		piecenum = msl4;
	}
}

AimFromWeapon10(piecenum)
{
	piecenum = torso;
}

AimWeapon10(heading, pitch)
{
	signal SIG_AIM_10;
	set-signal-mask SIG_AIM_10;
	
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	
	wait-for-turn torso around y-axis;
	wait-for-turn rack around x-axis;
	return(1);
}

FireWeapon10()
{
	while(TRUE)
	{
		sleep 125;	
		++msl_2;
		if (msl_2 == 16)
		{
			msl_2 = 0;
			return (0);		
		}
	}
}

QueryWeapon10(piecenum)
{
	if ( msl_2 == 0 OR msl_2 == 4 OR msl_2 == 8 OR msl_2 == 12)
	{
		piecenum = msl5;
	}
	if ( msl_2 == 1 OR msl_2 == 5 OR msl_2 == 9 OR msl_2 == 13)
	{
		piecenum = msl6;
	}
	if ( msl_2 == 2 OR msl_2 == 6 OR msl_2 == 10 OR msl_2 == 14)
	{
		piecenum = msl7;
	}
	if ( msl_2 == 3 OR msl_2 == 7 OR msl_2 == 11 OR msl_2 == 15)
	{
		piecenum = msl8;
	}
}

AimFromWeapon11(piecenum)
{
	piecenum = torso;
}

AimWeapon11(heading, pitch)
{
	signal SIG_AIM_11;
	set-signal-mask SIG_AIM_11;
	
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	
	bAiming = TRUE;	
	turn right_gun to x-axis <0.00> - Pitch speed <25.00>;
	turn left_gun to x-axis <0.00> - Pitch speed <25.00>;	
	wait-for-turn torso around y-axis;
	wait-for-turn right_gun around x-axis;
	wait-for-turn left_gun around x-axis;
	return (1);
}

FireWeapon11()
{
	if (gun_1 == 0)
	{
		emit-sfx 1024 + 0 from rflare;
		move rcanon1 to z-axis [-1.50] speed [50.00];
		move rcanon2 to z-axis [-1.50] speed [50.00];
		sleep 150;	
		move rcanon1 to z-axis [0.00] speed [3.00];
		move rcanon2 to z-axis [0.00] speed [3.00];
	}
	if (gun_1 == 1)
	{
		emit-sfx 1024 + 0 from lflare;
		move lcanon1 to z-axis [-1.50] speed [50.00];
		move lcanon2 to z-axis [-1.50] speed [50.00];
		sleep 150;	
		move lcanon1 to z-axis [0.00] speed [3.00];
		move lcanon2 to z-axis [0.00] speed [3.00];
	}
	
	++gun_1;
	if (gun_1 == 2)
	{
		gun_1 = 0;	
	}
}

QueryWeapon11(piecenum)
{
	if ( gun_1 == 0)
	{
		piecenum = rflare;
	}
	if ( gun_1 == 1)
	{
		piecenum = lflare;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lthigh type NOHEATCLOUD;
		explode luparm type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lfoot type NOHEATCLOUD | FALL;
		explode lleg type NOHEATCLOUD | FALL;
		explode lthigh type NOHEATCLOUD | FALL;
		explode luparm type NOHEATCLOUD | FALL | SMOKE;
		explode pelvis type NOHEATCLOUD | FALL;
		explode rfoot type NOHEATCLOUD | FALL;
		explode rleg type NOHEATCLOUD | FALL | SMOKE;
		explode rthigh type NOHEATCLOUD | FALL | SMOKE;
		explode ruparm type NOHEATCLOUD | FALL;
		explode torso type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode lfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode luparm type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pelvis type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rfoot type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rthigh type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode torso type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
