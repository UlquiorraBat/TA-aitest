#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, torso, aim,
		lflare, rarm, larm, pelvis, rflare, rleg, rfoot, lleg, lfoot, lthigh, rthigh,
		rbarrel, lbarrel, rtorpedo, ltorpedo;

static-var  bMoving, bAiming, Static_Move, Static_Turn, gun_1;

// Signal definitions
#define SIG_AIM_1			2
#define SIG_AIM_2			4
#define SIG_AIM_3			8

walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		move rleg to y-axis [0.] speed Static_Move * [1.000000];
		move rleg to z-axis [0.] speed Static_Move * [1.000000];
		move rfoot to z-axis [0.] speed Static_Move * [1.000000];
		move lleg to y-axis [0.] speed Static_Move * [1.000000];
		move lleg to z-axis [0.] speed Static_Move * [1.000000];
		move lfoot to z-axis [0.] speed Static_Move * [1.000000];
		move rarm to x-axis [0.] speed Static_Move * [1.000000];
		move larm to x-axis [0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-0.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <11.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-42.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-5.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <47.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <61.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-50.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-2.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <34.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-28.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-7.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <38.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <34.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-25.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-3.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <29.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-19.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <28.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <14.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-26.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <13.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <0.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <3.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <2.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-12.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <8.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.] speed Static_Move * [1.000000];
		turn lthigh to x-axis <-19.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <2.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <8.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-6.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-17.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <43.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-2.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-32.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <13.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <23.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-33.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <7.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <0.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-36.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <44.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-43.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-10.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <28.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-0.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-42.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <13.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <61.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-45.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <47.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-2.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-33.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <34.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <24.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-11.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-6.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <43.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-25.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <29.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <11.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-21.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <34.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-5.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-12.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-0.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-12.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <23.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <4.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <14.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <0.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-19.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-20.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <23.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <24.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-21.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-2.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <9.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-29.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-25.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <26.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <32.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-38.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
	turn pelvis to x-axis <0.> speed Static_Turn * <1.000000>;
	turn lthigh to x-axis <11.> speed Static_Turn * <1.000000>;
	turn rthigh to x-axis <-37.> speed Static_Turn * <1.000000>;
	turn rleg to x-axis <-9.> speed Static_Turn * <1.000000>;
	turn rfoot to x-axis <6.> speed Static_Turn * <1.000000>;
	turn lleg to x-axis <48.> speed Static_Turn * <1.000000>;
	turn lfoot to x-axis <-47.> speed Static_Turn * <1.000000>;
	sleep 80;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		move rleg to y-axis [0.] speed Static_Move * [1.000000];
		move rleg to z-axis [0.] speed Static_Move * [1.000000];
		move rfoot to z-axis [0.] speed Static_Move * [1.000000];
		move lleg to y-axis [0.] speed Static_Move * [1.000000];
		move lleg to z-axis [0.] speed Static_Move * [1.000000];
		move lfoot to z-axis [0.] speed Static_Move * [1.000000];
		move rarm to x-axis [0.] speed Static_Move * [1.000000];
		move larm to x-axis [0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-0.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <11.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-42.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-5.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <47.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <61.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-50.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-2.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <34.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-28.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-7.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <38.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <34.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-25.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <29.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-19.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <28.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <14.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-26.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <13.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <0.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <3.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <2.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-12.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <8.> speed Static_Turn * <1.000000>;
		sleep 60;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-3.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-19.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <2.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <8.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-6.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-17.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <43.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-2.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-32.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <13.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <23.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-33.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <7.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-0.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-36.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <44.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-43.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-10.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <28.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-0.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-42.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <13.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <61.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-45.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <47.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-1.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-33.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <34.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <24.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-11.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-6.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <43.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <-25.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <29.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <11.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <-21.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <-4.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <34.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Turn * <1.000000>;
		turn pelvis to x-axis <-5.> speed Static_Move * [1.000000];
		turn lthigh to x-axis <-12.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-0.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-12.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <23.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <4.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <14.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-3.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <0.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-19.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-20.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <23.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <24.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-21.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
		turn pelvis to x-axis <-2.> speed Static_Turn * <1.000000>;
		turn lthigh to x-axis <9.> speed Static_Turn * <1.000000>;
		turn rthigh to x-axis <-29.> speed Static_Turn * <1.000000>;
		turn rleg to x-axis <-25.> speed Static_Turn * <1.000000>;
		turn rfoot to x-axis <26.> speed Static_Turn * <1.000000>;
		turn lleg to x-axis <32.> speed Static_Turn * <1.000000>;
		turn lfoot to x-axis <-38.> speed Static_Turn * <1.000000>;
		sleep 80;
	}
	move pelvis to y-axis [-0.] speed Static_Move * [1.000000];
	turn pelvis to x-axis <0.> speed Static_Turn * <1.000000>;
	turn lthigh to x-axis <11.> speed Static_Turn * <1.000000>;
	turn rthigh to x-axis <-37.> speed Static_Turn * <1.000000>;
	turn rleg to x-axis <-9.> speed Static_Turn * <1.000000>;
	turn rfoot to x-axis <6.> speed Static_Turn * <1.000000>;
	turn lleg to x-axis <48.> speed Static_Turn * <1.000000>;
	turn lfoot to x-axis <-47.> speed Static_Turn * <1.000000>;
	sleep 80;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				call-script walklegs();
			}
			if( !aiming )
			{
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			if( justmoved )
			{
				move pelvis to y-axis [0.] speed [4.000000];
				turn pelvis to x-axis <0.> speed Static_Turn * <1.000000>;
				turn rthigh to x-axis <0.> speed Static_Turn * <1.000000>;
				turn rleg to x-axis <0.> speed Static_Turn * <1.000000>;
				turn rfoot to x-axis <0.> speed Static_Turn * <1.000000>;
				turn lthigh to x-axis <0.> speed Static_Turn * <1.000000>;
				turn lleg to x-axis <0.> speed Static_Turn * <1.000000>;
				turn lfoot to x-axis <0.> speed Static_Turn * <1.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.> speed Static_Turn * <1.000000>;
					turn rarm to x-axis <0.> speed Static_Turn * <1.500000>;
					turn larm to x-axis <0.> speed Static_Turn * <1.500000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide lflare;
	hide rflare;
	bMoving = 0;
	bAiming = 0;
	Static_Move = 5;
	Static_Turn = 90;
	gun_1 = 0;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

RestoreAfterDelay()
{
	sleep 1000;
	spin rbarrel around z-axis speed <0.000000> accelerate <-10.000000>;
	spin lbarrel around z-axis speed <0.000000> accelerate <-10.000000>;
	sleep 1500;
	turn torso to y-axis <0.> speed <45.>;
	turn larm to x-axis <0.> speed <45.>;
	turn rarm to x-axis <0.> speed <45.>;
	bAiming = 0;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	bAiming = 1;
	turn pelvis to x-axis <0.> speed Static_Turn * <1.000000>;
	turn torso to y-axis heading speed <85.000000>;
	turn rarm to x-axis <0.0> - pitch speed <90.>;
	turn larm to x-axis <0.0> - pitch speed <90.>;
	wait-for-turn torso around y-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn larm around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	wait-for-turn torso around y-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn larm around y-axis;
	return (1);
}

AimTertiary(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn pelvis to x-axis <0.> speed Static_Turn * <1.000000>;
	turn torso to y-axis heading speed <85.000000>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	emit-sfx 1025 from rflare;
	spin rbarrel around z-axis speed <300.000000>;	
	sleep 300;
}

FireSecondary()
{
	emit-sfx 1025 from lflare;
	spin lbarrel around z-axis speed <300.000000>;	
	sleep 300;
}

FireTertiary()
{
	++gun_1;
	if (gun_1 == 2)
	{
		gun_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = aim;
}

AimFromSecondary(piecenum)
{
	piecenum = aim;
}

AimFromTertiary(piecenum)
{
	piecenum = aim;
}

QueryPrimary(piecenum)
{
	piecenum = rflare;
}

QuerySecondary(piecenum)
{
	piecenum = lflare;
}

QueryTertiary(piecenum)
{
	if (gun_1 == 0)
	{
		piecenum = rtorpedo;	
	}
	if (gun_1 == 1)
	{
		piecenum = ltorpedo;	
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pelvis type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode larm type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rarm type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pelvis type FALL | NOHEATCLOUD;
		explode lfoot type FALL | NOHEATCLOUD;
		explode lleg type FALL | NOHEATCLOUD;
		explode larm type FALL | NOHEATCLOUD;
		explode lthigh type FALL | NOHEATCLOUD;
		explode pelvis type FALL | NOHEATCLOUD;
		explode rfoot type FALL | NOHEATCLOUD;
		explode rleg type FALL | NOHEATCLOUD;
		explode rarm type FALL | NOHEATCLOUD;
		explode rthigh type FALL | NOHEATCLOUD;
		explode torso type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode torso type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
