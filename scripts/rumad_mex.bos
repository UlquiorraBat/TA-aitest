#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, cutterhead, emit1, emit2, emit3, emit4;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, statechg_DesiredState, statechg_StateChanging, bCrushing;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{

	spin cutterhead around x-axis speed Static_Var_1 accelerate Static_Var_2;
	sleep 1000;
	
	while( bCrushing )
	{
		emit-sfx 1024 + 0 from emit1;
		emit-sfx 1024 + 0 from emit2;
		emit-sfx 1024 + 0 from emit3;
		emit-sfx 1024 + 0 from emit4;
		sleep 200;
	}
}

Stop()
{

	stop-spin cutterhead around x-axis decelerate Static_Var_3;
	wait-for-turn cutterhead around x-axis;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}


Create()
{
	
	bCrushing = 0;
	Static_Var_1 = 0;
	Static_Var_2 = 100;
	Static_Var_3 = 160;
	//call-script Shudder();
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
	bCrushing = 1;
	
}

Deactivate()
{
	start-script RequestState(1);
	bCrushing = 0;
}

SetSpeed(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 5;
}


SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode cutterhead type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode cutterhead type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode cutterhead type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
