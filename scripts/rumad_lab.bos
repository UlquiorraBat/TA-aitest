#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, socle, building1, building1a, building1b, building2, shield1, shield2, shield3,
       building3, system, latheturn, lathe1, spray1, lathe2, spray2, decor1, decor2, buildpad;

static-var  DesiredState, StateChanging, Spray;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from building3;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState(RequestedState, CurrentState)
{
	if( StateChanging )
	{
		DesiredState = RequestedState;
		return;
	}
	
	StateChanging = 1;
	CurrentState = DesiredState;
	DesiredState = RequestedState;
	
	while( DesiredState != CurrentState )
	{
		if( !DesiredState )
		{		
			
			move building3 to z-axis [-2.0] speed [1.0];
			sleep 250;
			
			turn shield1 to x-axis <-45.00> speed <30.00>;
			turn shield2 to x-axis <-90.00> speed <60.00>;
			turn shield3 to x-axis <-135.00> speed <90.00>;
			wait-for-turn shield1 around x-axis;
			
			turn latheturn to x-axis <-90.00> speed <180.00>;
			sleep 250;
					
			set YARD_OPEN to 1;
			
			while( !get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 1;
			}
			
			set BUGGER_OFF to 0;
			set INBUILDSTANCE to 1;
			CurrentState = 0;
		}
		if( DesiredState )
		{
			set INBUILDSTANCE to 0;
			set YARD_OPEN to 0;
			
			while( get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 0;
			}
			
			set BUGGER_OFF to 0;
			
			turn latheturn to x-axis <0.00> speed <180.00>;
			wait-for-turn latheturn around x-axis;
		
			turn shield1 to x-axis <0.00> speed <30.00>;
			turn shield2 to x-axis <0.00> speed <60.00>;
			turn shield3 to x-axis <0.00> speed <90.00>;
			sleep 250;
			
			move building3 to z-axis [0.0] speed [1.0];
			sleep 250;
			
			set ARMORED to 0;
			CurrentState = 1;
		}
	}
	
	StateChanging = 0;
}

Create()
{
	DesiredState = 1;
	StateChanging = 0;
	Spray = spray1;
	start-script SmokeUnit();	
}

QueryNanoPiece(PieceNum)
{
	if( Spray == spray1 )
	{
		PieceNum = spray1;
		Spray = spray2;
		return;
	}
	
	PieceNum = spray2;
	Spray = spray1;
}

Activate()
{
	signal 2;
	start-script RequestState(0);
}

Deactivate()
{
	signal 2;
	set-signal-mask 2;
	sleep 5000;
	set-signal-mask 0;
	start-script RequestState(1);
}

QueryBuildInfo(PieceNum)
{
	PieceNum = buildpad;
}

StartBuilding()
{
}

StopBuilding()
{
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType, Random)
{
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode system type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode shield2 type NOHEATCLOUD;
	}
	
	if (severity <= 25 )
	{
		CorpseType = 1;
		return (CorpseType);
	}
	
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode decor1 type NOHEATCLOUD;
	}
	
	if( Severity <= 100 )
	{
		CorpseType = 1;
		return;
	}
	
	CorpseType = 2;
	return (CorpseType);
}