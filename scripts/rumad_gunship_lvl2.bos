#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, lengine, rengine, rwing, lwing, thrust1, thrust2, engine3, thrust3,
		flare1, flare2, flare3, flare4, flare5, flare6, flare7, flare8;

static-var  restore_delay, bMoving, msl_1, msl_2;

// Signal definitions
#define SIG_AIM_1			2
#define SIG_AIM_2			4
#define SIG_MOVE			8

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;

}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;

}

Create()
{
	msl_1 = 1;
	msl_2 = 1;
	start-script SmokeUnit();
}

QueryPrimary(piecenum)
{
	if ( msl_1 == 1)
	{
		piecenum = flare1;
	}
	if ( msl_1 == 2)
	{
		piecenum = flare2;
	}
	if ( msl_1 == 3)
	{
		piecenum = flare3;
	}
	if ( msl_1 == 4)
	{
		piecenum = flare4;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = hull;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	return (1);
}

FirePrimary()
{
	while(TRUE)
	{
		sleep 125;	
		++msl_1;
		if (msl_1 == 5)
		{
			msl_1 = 1;
			return (0);		
		}
	}
}

QuerySecondary(piecenum)
{
	if ( msl_2 == 1)
	{
		piecenum = flare5;
	}
	if ( msl_2 == 2)
	{
		piecenum = flare6;
	}
	if ( msl_2 == 3)
	{
		piecenum = flare7;
	}
	if ( msl_2 == 4)
	{
		piecenum = flare8;
	}
}

AimFromSecondary(piecenum)
{
	piecenum = hull;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	return (1);
}

FireSecondary()
{
	while(TRUE)
	{
		sleep 125;	
		++msl_2;
		if (msl_2 == 5)
		{
			msl_2 = 1;
			return (0);		
		}
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD;
		explode lwing type NOHEATCLOUD;
		explode rwing type NOHEATCLOUD;
		explode rengine type NOHEATCLOUD;
		explode lengine type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode hull type NOHEATCLOUD | SHATTER;
		explode lwing type NOHEATCLOUD | SHATTER;
		explode rwing type NOHEATCLOUD | SHATTER;
		explode rengine type NOHEATCLOUD | SHATTER;
		explode lengine type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode hull type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lwing type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rwing type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rengine type NOHEATCLOUD | SHATTER;
	explode lengine type NOHEATCLOUD | SHATTER;
	return (corpsetype);
}
