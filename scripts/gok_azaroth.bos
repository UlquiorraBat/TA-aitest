#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, lthigh, lleg, lfoot, rthigh, rleg, rfoot, torso, shield_pos,
		lflare, lweapon, 
		rflare, rweapon, 
		turret1, turret2, sleeve1, sleeve2, flare1, flare2;
  

static-var  Static_Var_1, gun_1, gatling_1, gatling_2, bMoving, Main_Gun_Heading, beam_1, msl_1, rck_1, shield_onoff;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM_1			4
#define SIG_AIM_2			8
#define SIG_AIM_3			16
#define SIG_AIM_4			32


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

walk()
{
	if( TRUE )
	{
		//turn lgun to x-axis <10.000000> speed <8.000000>;
		//turn rgun to x-axis <-10.000000> speed <16.000000>;
		turn lthigh to x-axis <20.000000> speed <35.000000>;
		turn rthigh to x-axis <-10.000000> speed <35.000000>;
		turn lfoot to x-axis <-5.005495> speed <60.000000>;
		turn rfoot to x-axis <1.600000> speed <45.000000>;
		turn rleg to x-axis <-10.000000> speed <50.000000>;
		turn torso to x-axis <3.000000> speed <5.000000>;
		sleep 505;
		turn lfoot to x-axis <7.005495> speed <60.000000>;
		turn rfoot to x-axis <3.500000> speed <45.000000>;
		turn rleg to x-axis <20.005495> speed <60.000000>;
		sleep 600;
		turn pelvis to z-axis <4.000000> speed <3.000000>;
	}
	if( TRUE )
	{
		//turn lgun to x-axis <-10.000000> speed <17.000000>;
		//turn rgun to x-axis <10.000000> speed <17.000000>;
		turn lthigh to x-axis <-10.005495> speed <37.000000>;
		turn rthigh to x-axis <10.005495> speed <40.000000>;
		turn rfoot to x-axis <-3.005495> speed <80.000000>;
		turn lleg to x-axis <-10.005495> speed <80.000000>;
		sleep 1050;
		turn rfoot to x-axis <7.005495> speed <60.000000>;
		turn lleg to x-axis <20.005495> speed <60.000000>;
		sleep 600;
		turn pelvis to z-axis <-4.000000> speed <7.000000>;
		//turn lgun to x-axis <0.000000> speed <12.000000>;
		//turn rgun to x-axis <0.000000> speed <12.000000>;
	}
	while( TRUE )
	{
		if( TRUE )
		{
			turn pelvis to y-axis <-5.000000> speed <10.000000>;
			turn pelvis to x-axis <-2.000000> speed <5.000000>;
			turn lthigh to x-axis <20.005495> speed <37.000000>;
			turn rthigh to x-axis <-20.005495> speed <40.000000>;
			turn lfoot to x-axis <-7.005495> speed <85.000000>;
			turn rleg to x-axis <-3.005495> speed <60.000000>;
			sleep 1050;
			turn lfoot to x-axis <7.005495> speed <60.000000>;
			turn rfoot to x-axis <7.005495> speed <45.000000>;
			turn rleg to x-axis <10.005495> speed <50.000000>;
			sleep 600;
			turn pelvis to z-axis <4.000000> speed <7.000000>;
		}
		if( TRUE )
		{
			turn pelvis to y-axis <4.000000> speed <11.000000>;
			turn pelvis to x-axis <6.000000> speed <5.000000>;
			turn lthigh to x-axis <-20.005495> speed <35.000000>;
			turn rthigh to x-axis <20.005495> speed <45.000000>;
			turn rfoot to x-axis <-7.005495> speed <70.000000>;
			turn lleg to x-axis <-10.005495> speed <50.000000>;
			sleep 1050;
			turn rfoot to x-axis <12.005495> speed <50.000000>;
			turn lleg to x-axis <10.005495> speed <50.000000>;
			sleep 600;		
			turn pelvis to z-axis <-3.000000> speed <7.000000>;
		}
	}
}

stop()
{
	turn lthigh to x-axis <0.000000> speed <50.000000>;
	turn rthigh to x-axis <0.000000> speed <50.000000>;
	turn lleg to x-axis <0.000000> speed <80.000000>;
	turn rleg to x-axis <0.000000> speed <80.000000>;
	turn pelvis to y-axis <0.000000> speed <80.000000>;
	turn pelvis to x-axis <0.000000> speed <20.000000>;
	move pelvis to y-axis [0.000000] speed [20.000000];
	turn pelvis to z-axis <0.000000> speed <20.000000>;
	turn rfoot to x-axis <0.000000> speed <80.000000>;
	turn lfoot to x-axis <0.000000> speed <80.000000>;
	wait-for-turn torso around x-axis;
	turn pelvis to x-axis <10.000000> speed <46.000000>;
	//turn lgun to x-axis <-10.000000> speed <46.000000>;
	//turn rgun to x-axis <-10.000000> speed <46.000000>;
	wait-for-turn torso around x-axis;
	turn pelvis to x-axis <-3.000000> speed <46.000000>;
	wait-for-turn torso around x-axis;
	turn pelvis to x-axis <0.000000> speed <46.000000>;
	//turn lgun to x-axis <0.000000> speed <46.000000>;
	//turn rgun to x-axis <0.000000> speed <46.000000>;
	wait-for-turn pelvis around x-axis;
	sleep 20;
}

Shield()
{
	shield_onoff = !shield_onoff;
}

Create()
{
	shield_onoff = 1;
	start-script SmokeUnit();
	Main_Gun_Heading = 0;
}

StartMoving()
{
	bMoving = TRUE;
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	start-script walk();
}

StopMoving()
{
	bMoving = FALSE;
	signal SIG_MOVE;
	start-script stop();
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep 6000;
	turn torso to y-axis <0.000000> speed <25.000000>;
	turn rweapon to x-axis <0.000000> speed <25.000000>;
	turn lweapon to x-axis <0.000000> speed <25.000000>;
	wait-for-turn torso around y-axis;
	Main_Gun_Heading = 0;
}

RestoreAfterDelay2()
{
	sleep 3000;
	turn turret1 to y-axis <0.000000> speed <25.000000>;
	turn sleeve1 to x-axis <0.000000> speed <25.000000>;
	turn turret2 to y-axis <0.000000> speed <25.000000>;
	turn sleeve2 to x-axis <0.000000> speed <25.000000>;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

AimPrimary(heading, pitch)
{
	
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn torso to y-axis heading speed <55.000000>;
	turn lweapon to x-axis <0.000000> - pitch speed <35.000000>;
	Main_Gun_Heading = heading;
	//get PRINT(heading);
	wait-for-turn torso around y-axis;
	wait-for-turn lweapon around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	//emit-sfx 1024 + 0 from lflare;
	//move lbarrel to z-axis [-3.000000] now;
	//turn torso to y-axis <2.0> now;
	//turn lweapon to x-axis <5.0> now;
	//sleep 150;
	//turn lweapon to y-axis <0.0> speed <50.0>;
	//turn lweapon to x-axis <0.0> speed <50.0>;	
	//move lbarrel to z-axis [0.000000] speed [1.000000];
}

QueryPrimary(piecenum)
{
	piecenum = lflare;
}

AimFromSecondary(piecenum)
{
	piecenum = torso;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	turn rweapon to x-axis <0.000000> - pitch speed <35.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn rweapon around x-axis;
	return (1);
}

FireSecondary()
{

}

QuerySecondary(piecenum)
{
	piecenum = rflare;
}

AimFromTertiary(piecenum)
{
	piecenum = turret1;
}

AimTertiary(heading, pitch)
{	
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	if (pitch < -7000)
	{
		return (0);
	}
	if (heading - Main_Gun_Heading > 11000 and heading - Main_Gun_Heading < 22000 )
	{
		return (0);
	}
	turn turret1 to y-axis heading - Main_Gun_Heading speed <75.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <25.000000>;
	
	//wait-for-turn turret1 around y-axis;
	//turn turret1 to y-axis heading  speed <75.000000>;
	//get PRINT(heading);
	
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireTertiary()
{

}

QueryTertiary(piecenum)
{
	piecenum = flare1;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret2;
}

AimWeapon4(heading, pitch)
{	
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;	
	if (pitch < -7000)
	{
		return (0);
	}
	if (heading - Main_Gun_Heading > -11000 and heading - Main_Gun_Heading < -22000 )
	{
		return (0);
	}
	
	turn turret2 to y-axis heading - Main_Gun_Heading speed <75.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <25.000000>;
	//wait-for-turn turret2 around y-axis;
	//turn turret2 to y-axis heading  speed <75.000000>;
	//get PRINT(pitch);
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon4()
{
		
}

QueryWeapon4(piecenum)
{
	piecenum = flare2;
}

AimWeapon5(heading, pitch)
{
	return (shield_onoff);
}

FireWeapon5()
{
}

AimFromWeapon5(piecenum)
{
	piecenum = shield_pos;
}

QueryWeapon5(piecenum)
{
	piecenum = shield_pos;
}

Killed(severity, corpsetype)
{

	if( severity <= 33 )
	{
		corpsetype = 1;
		explode lfoot type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode lweapon type NOHEATCLOUD;
		explode rweapon type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 66 )
	{
		corpsetype = 2;
		explode lfoot type NOHEATCLOUD | FALL;
		explode lleg type NOHEATCLOUD | FALL;
		explode lthigh type NOHEATCLOUD | FALL;
		explode lweapon type NOHEATCLOUD;
		explode rweapon type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD | FALL;
		explode rfoot type NOHEATCLOUD | FALL;
		explode rleg type NOHEATCLOUD | FALL;
		explode rthigh type NOHEATCLOUD | FALL;
		explode torso type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lweapon type NOHEATCLOUD;
	explode rweapon type NOHEATCLOUD;
	explode pelvis type NOHEATCLOUD;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode torso type NOHEATCLOUD ;
	return (corpsetype);
}
