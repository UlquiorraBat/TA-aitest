#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, ringing, r1, r2, r3, r4, s1, s2, s3, s4,
		top, turret, tower, barrel, fire ;

static-var  gun_1, Bdeployed; 

Deploy()
{
	while (TRUE)
	{
		if(Bdeployed == TRUE)
		{
			move barrel to y-axis [-3.0] speed [2.0];
			wait-for-move barrel along y-axis;
			return (0);
		}
	sleep 150;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script Deploy();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Bdeployed = FALSE;
	start-script SmokeUnit();
}

Activate()
{
	Bdeployed = TRUE;
	sleep 150;
}

Deactivate()
{
	sleep 150;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	return (1);
}

FirePrimary()
{
	move barrel to y-axis [-1.0] speed [500.0];
	sleep 200;
	move barrel to y-axis [-3.0] speed [1.0];
}

QueryPrimary(piecenum)
{
	piecenum = fire;

}

AimFromPrimary(piecenum)
{
	piecenum = tower;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode ringing type NOHEATCLOUD | SHATTER;
	explode r1 type NOHEATCLOUD | SHATTER;
	explode r3 type NOHEATCLOUD | SHATTER;
	explode s2 type NOHEATCLOUD | SHATTER;
	explode s4 type NOHEATCLOUD | SHATTER;
	explode top type NOHEATCLOUD | SHATTER;
	explode tower type NOHEATCLOUD | SHATTER;
	return (corpsetype);
}
