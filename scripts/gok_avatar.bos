#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, plate1, plate1b, plate2, plate2b, head, turret,
       sleeve1, sleeve2, barrel1, barrel2, flare1, flare2, plate3, plate4;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from hull;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal 4;
	set-signal-mask 4;
}

StopMoving()
{

}

setSFXoccupy(state)
{
	Static_Var_3 = state;
}

Create()
{
	hide flare1;
	hide flare2;
	Static_Var_1 = 12;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 3000;
	turn turret to y-axis <0.> speed <80.>;
	turn sleeve1 to x-axis <0.> speed <40.>;
	turn sleeve2 to x-axis <0.> speed <40.>;
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
}

QuerySecondary(piecenum)
{
	piecenum = flare2;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimFromSecondary(piecenum)
{
	piecenum = turret;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <150.>;
	turn sleeve1 to x-axis <0.> - pitch speed <60.>;
	turn sleeve2 to x-axis <0.> - pitch speed <60.>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve1 around x-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve1 around x-axis;
	wait-for-turn sleeve2 around x-axis;
	return (1);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode sleeve1 type NOHEATCLOUD;
		explode sleeve2 type NOHEATCLOUD;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode hull type SHATTER | NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode sleeve1 type NOHEATCLOUD;
		explode sleeve2 type NOHEATCLOUD;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode hull type SHATTER | NOHEATCLOUD;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode sleeve1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode sleeve2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
