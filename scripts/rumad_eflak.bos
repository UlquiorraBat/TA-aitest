#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, socle, turret, rsleeves, lsleeves,
		rflare1, rflare2, rflare3, rflare4,
		rbarrel1, rbarrel2, rbarrel3, rbarrel4,
		lflare1, lflare2, lflare3, lflare4,
		lbarrel1, lbarrel2, lbarrel3, lbarrel4;

static-var  gun_1, gun_2, gun_3, gun_4;

// Signal definitions
#define SIG_AIM_1				2
#define SIG_AIM_2				4
#define SIG_AIM_3				8
#define SIG_AIM_4				16

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	gun_1 = 0;
	gun_2 = 0;
	gun_3 = 0;
	gun_4 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn turret to y-axis heading speed <500.000000>;
	turn rsleeves to x-axis <0.000000> - pitch speed <450.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn rsleeves around x-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move rbarrel1 to z-axis [-0.800000] speed [150.000000];
		sleep 100;
		move rbarrel1 to z-axis [0.000000] speed [10.000000];
	}
	if( gun_1 == 1 )
	{
		move rbarrel2 to z-axis [-0.800000] speed [150.000000];
		sleep 100;
		move rbarrel2 to z-axis [0.000000] speed [10.000000];
	}
	++gun_1;
	if( gun_1 == 2 )
	{
		gun_1 = 0;
	}
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = rflare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = rflare2;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	wait-for-turn turret around y-axis;
	wait-for-turn rsleeves around x-axis;
	return (1);
}

FireSecondary()
{
	if( gun_2 == 0 )
	{
		move rbarrel3 to z-axis [-0.800000] speed [150.000000];
		sleep 100;
		move rbarrel3 to z-axis [0.000000] speed [10.000000];
	}
	if( gun_2 == 1 )
	{
		move rbarrel4 to z-axis [-0.800000] speed [150.000000];
		sleep 100;
		move rbarrel4 to z-axis [0.000000] speed [10.000000];
	}
	
	++gun_2;
	if( gun_2 == 2 )
	{
		gun_2 = 0;
	}
}

QuerySecondary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = rflare3;
	}
	if( gun_2 == 1 )
	{
		piecenum = rflare4;
	}
}

AimFromSecondary(piecenum)
{
	piecenum = turret;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn lsleeves to x-axis <0.000000> - pitch speed <450.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn lsleeves around x-axis;
	return (1);
}

FireWeapon3()
{
	if( gun_3 == 0 )
	{
		move lbarrel1 to z-axis [-0.800000] speed [150.000000];
		sleep 100;
		move lbarrel1 to z-axis [0.000000] speed [10.000000];
	}
	if( gun_3 == 1 )
	{
		move lbarrel2 to z-axis [-0.800000] speed [150.000000];
		sleep 100;
		move lbarrel2 to z-axis [0.000000] speed [10.000000];
	}
	++gun_3;
	if( gun_3 == 2 )
	{
		gun_3 = 0;
	}
}

QueryWeapon3(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = lflare1;
	}
	if( gun_3 == 1 )
	{
		piecenum = lflare2;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = turret;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	wait-for-turn turret around y-axis;
	wait-for-turn lsleeves around x-axis;
	return (1);
}

FireWeapon4()
{
	if( gun_4 == 0 )
	{
		move lbarrel3 to z-axis [-0.800000] speed [150.000000];
		sleep 100;
		move lbarrel3 to z-axis [0.000000] speed [10.000000];
	}
	if( gun_4 == 1 )
	{
		move lbarrel4 to z-axis [-0.800000] speed [150.000000];
		sleep 100;
		move lbarrel4 to z-axis [0.000000] speed [10.000000];
	}
	
	++gun_4;
	if( gun_4 == 2 )
	{
		gun_4 = 0;
	}
}

QueryWeapon4(piecenum)
{
	if( gun_4 == 0 )
	{
		piecenum = lflare3;
	}
	if( gun_4 == 1 )
	{
		piecenum = lflare4;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode rbarrel1 type NOHEATCLOUD;
		explode rbarrel2 type NOHEATCLOUD;
		explode socle type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode rsleeves type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode rbarrel1 type NOHEATCLOUD | FALL;
		explode lbarrel2 type NOHEATCLOUD | FALL;
		explode socle type NOHEATCLOUD;
		explode rbarrel3 type NOHEATCLOUD | FALL;
		explode lbarrel4 type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD | SHATTER;
		explode rsleeves type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode rbarrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rbarrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode socle type NOHEATCLOUD;
	explode lbarrel4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lbarrel3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode rsleeves type NOHEATCLOUD;
	return (corpsetype);
}
