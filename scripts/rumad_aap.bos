#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, plate, decor1, decor2, decor3, building, system1, lathe1, spray1, system2, lathe2, spray2, shield1, shield2, buildingside1, buildingside2, socle, buildpad;

static-var  DesiredState, StateChanging, Spray;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script SmokeUnit();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState(RequestedState, CurrentState)
{
	if( StateChanging )
	{
		DesiredState = RequestedState;
		return;
	}
	
	StateChanging = 1;
	CurrentState = DesiredState;
	DesiredState = RequestedState;
	
	while( DesiredState != CurrentState )
	{
		if( !DesiredState )
		{			
			move system1 to y-axis [3.00] speed [8.00];
			move system2 to y-axis [3.00] speed [8.00];
			move shield1 to y-axis [-3.00] speed [8.00];
			move shield2 to y-axis [-3.00] speed [8.00];
			sleep 250;
			move system1 to x-axis [3.00] speed [8.00];
			move system2 to x-axis [3.00] speed [8.00];
			sleep 250;
			move lathe1 to x-axis [3.00] speed [4.00];
			move lathe2 to x-axis [3.00] speed [4.00];
			turn lathe1 to z-axis <-40.00> speed <80.00>;
			turn lathe2 to z-axis <-40.00> speed <80.00>;
			sleep 500;
			
			set YARD_OPEN to 1;
			
			while( !get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 1;
			}
			
			set BUGGER_OFF to 0;
			set INBUILDSTANCE to 1;
			CurrentState = 0;
		}
		if( DesiredState )
		{
			set INBUILDSTANCE to 0;
			set YARD_OPEN to 0;
			
			while( get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 0;
			}
			
			set BUGGER_OFF to 0;
			
			move lathe1 to x-axis [0.00] speed [4.00];
			move lathe2 to x-axis [0.00] speed [4.00];
			turn lathe1 to z-axis <0.00> speed <80.00>;
			turn lathe2 to z-axis <0.00> speed <80.00>;
			sleep 500;
			move system1 to x-axis [0.00] speed [8.00];
			move system2 to x-axis [0.00] speed [8.00];
			sleep 250;
			move system1 to y-axis [0.00] speed [8.00];
			move system2 to y-axis [0.00] speed [8.00];
			move shield1 to y-axis [0.00] speed [8.00];
			move shield2 to y-axis [0.00] speed [8.00];
			sleep 250;

			CurrentState = 1;
		}
	}
	
	StateChanging = 0;
	}

Create()
{
	DesiredState = 1;
	StateChanging = 0;
	Spray = spray1;
	start-script SmokeUnit();
}

QueryNanoPiece(PieceNum)
{
	if( Spray == spray1 )
	{
		PieceNum = spray1;
		Spray = spray2;
		return;
	}
	
	PieceNum = spray2;
	Spray = spray1;
	}

Activate()
{
	signal 2;
	start-script RequestState(0);
	}

Deactivate()
{
	signal 2;
	set-signal-mask 2;
	sleep 5000;
	set-signal-mask 0;
	start-script RequestState(1);
	}

QueryBuildInfo(PieceNum)
{
	PieceNum = buildpad;
	}

StartBuilding()
{
}

StopBuilding()
{
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType, Random)
{
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode shield2 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode shield1 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode decor2 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode decor3 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode socle type NOHEATCLOUD;
	}
	if( Severity <= 33 )
	{
		CorpseType = 1;
		return (CorpseType);
	}
	if( Severity <= 66 )
	{
		CorpseType = 2;
		return (CorpseType);
	}		
	CorpseType = 3;
	return (CorpseType);
}