#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, lflegy, lfleg, lfleg2, lfleg3, lfleg4, lflegy2, rflegy, rfleg, rfleg2, rfleg3, rfleg4, rflegy2,
       lblegy, lbleg, lbleg2, lbleg3, lbleg4, lblegy2, rblegy, rbleg, rbleg2, rbleg3, rbleg4, rblegy2,
       turret, turretrecoil, shield_pos, emit1, emit2, emit3, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15;

static-var  bMoving, bAiming, shieldonoff, gun_1;

// Signal definitions
#define SIG_AIM_1				2
#define SIG_AIM_2				4
#define SIG_AIM_3				8

MotionControl(Moving, Aiming, JustMoved)
	{
	while( TRUE )
		{
		Moving = bMoving;
		Aiming = bAiming;
		if( Moving )
			{
			if( bMoving )
				{
				move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [0.50] speed [4.00];
				
				turn lblegy to y-axis <62.50> speed <40.00>;
				turn lblegy2 to y-axis <-17.50> speed <40.00>;
				turn lbleg to z-axis <-20.00> speed <60.00>;
				turn lbleg2 to z-axis <50.00> speed <110.00>;
				turn lbleg3 to z-axis <-55.00> speed <110.00>;
				turn lbleg4 to z-axis <25.00> speed <40.00>;
				
				turn rblegy to y-axis <0.00> speed <60.00>;
				turn rblegy2 to y-axis <-45.00> speed <60.00>;
				turn rbleg to z-axis <-20.00> speed <15.00>;
				turn rbleg2 to z-axis <50.00> speed <15.00>;
				turn rbleg3 to z-axis <-30.00> speed <25.00>;
				turn rbleg4 to z-axis <0.00> speed <35.00>;
				
				turn lflegy to y-axis <-45.00> speed <40.00>;
				turn lflegy2 to y-axis <17.50> speed <40.00>;
				turn lfleg to z-axis <-10.00> speed <30.00>;
				turn lfleg2 to z-axis <-10.00> speed <90.00>;
				turn lfleg3 to z-axis <-25.00> speed <70.00>;
				turn lfleg4 to z-axis <25.00> speed <8.00>;
				
				turn rflegy to y-axis <0.00> speed <60.00>;
				turn rflegy2 to y-axis <62.00> speed <60.00>;
				turn rfleg to z-axis <-20.00> speed <12.00>;
				turn rfleg2 to z-axis <30.00> speed <25.00>;
				turn rfleg3 to z-axis <-15.00> speed <20.00>;
				turn rfleg4 to z-axis <5.00> speed <8.00>;
				
				sleep 250;
				}
			
			if( bMoving )
				{
				//move pelvis to y-axis [-0.50] speed [2.00];
				move pelvis to z-axis [0.00] speed [2.00];
				turn lbleg to z-axis <-10.00> speed <18.00>;
				turn lbleg2 to z-axis <10.00> speed <70.00>;
				turn lbleg3 to z-axis <-25.00> speed <55.00>;
				turn rbleg2 to z-axis <30.00> speed <30.00>;
				turn rbleg3 to z-axis <-15.00> speed <25.00>;
				turn rbleg4 to z-axis <5.00> speed <8.00>;
				turn lfleg to z-axis <-20.00> speed <18.00>;
				turn lfleg2 to z-axis <-15.00> speed <70.00>;
				turn lfleg3 to z-axis <-20.00> speed <55.00>;
				turn rfleg2 to z-axis <30.00> speed <35.00>;
				turn rfleg3 to z-axis <-30.00> speed <25.00>;
				turn rfleg4 to z-axis <0.00> speed <8.00>;
				sleep 250;
				}
			
			if( bMoving )
				{
				//move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [-0.50] speed [2.00];
				
				turn lblegy to y-axis <37.50> speed <40.00>;
				turn lblegy2 to y-axis <7.50> speed <40.00>;
				turn lbleg to z-axis <10.00> speed <30.00>;
				turn lbleg2 to z-axis <-40.00> speed <90.00>;
				turn lbleg3 to z-axis <15.00> speed <70.00>;
				turn lbleg4 to z-axis <20.00> speed <8.00>;
				
				turn rblegy to y-axis <-37.50> speed <60.00>;
				turn rblegy2 to y-axis <-7.50> speed <60.00>;
				turn rbleg to z-axis <-12.50> speed <12.00>;
				turn rbleg2 to z-axis <15.00> speed <25.00>;
				turn rbleg3 to z-axis <-2.50> speed <20.00>;
				turn rbleg4 to z-axis <0.00> speed <8.00>;
				
				turn lflegy to y-axis <-37.50> speed <40.00>;
				turn lflegy2 to y-axis <-7.50> speed <40.00>;
				turn lfleg to z-axis <12.50> speed <60.00>;
				turn lfleg2 to z-axis <-15.00> speed <90.00>;
				turn lfleg3 to z-axis <2.50> speed <90.00>;
				turn lfleg4 to z-axis <0.00> speed <40.00>;
				
				turn rflegy to y-axis <37.50> speed <60.00>;
				turn rflegy2 to y-axis <7.50> speed <60.00>;
				turn rfleg to z-axis <-10.00> speed <18.00>;
				turn rfleg2 to z-axis <30.00> speed <18.00>;
				turn rfleg3 to z-axis <-15.00> speed <25.00>;
				turn rfleg4 to z-axis <-20.00> speed <30.00>;
				
				sleep 250;
				}
			////
			if( bMoving )
				{
				//move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [0.50] speed [4.00];
				
				turn lblegy to y-axis <0.00> speed <25.00>;
				turn lblegy2 to y-axis <45.00> speed <25.00>;
				turn lbleg to z-axis <20.00> speed <18.00>;
				turn lbleg2 to z-axis <-50.00> speed <18.00>;
				turn lbleg3 to z-axis <30.00> speed <25.00>;
				turn lbleg4 to z-axis <0.00> speed <35.00>;
				
				turn rblegy to y-axis <-62.50> speed <40.00>;
				turn rblegy2 to y-axis <17.50> speed <40.00>;
				turn rbleg to z-axis <20.00> speed <50.00>;
				turn rbleg2 to z-axis <-50.00> speed <95.00>;
				turn rbleg3 to z-axis <55.00> speed <90.00>;
				turn rbleg4 to z-axis <-25.00> speed <40.00>;
				
				turn lflegy to y-axis <0.00> speed <65.00>;
				turn lflegy2 to y-axis <-60.00> speed <65.00>;
				turn lfleg to z-axis <20.00> speed <30.00>;
				turn lfleg2 to z-axis <-20.00> speed <25.00>;
				turn lfleg3 to z-axis <15.00> speed <20.00>;
				turn lfleg4 to z-axis <-5.00> speed <20.00>;
				
				turn rflegy to y-axis <45.50> speed <40.00>;
				turn rflegy2 to y-axis <-17.50> speed <40.00>;
				turn rfleg to z-axis <10.00> speed <35.00>;
				turn rfleg2 to z-axis <0.00> speed <200.00>;
				turn rfleg3 to z-axis <25.00> speed <60.00>;
				turn rfleg4 to z-axis <-25.00> speed <20.00>;
				
				sleep 250;
				}
			
			if( bMoving )
				{
				//move pelvis to y-axis [-0.50] speed [2.00];
				move pelvis to z-axis [0.00] speed [2.00];
				turn lbleg2 to z-axis <-30.00> speed <35.00>;
				turn lbleg3 to z-axis <15.00> speed <25.00>;
				turn lbleg4 to z-axis <-5.00> speed <20.00>;
				turn rbleg to z-axis <10.00> speed <18.00>;
				turn rbleg2 to z-axis <-10.00> speed <60.00>;
				turn rbleg3 to z-axis <25.00> speed <60.00>;
				turn lfleg2 to z-axis <-30.00> speed <35.00>;
				turn lfleg3 to z-axis <30.00> speed <25.00>;
				turn lfleg4 to z-axis <0.00> speed <20.00>;
				turn rfleg to z-axis <20.00> speed <18.00>;
				turn rfleg2 to z-axis <-15.00> speed <60.00>;
				turn rfleg3 to z-axis <30.00> speed <60.00>;				
				sleep 250;
				}
			
			if( bMoving )
				{
				move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [-0.50] speed [2.00];
				
				turn lblegy to y-axis <37.50> speed <60.00>;
				turn lblegy2 to y-axis <7.50> speed <0.00>;
				turn lbleg to z-axis <12.50> speed <30.00>;
				turn lbleg2 to z-axis <-15.00> speed <25.00>;
				turn lbleg3 to z-axis <2.50> speed <50.00>;
				turn lbleg4 to z-axis <0.00> speed <20.00>;
				
				turn rblegy to y-axis <-37.50> speed <40.00>;
				turn rblegy2 to y-axis <-7.50> speed <40.00>;
				turn rbleg to z-axis <-10.00> speed <35.00>;
				turn rbleg2 to z-axis <18.00> speed <80.00>;
				turn rbleg3 to z-axis <-15.00> speed <55.00>;
				turn rbleg4 to z-axis <-20.00> speed <20.00>;
				
				turn lflegy to y-axis <-37.50> speed <60.00>;
				turn lflegy2 to y-axis <-7.50> speed <60.00>;
				turn lfleg to z-axis <10.00> speed <18.00>;
				turn lfleg2 to z-axis <-30.00> speed <18.00>;
				turn lfleg3 to z-axis <15.00> speed <25.00>;
				turn lfleg4 to z-axis <20.00> speed <35.00>;
				
				turn rflegy to y-axis <37.50> speed <40.00>;
				turn rflegy2 to y-axis <7.50> speed <40.00>;
				turn rfleg to z-axis <-12.50> speed <50.00>;
				turn rfleg2 to z-axis <15.00> speed <90.00>;
				turn rfleg3 to z-axis <-2.50> speed <90.00>;
				turn rfleg4 to z-axis <0.00> speed <40.00>;
				
				sleep 250;
				}
			JustMoved = 1;
			}
		if( !Moving )
			{
			if( JustMoved )
				{
				move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [0.00] speed [2.00];
				
				turn lblegy to y-axis <45.00> speed <55.00>;
				turn lblegy2 to y-axis <0.00> speed <55.00>;
				turn lbleg to z-axis <0.00> speed <55.00>;
				turn lbleg2 to z-axis <0.00> speed <55.00>;
				turn lbleg3 to z-axis <0.00> speed <55.00>;
				turn lbleg4 to z-axis <0.00> speed <55.00>;
				
				turn rblegy to y-axis <-45.00> speed <55.00>;
				turn rblegy2 to y-axis <0.00> speed <55.00>;
				turn rbleg to z-axis <0.00> speed <55.00>;
				turn rbleg2 to z-axis <0.00> speed <55.00>;
				turn rbleg3 to z-axis <0.00> speed <55.00>;
				turn rbleg4 to z-axis <0.00> speed <55.00>;
				
				turn lflegy to y-axis <-45.00> speed <55.00>;
				turn lflegy2 to y-axis <0.00> speed <55.00>;
				turn lfleg to z-axis <0.00> speed <55.00>;
				turn lfleg2 to z-axis <0.00> speed <55.00>;
				turn lfleg3 to z-axis <0.00> speed <55.00>;
				turn lfleg4 to z-axis <0.00> speed <55.00>;
				
				turn rflegy to y-axis <45.00> speed <55.00>;
				turn rflegy2 to y-axis <0.00> speed <55.00>;
				turn rfleg to z-axis <0.00> speed <55.00>;
				turn rfleg2 to z-axis <0.00> speed <55.00>;
				turn rfleg3 to z-axis <0.00> speed <55.00>;
				turn rfleg4 to z-axis <0.00> speed <55.00>;
				
				JustMoved = 0;
				}
			sleep 40;
			}
		}
}

lighting()
{
	While ( TRUE )
	{
		
		if (!bAiming)
		{
			spin emit3 around y-axis speed <10.>;
			emit-sfx 1024 + 0 from q11;
			emit-sfx 1024 + 0 from q12;
			emit-sfx 1024 + 0 from q13;
			emit-sfx 1024 + 0 from q14;
			emit-sfx 1024 + 0 from q15;
			sleep 2500;
		}
		sleep 250;
	}	
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 135;
	}
	
	start-script MotionControl();
	start-script lighting();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from pelvis;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}


Shield()
{
	shieldonoff = !shieldonoff;
}

Create()
{
	hide q1;
	hide q2;
	hide q3;
	hide q4;
	hide q5;
	hide q6;
	hide q7;
	hide q8;
	hide q9;
	hide q10;
	hide q11;
	hide q12;
	hide q13;
	hide q14;
	hide q15;	
	bMoving = 0;
	bAiming = 0;
	gun_1 = 1;
	turn lflegy to y-axis <-45.00> now;
	turn rflegy to y-axis <45.00> now;
	turn lblegy to y-axis <45.00> now;
	turn rblegy to y-axis <-45.00> now;
	start-script Smokeunit();
	shieldonoff = 1;
}

activatescr()
{
	if( TRUE )
	{
		move emit1 to y-axis [25.] speed [15.];
		move emit2 to y-axis [25.] speed [15.];
	}
	if( TRUE )
	{
		spin emit1 around y-axis speed <500.>;
		spin emit2 around y-axis speed <-150.>;
		
		emit-sfx 1024 + 0 from q1;
		emit-sfx 1024 + 0 from q2;
		emit-sfx 1024 + 0 from q3;
		emit-sfx 1024 + 0 from q4;
		emit-sfx 1024 + 0 from q5;
		emit-sfx 1024 + 0 from q6;
		emit-sfx 1024 + 0 from q7;
		emit-sfx 1024 + 0 from q8;
		emit-sfx 1024 + 0 from q9;
		emit-sfx 1024 + 0 from q10;		
	}
	sleep 50;
}

deactivatescr()
{
	if( TRUE )
	{
		stop-spin emit1 around y-axis;
		stop-spin emit2 around y-axis;
	}
	if( TRUE )
	{
		move emit1 to y-axis [0.] speed [100.];
		move emit2 to y-axis [0.] speed [100.];
	}
}

RestoreAfterDelay()
{
	sleep 6000;
	bAiming = 0;
	call-script deactivatescr();
	turn turret to y-axis <0.> speed <25.000000>;
	wait-for-turn turret around y-axis;	
}

AimFromPrimary(PieceNum)
{
	PieceNum = turretrecoil;
}

AimPrimary(heading, Pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	bAiming = 1;
	call-script activatescr();
	turn turret to y-axis heading speed <50.000000>;
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return(1);
}

FirePrimary()
{
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
}

QueryPrimary(PieceNum)
{
	if( gun_1 == 1 )
	{
		piecenum = q1;
	}
	if( gun_1 == 2 )
	{
		piecenum = q2;
	}
	if( gun_1 == 3 )
	{
		piecenum = q3;
	}
	if( gun_1 == 4 )
	{
		piecenum = q4;
	}
	if( gun_1 == 5 )
	{
		piecenum = q5;
	}
	if( gun_1 == 6 )
	{
		piecenum = q6;
	}	
	if( gun_1 == 7 )
	{
		piecenum = q7;
	}
	if( gun_1 == 8 )
	{
		piecenum = q8;
	}
	if( gun_1 == 9 )
	{
		piecenum = q9;
	}
	if( gun_1 == 10 )
	{
		piecenum = q10;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = shield_pos;
}

AimWeapon4(heading, pitch)
{
	return (shieldonoff);
}

QueryWeapon4(piecenum)
{
	piecenum = shield_pos;
}

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(severity, corpseType)
{

	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pelvis type NOHEATCLOUD;
		explode lbleg2 type NOHEATCLOUD;
		explode rbleg2 type NOHEATCLOUD;
		explode rfleg2 type NOHEATCLOUD;
		explode lfleg2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pelvis type NOHEATCLOUD;
		explode lbleg2 type NOHEATCLOUD | FALL;
		explode rbleg2 type NOHEATCLOUD | FALL;
		explode rfleg2 type NOHEATCLOUD | FALL;
		explode lfleg2 type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode pelvis type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode lbleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode rbleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode rfleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode lfleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	return (corpsetype);
}
