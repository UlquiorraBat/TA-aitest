#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, plate, door, building1, shield1, system1, lathe1, spray1, decor1, decor3,
       building2, shield2, system2, lathe2, spray2, decor2, decor4, socle, buildpad;

static-var  DesiredState, StateChanging, Spray;

RequestState(RequestedState, CurrentState)
{
	if( StateChanging )
	{
		DesiredState = RequestedState;
		return;
	}
	
	StateChanging = 1;
	CurrentState = DesiredState;
	DesiredState = RequestedState;
	
	while( DesiredState != CurrentState )
	{
		if( !DesiredState )
		{
			set ARMORED to 1;//Armored state is now actually used as vulnerability state
			
			turn door to x-axis <90.00> speed <180.00>;
			move building1 to x-axis [13.0] speed [9.00];
			move building2 to x-axis [-13.0] speed [9.00];
			sleep 500;
			sleep 300;
			move shield1 to x-axis [2.00] speed [5.00];
			move shield2 to x-axis [-2.00] speed [5.00];
			sleep 200;
			move shield1 to x-axis [4.00] speed [8.00];
			move shield2 to x-axis [-4.00] speed [8.00];
			move shield1 to y-axis [-3.00] speed [8.00];
			move shield2 to y-axis [-3.00] speed [8.00];
			sleep 250;
			turn system1 to z-axis <-140.00> speed <280.00>;
			turn system2 to z-axis <140.00> speed <280.00>;
			turn lathe1 to z-axis <180.00> speed <360.00>;
			turn lathe2 to z-axis <-180.00> speed <360.00>;
			sleep 500;
			
			set YARD_OPEN to 1;
			
			while( !get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 1;
			}
			
			set BUGGER_OFF to 0;
			set INBUILDSTANCE to 1;
			CurrentState = 0;
		}
		if( DesiredState )
		{
			set INBUILDSTANCE to 0;
			set YARD_OPEN to 0;
			
			while( get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 0;
			}
			
			set BUGGER_OFF to 0;
						
			turn system1 to z-axis <0.00> speed <280.00>;
			turn system2 to z-axis <0.00> speed <280.00>;
			turn lathe1 to z-axis <0.00> speed <360.00>;
			turn lathe2 to z-axis <0.00> speed <360.00>;
			sleep 500;
			move shield1 to x-axis [1.00] speed [8.00];
			move shield2 to x-axis [-1.00] speed [8.00];
			move shield1 to y-axis [0.00] speed [8.00];
			move shield2 to y-axis [0.00] speed [8.00];
			sleep 250;
			move shield1 to x-axis [0.00] speed [5.00];
			move shield2 to x-axis [0.00] speed [5.00];
			move plate to z-axis [0.00] speed [9.00];
			move building1 to x-axis [0.00] speed [9.00];
			move building2 to x-axis [0.00] speed [9.00];
			sleep 500;
			turn door to x-axis <0.00> speed <180.00>;
			sleep 500;
			
			set ARMORED to 0;
			CurrentState = 1;
		}
	}
	
	StateChanging = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	DesiredState = 1;
	StateChanging = 0;
	Spray = spray1;
	start-script SmokeUnit();
}

QueryNanoPiece(PieceNum)
{
	if( Spray == spray1 )
	{
		PieceNum = spray1;
		Spray = spray2;
		return;
	}
	
	PieceNum = spray2;
	Spray = spray1;
}

Activate()
{
	signal 2;
	start-script RequestState(0);
}

Deactivate()
{
	signal 2;
	set-signal-mask 2;
	sleep 5000;
	set-signal-mask 0;
	start-script RequestState(1);
}

QueryBuildInfo(PieceNum)
{
	PieceNum = buildpad;
}

StartBuilding()
{
}

StopBuilding()
{
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType, Random)
{
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode shield1 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode decor1 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode decor4 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode decor2 type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
		{
		explode decor3 type NOHEATCLOUD;
	}
	if( Severity <= 33 )
	{
		CorpseType = 1;
		return (CorpseType);
	}
	if( Severity <= 66 )
	{
		CorpseType = 2;
		return (CorpseType);
	}		
	CorpseType = 3;
	return (CorpseType);
}