#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, ltrack, lshadow, rtrack, rshadow, lplate, rplate, 
		turret, arm, arm2, pitchturret, spray, decor1, decor2, light;

static-var  Static_Var_1, Static_Var_2, bAiming;;

activatescr()
{
	turn arm to x-axis <90.00> speed <120.00>;
	turn arm2 to x-axis <-90.00> speed <120.00>;
	sleep 40;
}

deactivatescr()
{
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0> speed <90.00>;
	turn pitchturret to x-axis <0.00> speed <90.00>;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	turn arm to x-axis <0.00> speed <90.00>;
	turn arm2 to x-axis <0.00> speed <90.00>;	
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( Static_Var_1 )
		{
			call-script deactivatescr();
			bAiming = 1;
			currentstate = 1;
		}
		else
		{
			call-script activatescr();
			bAiming = 0;
			currentstate = 0;
		}
	}
	Static_Var_2 = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from hull;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bAiming = 1;
	Static_Var_1 = 1;
	Static_Var_2 = 0;
	start-script SmokeUnit();
}

QueryNanoPiece(PieceNum)
{
	PieceNum = spray;
}

StartBuilding(Heading, Pitch)
{
	start-script RequestState(0);
	while( bAiming )
	{
		sleep 100;
	}
	signal 4;
	turn turret to y-axis Heading speed <150.00>;
	turn pitchturret to x-axis <0.00> - Pitch speed <120.00>;	
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal 4;
	set-signal-mask 4;
	sleep 6000;
	set-signal-mask 0;
	signal 4;
	start-script RequestState(1);
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType, Random)
{
	/////
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode ltrack type NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode rtrack type NOHEATCLOUD;
	}
	
	if( Severity <= 25 )
	{
		CorpseType = 1;
		return (CorpseType);
	}
	
	/////
	CorpseType = 2;
	explode hull type NOHEATCLOUD;
	
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode lplate type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	Random = Rand( 1, 2 );
	if( Random == 1 )
	{
		explode rplate type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	}
	
	if( Severity <= 50 )
	{
		return (CorpseType);
	}
	
	/////
	CorpseType = 3;
	explode hull type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (CorpseType);
}
