#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, radar,
		engine1, engine2, engine3, engine4,
		turret1, sleeves1, rminigun1, lminigun1, flare1a, flare1b,
		turret2, sleeves2, rminigun2, lminigun2, flare2a, flare2b,
		turret3, sleeves3, flare3a, flare3b,
		lflaktur1, lflaksleeve1, lflakflare1,
		rflaktur1, rflaksleeve1, rflakflare1,
		lflaktur2, lflaksleeve2, lflakflare2,
		rflaktur2, rflaksleeve2, rflakflare2;

static-var  gun_1, gun_2, gun_3, RestoreDelay;

// Signal definitions
#define SIG_MOVE				2
#define SIG_AIM_1				4
#define SIG_AIM_2				8
#define SIG_AIM_3				16
#define SIG_AIM_4				32
#define SIG_AIM_5				64
#define SIG_AIM_6				128
#define SIG_AIM_7				256
#define SIG_AIM_8				512


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RestoreAfterDelay()
{
	sleep RestoreDelay;
	turn turret1 to y-axis <0.000000> speed <30.000000>;
	turn turret2 to y-axis <180.000000> speed <30.000000>;
	turn turret3 to y-axis <0.000000> speed <40.000000>;
	
	turn sleeves1 to x-axis <0.000000> speed <20.000000>;
	turn sleeves2 to x-axis <0.000000> speed <20.000000>;
	turn sleeves3 to x-axis <0.000000> speed <25.000000>;
}

RestoreFlak()
{
	sleep RestoreDelay / 3;
	turn lflaktur1 to y-axis <0.000000> speed <100.000000>;
	turn lflaksleeve1 to x-axis <0.000000> speed <50.000000>;
	turn lflaktur2 to y-axis <0.000000> speed <100.000000>;
	turn lflaksleeve2 to x-axis <0.000000> speed <50.000000>;
	turn rflaktur1 to y-axis <0.000000> speed <100.000000>;
	turn rflaksleeve1 to x-axis <0.000000> speed <50.000000>;
	turn rflaktur2 to y-axis <0.000000> speed <100.000000>;
	turn rflaksleeve2 to x-axis <0.000000> speed <50.000000>;	
}

Create()
{	
	gun_1 = 0;
	gun_2 = 0;
	gun_3 = 0;
	RestoreDelay = 10000;	
	turn turret2 to y-axis <180.000000> now;
	start-script SmokeUnit();
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn turret1 to y-axis heading speed <45.000000>;
	turn sleeves1 to x-axis <0.> - pitch speed <30.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeves1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret2 to y-axis heading speed <45.000000>;
	turn sleeves2 to x-axis <0.> - pitch speed <30.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeves2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret3 to y-axis heading speed <65.000000>;
	turn sleeves3 to x-axis <0.> - pitch speed <50.000000>;
	wait-for-turn sleeves3 around y-axis;
	wait-for-turn turret3 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( gun_1 == 0 )
	{
		turn rminigun1 to z-axis <0.000000> now;
		turn rminigun1 to z-axis <90.000000> speed <115.000000>;		
	}
	if( gun_1 == 1 )
	{
		turn lminigun1 to z-axis <0.000000> now;
		turn lminigun1 to z-axis <90.000000> speed <115.000000>;		
	}
	++gun_1;
	if( gun_1 == 2 )
	{
		gun_1 = 0;
	}
}

FireWeapon2()
{
	if( gun_2 == 0 )
	{
		turn rminigun2 to z-axis <0.000000> now;
		turn rminigun2 to z-axis <90.000000> speed <200.000000>;		
	}
	if( gun_2 == 1 )
	{
		turn lminigun2 to z-axis <0.000000> now;
		turn lminigun2 to z-axis <90.000000> speed <200.000000>;		
	}
	++gun_2;
	if( gun_2 == 2 )
	{
		gun_2 = 0;
	}
}

FireWeapon3()
{
	++gun_3;
	if( gun_3 == 2 )
	{
		gun_3 = 0;
	}
}

AimFromWeapon1(piecenum)
{
	piecenum = turret1;
}

AimFromWeapon3(piecenum)
{
	piecenum = turret2;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret3;
}

QueryWeapon1(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1a;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare1b;
	}
}

QueryWeapon2(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare2a;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare2b;
	}
}

QueryWeapon3(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = flare3a;
	}
	if( gun_3 == 1 )
	{
		piecenum = flare3b;
	}
}

// FLAK TURRETS

AimWeapon5(heading, pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;
	turn lflaktur1 to y-axis heading speed <480.000000>;
	turn lflaksleeve1 to x-axis <0.000000> - pitch speed <500.000000> ;
	wait-for-turn lflaktur1 around y-axis;
	wait-for-turn lflaksleeve1 around x-axis;
	start-script RestoreFlak();
	return(1);
}

AimFromWeapon5(piecenum)
{
	piecenum = lflaktur1;
}

QueryWeapon5(piecenum)
{
	piecenum = lflakflare1;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM_6;
	set-signal-mask SIG_AIM_6;
	turn lflaktur2 to y-axis heading speed <480.000000>;
	turn lflaksleeve2 to x-axis <0.000000> - pitch speed <500.000000> ;
	wait-for-turn lflaktur2 around y-axis;
	wait-for-turn lflaksleeve2 around x-axis;
	start-script RestoreFlak();
	return(1);
}

AimFromWeapon6(piecenum)
{
	piecenum = lflaktur2;
}

QueryWeapon6(piecenum)
{
	piecenum = lflakflare2;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM_7;
	set-signal-mask SIG_AIM_7;
	turn rflaktur1 to y-axis heading speed <480.000000>;
	turn rflaksleeve1 to x-axis <0.000000> - pitch speed <500.000000> ;
	wait-for-turn rflaktur1 around y-axis;
	wait-for-turn rflaksleeve1 around x-axis;
	start-script RestoreFlak();
	return(1);
}

AimFromWeapon7(piecenum)
{
	piecenum = rflaktur1;
}

QueryWeapon7(piecenum)
{
	piecenum = rflakflare1;
}

AimWeapon8(heading, pitch)
{
	signal SIG_AIM_8;
	set-signal-mask SIG_AIM_8;
	turn rflaktur2 to y-axis heading speed <480.000000>;
	turn rflaksleeve2 to x-axis <0.000000> - pitch speed <500.000000> ;
	wait-for-turn rflaktur2 around y-axis;
	wait-for-turn rflaksleeve2 around x-axis;
	start-script RestoreFlak();
	return(1);
}

AimFromWeapon8(piecenum)
{
	piecenum = rflaktur2;
}

QueryWeapon8(piecenum)
{
	piecenum = rflakflare2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeves1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeves2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeves3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rflaktur1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode rflaktur2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lflaktur1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lflaktur2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rflaktur1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rflaktur2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lflaktur1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lflaktur2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	return (corpsetype);
}
