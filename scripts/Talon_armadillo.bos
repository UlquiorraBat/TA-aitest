#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, v1, v2, v3, v4, hatchesa, hatchesb, body, aimpoint, armor;

static-var  gun_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 1;
	start-script SmokeUnit();
}

RestoreHatche()
{
	sleep 5000;
	turn hatchesa to z-axis <0.000000> speed <40.000000>;
	turn hatchesb to z-axis <0.000000> speed <40.000000>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn hatchesa to z-axis <180.000000> speed <80.000000>;
	turn hatchesb to z-axis <-180.000000> speed <80.000000>;
	wait-for-turn hatchesA around z-axis;
	wait-for-turn hatchesB around z-axis;	
	start-script RestoreHatche();
	return (1);
}

FirePrimary()
{
	++gun_1;
	if( gun_1 == 5 )
	{
		gun_1 = 1;
	}

}

QueryPrimary(piecenum)
{
	
	if( gun_1 == 1 )
	{
		piecenum = v1;
	}
	if( gun_1 == 2 )
	{
		piecenum = v2;
	}
	if( gun_1 == 3 )
	{
		piecenum = v3;
	}
	if( gun_1 == 4 )
	{
		piecenum = v4;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode armor type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode armor type NOHEATCLOUD | FALL ;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode armor type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
