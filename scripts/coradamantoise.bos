#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, head, leg1, foot1, leg2, foot2, leg3, foot3,
       leg4, foot4, turret, sleeves, barrela, barrelb, flarea, flareb,
       flare1, flare2, flare3, flare4, turret1, turret2, turret3, turret4,
       sleeve1, sleeve2, sleeve3, sleeve4,
       msla, mslb, msla1, msla2, msla3, msla4, mslb1, mslb2, mslb3, mslb4;

static-var  bMoving, gun_1, msl_1, msl_2;

#define SIG_AIM_1			2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_AIM_4			16
#define SIG_AIM_5			32
#define SIG_AIM_6			64
#define SIG_AIM_7			128
#define SIG_AIM_8			256


MotionControl()
{
	while( TRUE )
	{
		if( bMoving )
		{
			turn leg1 to y-axis <15.> speed <16.>;
			move leg1 to x-axis [0.] now;
			move leg1 to z-axis [-0.] now;
			turn leg2 to y-axis <-25.> speed <36.>;
			turn leg2 to z-axis <50.> speed <36.>;
			turn foot2 to z-axis <-50.> speed <36.>;
			turn leg3 to y-axis <-35.> speed <16.>;
			turn leg4 to y-axis <25.> speed <16.>;
			turn foot1 to y-axis <-15.> speed <16.>;
			turn foot2 to y-axis <25.> speed <36.>;
			turn foot3 to y-axis <35.> speed <16.>;
			turn foot4 to y-axis <-25.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <10.> speed <16.>;
			move leg1 to x-axis [0.] now;
			move leg1 to z-axis [-0.] now;
			turn leg2 to y-axis <-10.> speed <36.>;
			turn leg3 to y-axis <-30.> speed <16.>;
			turn leg4 to y-axis <30.> speed <16.>;
			turn foot1 to y-axis <-10.> speed <16.>;
			turn foot2 to y-axis <10.> speed <36.>;
			turn foot3 to y-axis <30.> speed <16.>;
			turn foot4 to y-axis <-30.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <5.> speed <16.>;
			move leg1 to x-axis [0.] now;
			move leg1 to z-axis [-0.] now;
			turn leg2 to y-axis <5.> speed <36.>;
			move leg2 to x-axis [0.] now;
			move leg2 to z-axis [0.] now;
			turn leg3 to y-axis <-25.> speed <16.>;
			turn leg4 to y-axis <35.> speed <16.>;
			turn foot1 to y-axis <-5.> speed <16.>;
			turn foot2 to y-axis <-5.> speed <36.>;
			turn foot3 to y-axis <25.> speed <16.>;
			turn foot4 to y-axis <-35.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <0.> speed <16.>;
			move leg1 to x-axis [0.] now;
			move leg1 to z-axis [-0.] now;
			turn leg2 to y-axis <20.> speed <36.>;
			turn leg2 to z-axis <0.> speed <36.>;
			move leg2 to x-axis [0.75] speed [14.];
			move leg2 to z-axis [0.75] speed [14.];
			turn foot2 to z-axis <0.> speed <36.>;
			turn leg3 to y-axis <-20.> speed <16.>;
			turn leg4 to y-axis <40.> speed <16.>;
			turn foot1 to y-axis <0.> speed <16.>;
			turn foot2 to y-axis <0.> speed <36.>;
			turn foot3 to y-axis <20.> speed <16.>;
			turn foot4 to y-axis <-40.> speed <16.>;
			sleep 80;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <-5.> speed <16.>;
			move leg1 to x-axis [0.] now;
			move leg1 to z-axis [-0.] now;
			turn leg2 to y-axis <15.> speed <16.>;
			move leg2 to x-axis [0.75.] now;
			move leg2 to z-axis [0.75.] now;
			turn leg3 to y-axis <-15.> speed <16.>;
			move leg3 to x-axis [-0.] now;
			move leg3 to z-axis [-0.] now;
			turn leg4 to y-axis <25.> speed <36.>;
			turn leg4 to z-axis <-50.> speed <36.>;
			turn foot4 to z-axis <50.> speed <36.>;
			turn foot1 to y-axis <5.> speed <16.>;
			turn foot2 to y-axis <-15.> speed <16.>;
			turn foot3 to y-axis <15.> speed <16.>;
			turn foot4 to y-axis <-25.> speed <36.>;
			sleep 80;
			turn leg1 to y-axis <-10.> speed <16.>;
			move leg1 to x-axis [0.75.] now;
			move leg1 to z-axis [-0.75.] now;
			turn leg2 to y-axis <10.> speed <16.>;
			move leg2 to x-axis [0.75.] now;
			move leg2 to z-axis [0.75.] now;
			turn leg3 to y-axis <-10.> speed <16.>;
			move leg3 to x-axis [-0.] now;
			move leg3 to z-axis [-0.] now;
			turn leg4 to y-axis <10.> speed <36.>;
			turn foot1 to y-axis <10.> speed <16.>;
			turn foot2 to y-axis <-10.> speed <16.>;
			turn foot3 to y-axis <10.> speed <16.>;
			turn foot4 to y-axis <-10.> speed <36.>;
			sleep 80;
			turn leg1 to y-axis <-15.> speed <16.>;
			move leg1 to x-axis [0.75.] now;
			move leg1 to z-axis [-0.75.] now;
			turn leg2 to y-axis <5.> speed <16.>;
			move leg2 to x-axis [0.] now;
			move leg2 to z-axis [0.] now;
			turn leg3 to y-axis <-5.> speed <16.>;
			move leg3 to x-axis [-0.] now;
			move leg3 to z-axis [-0.] now;
			turn leg4 to y-axis <-5.> speed <36.>;
			move leg4 to x-axis [-0.] now;
			move leg4 to z-axis [0.] now;
			turn foot1 to y-axis <15.> speed <16.>;
			turn foot2 to y-axis <-5.> speed <16.>;
			turn foot3 to y-axis <5.> speed <16.>;
			turn foot4 to y-axis <5.> speed <36.>;
			sleep 80;
			turn leg1 to y-axis <-20.> speed <16.>;
			move leg1 to x-axis [0.75] now;
			move leg1 to z-axis [-0.75] now;
			turn leg2 to y-axis <0.> speed <16.>;
			move leg2 to x-axis [0.] now;
			move leg2 to z-axis [0.] now;
			turn leg3 to y-axis <0.> speed <16.>;
			move leg3 to x-axis [-0.] now;
			move leg3 to z-axis [-0.] now;
			turn leg4 to y-axis <-20.> speed <36.>;
			turn leg4 to z-axis <0.> speed <36.>;
			move leg4 to x-axis [-0.75] speed [14.];
			move leg4 to z-axis [0.75] speed [14.];
			turn foot4 to z-axis <0.> speed <36.>;
			turn foot1 to y-axis <20.> speed <16.>;
			turn foot2 to y-axis <0.> speed <16.>;
			turn foot3 to y-axis <0.> speed <16.>;
			turn foot4 to y-axis <20.> speed <36.>;
			sleep 80;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <-5.> speed <36.>;
			turn leg1 to z-axis <50.> speed <36.>;
			move leg1 to x-axis [0.] speed [14.];
			move leg1 to z-axis [-0.] speed [14.];
			turn foot1 to z-axis <-50.> speed <36.>;
			turn leg2 to y-axis <-5.> speed <16.>;
			move leg2 to x-axis [0.] now;
			move leg2 to z-axis [0.] now;
			turn leg3 to y-axis <5.> speed <16.>;
			move leg3 to x-axis [-0.] now;
			move leg3 to z-axis [-0.] now;
			turn leg4 to y-axis <-15.> speed <16.>;
			move leg4 to x-axis [-0.75] now;
			move leg4 to z-axis [1.] now;
			turn foot1 to y-axis <5.> speed <36.>;
			turn foot2 to y-axis <5.> speed <16.>;
			turn foot3 to y-axis <-5.> speed <16.>;
			turn foot4 to y-axis <15.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <10.> speed <36.>;
			move leg1 to x-axis [0.] now;
			move leg1 to z-axis [0.] now;
			turn leg2 to y-axis <-10.> speed <16.>;
			move leg2 to x-axis [0.] now;
			move leg2 to z-axis [0.] now;
			turn leg3 to y-axis <10.> speed <16.>;
			move leg3 to x-axis [-0.75] now;
			move leg3 to z-axis [-0.75] now;
			turn leg4 to y-axis <-10.> speed <16.>;
			move leg4 to x-axis [-0.75] now;
			move leg4 to z-axis [0.75] now;
			turn foot1 to y-axis <-10.> speed <36.>;
			turn foot2 to y-axis <10.> speed <16.>;
			turn foot3 to y-axis <-10.> speed <16.>;
			turn foot4 to y-axis <10.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <25.> speed <36.>;
			turn leg2 to y-axis <-15.> speed <16.>;
			move leg2 to x-axis [0.] now;
			move leg2 to z-axis [0.] now;
			turn leg3 to y-axis <15.> speed <16.>;
			move leg3 to x-axis [-0.75] now;
			move leg3 to z-axis [-0.75] now;
			turn leg4 to y-axis <-5.> speed <16.>;
			move leg4 to x-axis [-0.] now;
			move leg4 to z-axis [0.] now;
			turn foot1 to y-axis <-25.> speed <36.>;
			turn foot2 to y-axis <15.> speed <16.>;
			turn foot3 to y-axis <-15.> speed <16.>;
			turn foot4 to y-axis <5.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <40.> speed <36.>;
			turn leg1 to z-axis <0.> speed <36.>;
			turn foot1 to z-axis <0.> speed <36.>;
			turn leg2 to y-axis <-20.> speed <16.>;
			move leg2 to x-axis [0.] now;
			move leg2 to z-axis [0.] now;
			turn leg3 to y-axis <20.> speed <16.>;
			move leg3 to x-axis [-0.75] now;
			move leg3 to z-axis [-0.75] now;
			turn leg4 to y-axis <0.> speed <16.>;
			move leg4 to x-axis [-0.] now;
			move leg4 to z-axis [0.] now;
			turn foot1 to y-axis <-40.> speed <36.>;
			turn foot2 to y-axis <20.> speed <16.>;
			turn foot3 to y-axis <-20.> speed <16.>;
			turn foot4 to y-axis <0.> speed <16.>;
			sleep 80;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <35.> speed <16.>;
			turn leg2 to y-axis <-25.> speed <16.>;
			turn leg3 to y-axis <5.> speed <36.>;
			turn leg3 to z-axis <-50.> speed <36.>;
			move leg3 to x-axis [-0.] speed [14.];
			move leg3 to z-axis [-0.] speed [14.];
			turn foot3 to z-axis <50.> speed <36.>;
			turn leg4 to y-axis <5.> speed <16.>;
			move leg4 to x-axis [-0.] now;
			move leg4 to z-axis [0.] now;
			turn foot1 to y-axis <-35.> speed <16.>;
			turn foot2 to y-axis <25.> speed <16.>;
			turn foot3 to y-axis <-5.> speed <36.>;
			turn foot4 to y-axis <-5.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <30.> speed <16.>;
			turn leg2 to y-axis <-30.> speed <16.>;
			turn leg3 to y-axis <-10.> speed <36.>;
			move leg3 to x-axis [0.] now;
			move leg3 to z-axis [0.] now;
			turn leg4 to y-axis <10.> speed <16.>;
			move leg4 to x-axis [-0.] now;
			move leg4 to z-axis [0.] now;
			turn foot1 to y-axis <-30.> speed <16.>;
			turn foot2 to y-axis <30.> speed <16.>;
			turn foot3 to y-axis <10.> speed <36.>;
			turn foot4 to y-axis <-10.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <25.> speed <16.>;
			turn leg2 to y-axis <-35.> speed <16.>;
			turn leg3 to y-axis <-25.> speed <36.>;
			turn leg4 to y-axis <15.> speed <16.>;
			move leg4 to x-axis [-0.] now;
			move leg4 to z-axis [0.] now;
			turn foot1 to y-axis <-25.> speed <16.>;
			turn foot2 to y-axis <35.> speed <16.>;
			turn foot3 to y-axis <25.> speed <36.>;
			turn foot4 to y-axis <-15.> speed <16.>;
			sleep 80;
			turn leg1 to y-axis <20.> speed <16.>;
			turn leg2 to y-axis <-40.> speed <16.>;
			turn leg3 to y-axis <-40.> speed <36.>;
			turn leg3 to z-axis <0.> speed <36.>;
			turn foot3 to z-axis <0.> speed <36.>;
			turn leg4 to y-axis <20.> speed <16.>;
			move leg4 to x-axis [0.] now;
			move leg4 to z-axis [0.] now;
			turn foot1 to y-axis <-20.> speed <16.>;
			turn foot2 to y-axis <40.> speed <16.>;
			turn foot3 to y-axis <40.> speed <36.>;
			turn foot4 to y-axis <-20.> speed <16.>;
			sleep 80;
		}
		if( !bMoving )
		{
			turn leg1 to y-axis <0.> speed <36.>;
			move leg1 to x-axis [0.] now;
			move leg1 to z-axis [0.] now;
			turn leg2 to y-axis <0.> speed <36.>;
			move leg2 to x-axis [0.] now;
			move leg2 to z-axis [0.] now;
			turn leg3 to y-axis <0.> speed <36.>;
			move leg3 to x-axis [0.] now;
			move leg3 to z-axis [0.] now;
			turn leg4 to y-axis <0.> speed <36.>;
			move leg4 to x-axis [0.] now;
			move leg4 to z-axis [0.] now;
			turn foot1 to y-axis <0.> speed <36.>;
			turn foot2 to y-axis <0.> speed <36.>;
			turn foot3 to y-axis <0.> speed <36.>;
			turn foot4 to y-axis <0.> speed <36.>;
			sleep 80;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script MotionControl();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
			emit-sfx smoketype from turret;
			emit-sfx smoketype from head;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	gun_1 = 0;
	msl_1 = 0;
	msl_2 = 0;
	turn turret1 to y-axis <196.> now;
	turn turret2 to y-axis <-16.> now;
	turn turret3 to y-axis <168.> now;
	turn turret4 to y-axis <16.> now;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep 5000;
	turn turret to y-axis <0.> speed <40.>;
	turn sleeves to x-axis <0.> speed <30.>;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flarea;
	}
	if( gun_1 == 1 )
	{
		piecenum = flareb;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = sleeves;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn turret to y-axis heading speed <40.>;
	turn sleeves to x-axis <0.> - pitch speed <40.>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		emit-sfx 1016 from flarea;
		move barrela to z-axis [-4.] now;
		sleep 150;
		move barrela to z-axis [0.] speed [3.];
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		emit-sfx 1016 from flareb;
		move barrelb to z-axis [-4.] now;
		sleep 150;
		move barrelb to z-axis [0.] speed [3.];
		gun_1 = 0;
		return (0);
	}
}

QueryWeapon2(piecenum)
{
	if(msl_1 == 0)
	{
		piecenum = msla1;
	}
	if(msl_1 == 1)
	{
		piecenum = msla2;
	}
	if(msl_1 == 2)
	{
		piecenum = msla3;
	}
	if(msl_1 == 3)
	{
		piecenum = msla4;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = msla;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	return (1);
}

FireWeapon2()
{
	++msl_1;
	if(msl_1 == 4)
	{
		msl_1 = 0;
	}
}

QueryWeapon3(piecenum)
{
	if(msl_2 == 0)
	{
		piecenum = mslb1;
	}
	if(msl_2 == 1)
	{
		piecenum = mslb2;
	}
	if(msl_2 == 2)
	{
		piecenum = mslb3;
	}
	if(msl_2 == 3)
	{
		piecenum = mslb4;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = mslb;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	return (1);
}

FireWeapon3()
{
	++msl_2;
	if(msl_2 == 4)
	{
		msl_2 = 0;
	}
}

QueryWeapon4(piecenum)
{
	piecenum = flare1;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret1;
}

RestoreAfterDelayTurrets()
{
	sleep 3000;
	turn turret1 to y-axis <196.> speed <60.>;
	turn turret2 to y-axis <-16.> speed <60.>;
	turn turret3 to y-axis <168.> speed <60.>;
	turn turret4 to y-axis <16.> speed <60.>;
	turn sleeve1 to x-axis <0.> speed <90.>;
	turn sleeve2 to x-axis <0.> speed <90.>;
	turn sleeve3 to x-axis <0.> speed <90.>;
	turn sleeve4 to x-axis <0.> speed <90.>;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	turn turret1 to y-axis heading speed <90.>;
	turn sleeve1 to x-axis <0.> - pitch speed <90.>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelayTurrets();
	return (1);
}

FireWeapon4()
{
	sleep 150;
}

QueryWeapon5(piecenum)
{
	piecenum = flare2;
}

AimFromWeapon5(piecenum)
{
	piecenum = turret2;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;
	turn turret2 to y-axis heading speed <90.>;
	turn sleeve2 to x-axis <0.> - pitch speed <90.>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelayTurrets();
	return (1);
}

FireWeapon5()
{
	sleep 150;
}

QueryWeapon6(piecenum)
{
	piecenum = flare3;
}

AimFromWeapon6(piecenum)
{
	piecenum = turret3;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM_6;
	set-signal-mask SIG_AIM_6;
	turn turret3 to y-axis heading speed <90.>;
	turn sleeve3 to x-axis <0.> - pitch speed <90.>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeve3 around x-axis;
	start-script RestoreAfterDelayTurrets();
	return (1);
}

FireWeapon6()
{
	sleep 150;
}

QueryWeapon7(piecenum)
{
	piecenum = flare4;
}

AimFromWeapon7(piecenum)
{
	piecenum = turret4;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM_7;
	set-signal-mask SIG_AIM_7;
	turn turret4 to y-axis heading speed <90.>;
	turn sleeve4 to x-axis <0.> - pitch speed <90.>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn sleeve4 around x-axis;
	start-script RestoreAfterDelayTurrets();
	return (1);
}

FireWeapon7()
{
	sleep 150;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode foot1 type NOHEATCLOUD;
		explode foot2 type NOHEATCLOUD;
		explode foot3 type NOHEATCLOUD;
		explode foot4 type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret3 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD;
		explode msla type NOHEATCLOUD;
		explode mslb type NOHEATCLOUD;
		explode barrela type NOHEATCLOUD;
		explode barrelb type NOHEATCLOUD;
		explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode foot1 type NOHEATCLOUD;
		explode foot2 type FALL | NOHEATCLOUD;
		explode foot3 type FALL | NOHEATCLOUD;
		explode foot4 type NOHEATCLOUD | NOHEATCLOUD;
		explode turret type NOHEATCLOUD | NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret3 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode msla type NOHEATCLOUD;
		explode mslb type NOHEATCLOUD;
		explode barrela type FALL | NOHEATCLOUD;
		explode barrelb type NOHEATCLOUD | NOHEATCLOUD;
		explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode foot1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode foot2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode foot3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode foot4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT ;
	explode turret1 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret3 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode msla type NOHEATCLOUD;
	explode mslb type NOHEATCLOUD;
	explode barrela type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrelb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
