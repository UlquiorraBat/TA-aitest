#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, lights, pipes, pad, disk, insert,
       vents, glow, bits, supports, clamp01, clamp02,
       clamp03, clamp04, clamp05, clamp06, clamp07, clamp08, clamp09, clamp10,
       clamp11, clamp12, clamp13, clamp14, clamp15, clamp16, clamp17, clamp18,
       block01, block02, block03, block04, block05, block06, block07, block08,
       block09, block10, block11, block12, block13, block14, block15, block16,
       block17, block18, sup01, arm01a, arm01b, lathe01, nano01, sup02,
       arm02a, arm02b, lathe02, nano02, sup03, arm03a, arm03b, lathe03,
       nano03, sup04, arm04a, arm04b, lathe04, nano04, sup05, arm05a,
       arm05b, lathe05, nano05, sup06, arm06a, arm06b, lathe06, nano06,
       sup07, arm07a, arm07b, lathe07, nano07, sup08, arm08a, arm08b,
       lathe08, nano08, sup09, arm09a, arm09b, lathe09, nano09, sup10,
       arm10a, arm10b, lathe10, nano10, sup11, arm11a, arm11b, lathe11,
       nano11, sup12, arm12a, arm12b, lathe12, nano12, sup13, arm13a,
       arm13b, lathe13, nano13, sup14, arm14a, arm14b, lathe14, nano14,
       sup15, arm15a, arm15b, lathe15, nano15, sup16, arm16a, arm16b,
       lathe16, nano16, pivot01, pivot02, pivot03, pivot04, pivot05, pivot06,
       pivot07, pivot08, pivot09, pivot10, pivot11, pivot12, pivot13, pivot14,
       pivot15, pivot16, pivot17, pivot18;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

activatescr()
{
	if( TRUE )
	{
		move block01 to x-axis [6.8] speed [2.];
		move block01 to y-axis [-6.8] speed [2.];
		move block02 to x-axis [6.8] speed [2.];
		move block02 to y-axis [-6.8] speed [2.];
		move block03 to x-axis [6.8] speed [2.];
		move block03 to y-axis [-6.8] speed [2.];
		move block04 to x-axis [6.8] speed [2.];
		move block04 to y-axis [-6.8] speed [2.];
		move block05 to x-axis [6.8] speed [2.];
		move block05 to y-axis [-6.8] speed [2.];
		move block15 to x-axis [6.8] speed [2.];
		move block15 to y-axis [-6.8] speed [2.];
		move block16 to x-axis [6.8] speed [2.];
		move block16 to y-axis [-6.8] speed [2.];
		move block17 to x-axis [6.8] speed [2.];
		move block17 to y-axis [-6.8] speed [2.];
		move block18 to x-axis [6.8] speed [2.];
		move block18 to y-axis [-6.8] speed [2.];
		move block06 to x-axis [-6.8] speed [2.];
		move block06 to y-axis [-6.8] speed [2.];
		move block07 to x-axis [-6.8] speed [2.];
		move block07 to y-axis [-6.8] speed [2.];
		move block08 to x-axis [-6.8] speed [2.];
		move block08 to y-axis [-6.8] speed [2.];
		move block09 to x-axis [-6.8] speed [2.];
		move block09 to y-axis [-6.8] speed [2.];
		move block10 to x-axis [-6.8] speed [2.];
		move block10 to y-axis [-6.8] speed [2.];
		move block11 to x-axis [-6.8] speed [2.];
		move block11 to y-axis [-6.8] speed [2.];
		move block12 to x-axis [-6.8] speed [2.];
		move block12 to y-axis [-6.8] speed [2.];
		move block13 to x-axis [-6.8] speed [2.];
		move block13 to y-axis [-6.8] speed [2.];
		move block14 to x-axis [-6.8] speed [2.];
		move block14 to y-axis [-6.8] speed [2.];
		sleep 1000;
	}
	if( TRUE )
	{
		move clamp01 to x-axis [0.] speed [10.];
		move clamp02 to x-axis [0.] speed [10.];
		move clamp03 to x-axis [0.] speed [10.];
		move clamp04 to x-axis [0.] speed [10.];
		move clamp05 to x-axis [0.] speed [10.];
		move clamp15 to x-axis [0.] speed [10.];
		move clamp16 to x-axis [0.] speed [10.];
		move clamp17 to x-axis [0.] speed [10.];
		move clamp18 to x-axis [0.] speed [10.];
		move clamp06 to x-axis [0.] speed [10.];
		move clamp07 to x-axis [0.] speed [10.];
		move clamp08 to x-axis [0.] speed [10.];
		move clamp09 to x-axis [0.] speed [10.];
		move clamp10 to x-axis [0.] speed [10.];
		move clamp11 to x-axis [0.] speed [10.];
		move clamp12 to x-axis [0.] speed [10.];
		move clamp13 to x-axis [0.] speed [10.];
		move clamp14 to x-axis [0.] speed [10.];
		sleep 750;
	}
	if( TRUE )
	{
		turn arm01a to z-axis <-90.> speed <10.>;
		turn arm02a to z-axis <-90.> speed <10.>;
		turn arm03a to z-axis <-90.> speed <10.>;
		turn arm04a to z-axis <-90.> speed <10.>;
		turn arm05a to z-axis <90.> speed <10.>;
		turn arm06a to z-axis <90.> speed <10.>;
		turn arm07a to z-axis <90.> speed <10.>;
		turn arm08a to z-axis <90.> speed <10.>;
		turn arm09a to z-axis <90.> speed <10.>;
		turn arm10a to z-axis <90.> speed <10.>;
		turn arm11a to z-axis <90.> speed <10.>;
		turn arm12a to z-axis <90.> speed <10.>;
		turn arm13a to z-axis <-90.> speed <10.>;
		turn arm14a to z-axis <-90.> speed <10.>;
		turn arm15a to z-axis <-90.> speed <10.>;
		turn arm16a to z-axis <-90.> speed <10.>;
		sleep 500;
	}
	if( TRUE )
	{
		turn arm01b to z-axis <-45.> speed <10.>;
		turn arm02b to z-axis <-45.> speed <10.>;
		turn arm03b to z-axis <-45.> speed <10.>;
		turn arm04b to z-axis <-45.> speed <10.>;
		turn arm05b to z-axis <45.> speed <10.>;
		turn arm06b to z-axis <45.> speed <10.>;
		turn arm07b to z-axis <45.> speed <10.>;
		turn arm08b to z-axis <45.> speed <10.>;
		turn arm09b to z-axis <45.> speed <10.>;
		turn arm10b to z-axis <45.> speed <10.>;
		turn arm11b to z-axis <45.> speed <10.>;
		turn arm12b to z-axis <45.> speed <10.>;
		turn arm13b to z-axis <-45.> speed <10.>;
		turn arm14b to z-axis <-45.> speed <10.>;
		turn arm15b to z-axis <-45.> speed <10.>;
		turn arm16b to z-axis <-45.> speed <10.>;
		sleep 5000;
	}	
}

deactivatescr()
{	
	if( TRUE )
	{
		turn arm01b to z-axis <0.> speed <10.>;
		turn arm02b to z-axis <0.> speed <10.>;
		turn arm03b to z-axis <0.> speed <10.>;
		turn arm04b to z-axis <0.> speed <10.>;
		turn arm05b to z-axis <0.> speed <10.>;
		turn arm06b to z-axis <0.> speed <10.>;
		turn arm07b to z-axis <0.> speed <10.>;
		turn arm08b to z-axis <0.> speed <10.>;
		turn arm09b to z-axis <0.> speed <10.>;
		turn arm10b to z-axis <0.> speed <10.>;
		turn arm11b to z-axis <0.> speed <10.>;
		turn arm12b to z-axis <0.> speed <10.>;
		turn arm13b to z-axis <0.> speed <10.>;
		turn arm14b to z-axis <0.> speed <10.>;
		turn arm15b to z-axis <0.> speed <10.>;
		turn arm16b to z-axis <0.> speed <10.>;
		sleep 500;
	}
	if( TRUE )
	{
		turn arm01a to z-axis <0.> speed <10.>;
		turn arm02a to z-axis <0.> speed <10.>;
		turn arm03a to z-axis <0.> speed <10.>;
		turn arm04a to z-axis <0.> speed <10.>;
		turn arm05a to z-axis <0.> speed <10.>;
		turn arm06a to z-axis <0.> speed <10.>;
		turn arm07a to z-axis <0.> speed <10.>;
		turn arm08a to z-axis <0.> speed <10.>;
		turn arm09a to z-axis <0.> speed <10.>;
		turn arm10a to z-axis <0.> speed <10.>;
		turn arm11a to z-axis <0.> speed <10.>;
		turn arm12a to z-axis <0.> speed <10.>;
		turn arm13a to z-axis <0.> speed <10.>;
		turn arm14a to z-axis <0.> speed <10.>;
		turn arm15a to z-axis <0.> speed <10.>;
		turn arm16a to z-axis <0.> speed <10.>;
		sleep 750;
	}
	if( TRUE )
	{
		move clamp01 to x-axis [-23.] speed [5.];
		move clamp02 to x-axis [-19.55] speed [5.];
		move clamp03 to x-axis [-19.55] speed [5.];
		move clamp04 to x-axis [-19.55] speed [5.];
		move clamp05 to x-axis [-19.55] speed [5.];
		move clamp15 to x-axis [-19.55] speed [5.];
		move clamp16 to x-axis [-19.55] speed [5.];
		move clamp17 to x-axis [-19.55] speed [5.];
		move clamp18 to x-axis [-19.55] speed [5.];
		move clamp06 to x-axis [19.55] speed [5.];
		move clamp07 to x-axis [19.55] speed [5.];
		move clamp08 to x-axis [19.55] speed [5.];
		move clamp09 to x-axis [19.55] speed [5.];
		move clamp10 to x-axis [19.55] speed [5.];
		move clamp11 to x-axis [19.55] speed [5.];
		move clamp12 to x-axis [19.55] speed [5.];
		move clamp13 to x-axis [19.55] speed [5.];
		move clamp14 to x-axis [19.55] speed [5.];
		sleep 1000;
	}
	if( TRUE )
	{
		move block01 to x-axis [0.] speed [2.];
		move block01 to y-axis [0.] speed [2.];
		move block02 to x-axis [0.] speed [2.];
		move block02 to y-axis [0.] speed [2.];
		move block03 to x-axis [0.] speed [2.];
		move block03 to y-axis [0.] speed [2.];
		move block04 to x-axis [0.] speed [2.];
		move block04 to y-axis [0.] speed [2.];
		move block05 to x-axis [0.] speed [2.];
		move block05 to y-axis [0.] speed [2.];
		move block15 to x-axis [0.] speed [2.];
		move block15 to y-axis [0.] speed [2.];
		move block16 to x-axis [0.] speed [2.];
		move block16 to y-axis [0.] speed [2.];
		move block17 to x-axis [0.] speed [2.];
		move block17 to y-axis [0.] speed [2.];
		move block18 to x-axis [0.] speed [2.];
		move block18 to y-axis [0.] speed [2.];
		move block06 to x-axis [0.] speed [2.];
		move block06 to y-axis [0.] speed [2.];
		move block07 to x-axis [0.] speed [2.];
		move block07 to y-axis [0.] speed [2.];
		move block08 to x-axis [0.] speed [2.];
		move block08 to y-axis [0.] speed [2.];
		move block09 to x-axis [0.] speed [2.];
		move block09 to y-axis [0.] speed [2.];
		move block10 to x-axis [0.] speed [2.];
		move block10 to y-axis [0.] speed [2.];
		move block11 to x-axis [0.] speed [2.];
		move block11 to y-axis [0.] speed [2.];
		move block12 to x-axis [0.] speed [2.];
		move block12 to y-axis [0.] speed [2.];
		move block13 to x-axis [0.] speed [2.];
		move block13 to y-axis [0.] speed [2.];
		move block14 to x-axis [0.] speed [2.];
		move block14 to y-axis [0.] speed [2.];
		sleep 500;
	}
	sleep 34;
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

go()
{
	Static_Var_7 = 1;
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to 1;
}

stop()
{
	Static_Var_7 = 0;
	set INBUILDSTANCE to 0;
	call-script CloseYard();
	call-script deactivatescr();
}

InitState()
{
	Static_Var_2 = 1;
	Static_Var_3 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_3 )
	{
		Static_Var_2 = requestedstate;
		return (0);
	}
	Static_Var_3 = 1;
	currentstate = Static_Var_2;
	Static_Var_2 = requestedstate;
	while( Static_Var_2 != currentstate )
	{
		if( Static_Var_2 == 0 )
		{
			call-script go();
			currentstate = 0;
		}
		if( Static_Var_2 == 1 )
		{
			call-script stop();
			currentstate = 1;
		}
	}
	Static_Var_3 = 0;
}

Create()
{
	Static_Var_6 = 0;
	Static_Var_5 = 0;
	Static_Var_1 = 1;
	Static_Var_7 = 0;
	Static_Var_4 = 0;
	turn arm01a to y-axis <-8.> now;
	turn arm02a to y-axis <-23.> now;
	turn arm03a to y-axis <-38.> now;
	turn arm04a to y-axis <-53.> now;
	turn arm05a to y-axis <53.> now;
	turn arm06a to y-axis <38.> now;
	turn arm07a to y-axis <23.> now;
	turn arm08a to y-axis <8.> now;
	turn arm09a to y-axis <-8.> now;
	turn arm10a to y-axis <-23.> now;
	turn arm11a to y-axis <-38.> now;
	turn arm12a to y-axis <-53.> now;
	turn arm13a to y-axis <53.> now;
	turn arm14a to y-axis <38.> now;
	turn arm15a to y-axis <23.> now;
	turn arm16a to y-axis <8.> now;
	turn pivot02 to y-axis <-15.> now;
	turn pivot03 to y-axis <-30.> now;
	turn pivot04 to y-axis <-45.> now;
	turn pivot05 to y-axis <-60.> now;
	turn pivot06 to y-axis <60.> now;
	turn pivot07 to y-axis <45.> now;
	turn pivot08 to y-axis <30.> now;
	turn pivot09 to y-axis <15.> now;
	turn pivot11 to y-axis <-15.> now;
	turn pivot12 to y-axis <-30.> now;
	turn pivot13 to y-axis <-45.> now;
	turn pivot14 to y-axis <-60.> now;
	turn pivot15 to y-axis <60.> now;
	turn pivot16 to y-axis <45.> now;
	turn pivot17 to y-axis <30.> now;
	turn pivot18 to y-axis <15.> now;
	move clamp01 to x-axis [-19.55] now;
	move clamp02 to x-axis [-19.55] now;
	move clamp03 to x-axis [-19.55] now;
	move clamp04 to x-axis [-19.55] now;
	move clamp05 to x-axis [-19.55] now;
	move clamp15 to x-axis [-19.55] now;
	move clamp16 to x-axis [-19.55] now;
	move clamp17 to x-axis [-19.55] now;
	move clamp18 to x-axis [-19.55] now;
	move clamp06 to x-axis [19.55] now;
	move clamp07 to x-axis [19.55] now;
	move clamp08 to x-axis [19.55] now;
	move clamp09 to x-axis [19.55] now;
	move clamp10 to x-axis [19.55] now;
	move clamp11 to x-axis [19.55] now;
	move clamp12 to x-axis [19.55] now;
	move clamp13 to x-axis [19.55] now;
	move clamp14 to x-axis [19.55] now;
	call-script InitState();
	start-script SmokeUnit();
}

QueryNanoPiece(piecenum)
{
	if( Static_Var_1 == 1 )
	{
		piecenum = nano01;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = nano02;
	}
	if( Static_Var_1 == 3 )
	{
		piecenum = nano03;
	}
	if( Static_Var_1 == 4 )
	{
		piecenum = nano04;
	}
	if( Static_Var_1 == 5 )
	{
		piecenum = nano05;
	}
	if( Static_Var_1 == 6 )
	{
		piecenum = nano06;
	}
	if( Static_Var_1 == 7 )
	{
		piecenum = nano07;
	}
	if( Static_Var_1 == 8 )
	{
		piecenum = nano08;
	}
	if( Static_Var_1 == 9 )
	{
		piecenum = nano09;
	}
	if( Static_Var_1 == 10 )
	{
		piecenum = nano10;
	}
	if( Static_Var_1 == 11 )
	{
		piecenum = nano11;
	}
	if( Static_Var_1 == 12 )
	{
		piecenum = nano12;
	}
	if( Static_Var_1 == 13 )
	{
		piecenum = nano13;
	}
	if( Static_Var_1 == 14 )
	{
		piecenum = nano14;
	}
	if( Static_Var_1 == 15 )
	{
		piecenum = nano15;
	}
	if( Static_Var_1 == 16 )
	{
		piecenum = nano16;
	}
	++Static_Var_1;
	if( Static_Var_1 == 17 )
	{
		Static_Var_1 = 1;
	}
}

Activate()
{
	signal 2;
	start-script RequestState(0);
}

Deactivate()
{
	signal 2;
	set-signal-mask 2;
	sleep 5000;
	set-signal-mask 0;
	start-script RequestState(1);
}

QueryBuildInfo(piecenum)
{
	piecenum = pad;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
}
