#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, flame1, flame2;

// Signal definitions
#define SIG_AIM				2

static-var  bAiming;


PilotLight(Func_Var_1)
{
	while( TRUE )
	{
		while( bAiming )
		{
			sleep 100;
		}
		emit-sfx 1024 + 0 from flame1;
		emit-sfx 1024 + 0 from flame2;
		sleep 155;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script PilotLight();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare;
	hide flame1;
	hide flame2;
	bAiming = FALSE;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 1500;
	bAiming = FALSE;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = flare;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	start-script RestoreAfterDelay();
	return (1);
}

lua_FlameShot(Func_Var_1)
{
}

Shot1()
{
	call-script lua_FlameShot(1);
	return (1);
}

Killed(severity, corpsetype)
{
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	return (corpsetype);
}
