#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, 
		lflegy, lfleg, lfleg2, lfleg3, 
		rflegy, rfleg, rfleg2, rfleg3,
		lblegy, lbleg, lbleg2, lbleg3, 
		rblegy, rbleg, rbleg2, rbleg3,
		turret1, sleeves1, flare1, 
		turret2, sleeves2, flare2,
		turret3, sleeves3, flare3,
		turret4, sleeves4, flare4;

static-var  bMoving;

// Signal definitions
#define SIG_AIM_1				2
#define SIG_AIM_2				4
#define SIG_AIM_3				8
#define SIG_AIM_4				16

MotionControl(Moving, Aiming, JustMoved)
	{
	while( TRUE )
		{
		Moving = bMoving;
		if( Moving )
			{
			if( bMoving )
				{
				move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [0.50] speed [4.00];
				
				turn lblegy to y-axis <62.50> speed <40.00>;
				//turn lblegy2 to y-axis <-17.50> speed <40.00>;
				turn lbleg to z-axis <-20.00> speed <60.00>;
				turn lbleg2 to z-axis <50.00> speed <110.00>;
				//turn lbleg3 to z-axis <-55.00> speed <110.00>;
				//turn lbleg4 to z-axis <25.00> speed <40.00>;
				
				turn rblegy to y-axis <0.00> speed <60.00>;
				//turn rblegy2 to y-axis <-45.00> speed <60.00>;
				turn rbleg to z-axis <-20.00> speed <15.00>;
				turn rbleg2 to z-axis <50.00> speed <15.00>;
				//turn rbleg3 to z-axis <-30.00> speed <25.00>;
				//turn rbleg4 to z-axis <0.00> speed <35.00>;
				
				turn lflegy to y-axis <-45.00> speed <40.00>;
				//turn lflegy2 to y-axis <17.50> speed <40.00>;
				turn lfleg to z-axis <-10.00> speed <30.00>;
				turn lfleg2 to z-axis <-10.00> speed <90.00>;
				//turn lfleg3 to z-axis <-25.00> speed <70.00>;
				//turn lfleg4 to z-axis <25.00> speed <8.00>;
				
				turn rflegy to y-axis <0.00> speed <60.00>;
				//turn rflegy2 to y-axis <62.00> speed <60.00>;
				turn rfleg to z-axis <-20.00> speed <12.00>;
				turn rfleg2 to z-axis <30.00> speed <25.00>;
				//turn rfleg3 to z-axis <-15.00> speed <20.00>;
				//turn rfleg4 to z-axis <5.00> speed <8.00>;
				
				sleep 250;
				}
			
			if( bMoving )
				{
				//move pelvis to y-axis [-0.50] speed [2.00];
				move pelvis to z-axis [0.00] speed [2.00];
				turn lbleg to z-axis <-10.00> speed <18.00>;
				turn lbleg2 to z-axis <10.00> speed <70.00>;
				//turn lbleg3 to z-axis <-25.00> speed <55.00>;
				turn rbleg2 to z-axis <30.00> speed <30.00>;
				//turn rbleg3 to z-axis <-15.00> speed <25.00>;
				//turn rbleg4 to z-axis <5.00> speed <8.00>;
				turn lfleg to z-axis <-20.00> speed <18.00>;
				turn lfleg2 to z-axis <-15.00> speed <70.00>;
				//turn lfleg3 to z-axis <-20.00> speed <55.00>;
				turn rfleg2 to z-axis <30.00> speed <35.00>;
				//turn rfleg3 to z-axis <-30.00> speed <25.00>;
				//turn rfleg4 to z-axis <0.00> speed <8.00>;
				sleep 250;
				}
			
			if( bMoving )
				{
				//move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [-0.50] speed [2.00];
				
				turn lblegy to y-axis <37.50> speed <40.00>;
				//turn lblegy2 to y-axis <7.50> speed <40.00>;
				turn lbleg to z-axis <10.00> speed <30.00>;
				turn lbleg2 to z-axis <-40.00> speed <90.00>;
				//turn lbleg3 to z-axis <15.00> speed <70.00>;
				//turn lbleg4 to z-axis <20.00> speed <8.00>;
				
				turn rblegy to y-axis <-37.50> speed <60.00>;
				//turn rblegy2 to y-axis <-7.50> speed <60.00>;
				turn rbleg to z-axis <-12.50> speed <12.00>;
				turn rbleg2 to z-axis <15.00> speed <25.00>;
				//turn rbleg3 to z-axis <-2.50> speed <20.00>;
				//turn rbleg4 to z-axis <0.00> speed <8.00>;
				
				turn lflegy to y-axis <-37.50> speed <40.00>;
				//turn lflegy2 to y-axis <-7.50> speed <40.00>;
				turn lfleg to z-axis <12.50> speed <60.00>;
				turn lfleg2 to z-axis <-15.00> speed <90.00>;
				//turn lfleg3 to z-axis <2.50> speed <90.00>;
				//turn lfleg4 to z-axis <0.00> speed <40.00>;
				
				turn rflegy to y-axis <37.50> speed <60.00>;
				//turn rflegy2 to y-axis <7.50> speed <60.00>;
				turn rfleg to z-axis <-10.00> speed <18.00>;
				turn rfleg2 to z-axis <30.00> speed <18.00>;
				//turn rfleg3 to z-axis <-15.00> speed <25.00>;
				//turn rfleg4 to z-axis <-20.00> speed <30.00>;
				
				sleep 250;
				}
			////
			if( bMoving )
				{
				//move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [0.50] speed [4.00];
				
				turn lblegy to y-axis <0.00> speed <25.00>;
				//turn lblegy2 to y-axis <45.00> speed <25.00>;
				turn lbleg to z-axis <20.00> speed <18.00>;
				turn lbleg2 to z-axis <-50.00> speed <18.00>;
				//turn lbleg3 to z-axis <30.00> speed <25.00>;
				//turn lbleg4 to z-axis <0.00> speed <35.00>;
				
				turn rblegy to y-axis <-62.50> speed <40.00>;
				//turn rblegy2 to y-axis <17.50> speed <40.00>;
				turn rbleg to z-axis <20.00> speed <50.00>;
				turn rbleg2 to z-axis <-50.00> speed <95.00>;
				//turn rbleg3 to z-axis <55.00> speed <90.00>;
				//turn rbleg4 to z-axis <-25.00> speed <40.00>;
				
				turn lflegy to y-axis <0.00> speed <65.00>;
				//turn lflegy2 to y-axis <-60.00> speed <65.00>;
				turn lfleg to z-axis <20.00> speed <30.00>;
				turn lfleg2 to z-axis <-20.00> speed <25.00>;
				//turn lfleg3 to z-axis <15.00> speed <20.00>;
				//turn lfleg4 to z-axis <-5.00> speed <20.00>;
				
				turn rflegy to y-axis <45.50> speed <40.00>;
				//turn rflegy2 to y-axis <-17.50> speed <40.00>;
				turn rfleg to z-axis <10.00> speed <35.00>;
				turn rfleg2 to z-axis <0.00> speed <200.00>;
				//turn rfleg3 to z-axis <25.00> speed <60.00>;
				//turn rfleg4 to z-axis <-25.00> speed <20.00>;
				
				sleep 250;
				}
			
			if( bMoving )
				{
				//move pelvis to y-axis [-0.50] speed [2.00];
				move pelvis to z-axis [0.00] speed [2.00];
				turn lbleg2 to z-axis <-30.00> speed <35.00>;
				//turn lbleg3 to z-axis <15.00> speed <25.00>;
				//turn lbleg4 to z-axis <-5.00> speed <20.00>;
				turn rbleg to z-axis <10.00> speed <18.00>;
				turn rbleg2 to z-axis <-10.00> speed <60.00>;
				//turn rbleg3 to z-axis <25.00> speed <60.00>;
				turn lfleg2 to z-axis <-30.00> speed <35.00>;
				//turn lfleg3 to z-axis <30.00> speed <25.00>;
				//turn lfleg4 to z-axis <0.00> speed <20.00>;
				turn rfleg to z-axis <20.00> speed <18.00>;
				turn rfleg2 to z-axis <-15.00> speed <60.00>;
				//turn rfleg3 to z-axis <30.00> speed <60.00>;				
				sleep 250;
				}
			
			if( bMoving )
				{
				move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [-0.50] speed [2.00];
				
				turn lblegy to y-axis <37.50> speed <60.00>;
				//turn lblegy2 to y-axis <7.50> speed <0.00>;
				turn lbleg to z-axis <12.50> speed <30.00>;
				turn lbleg2 to z-axis <-15.00> speed <25.00>;
				//turn lbleg3 to z-axis <2.50> speed <50.00>;
				//turn lbleg4 to z-axis <0.00> speed <20.00>;
				
				turn rblegy to y-axis <-37.50> speed <40.00>;
				//turn rblegy2 to y-axis <-7.50> speed <40.00>;
				turn rbleg to z-axis <-10.00> speed <35.00>;
				turn rbleg2 to z-axis <18.00> speed <80.00>;
				//turn rbleg3 to z-axis <-15.00> speed <55.00>;
				//turn rbleg4 to z-axis <-20.00> speed <20.00>;
				
				turn lflegy to y-axis <-37.50> speed <60.00>;
				//turn lflegy2 to y-axis <-7.50> speed <60.00>;
				turn lfleg to z-axis <10.00> speed <18.00>;
				turn lfleg2 to z-axis <-30.00> speed <18.00>;
				//turn lfleg3 to z-axis <15.00> speed <25.00>;
				//turn lfleg4 to z-axis <20.00> speed <35.00>;
				
				turn rflegy to y-axis <37.50> speed <40.00>;
				//turn rflegy2 to y-axis <7.50> speed <40.00>;
				turn rfleg to z-axis <-12.50> speed <50.00>;
				turn rfleg2 to z-axis <15.00> speed <90.00>;
				//turn rfleg3 to z-axis <-2.50> speed <90.00>;
				//turn rfleg4 to z-axis <0.00> speed <40.00>;
				
				sleep 250;
				}
			JustMoved = 1;
			}
		if( !Moving )
			{
			if( JustMoved )
				{
				move pelvis to y-axis [0.00] speed [2.00];
				move pelvis to z-axis [0.00] speed [2.00];
				
				turn lblegy to y-axis <45.00> speed <55.00>;
				//turn lblegy2 to y-axis <0.00> speed <55.00>;
				turn lbleg to z-axis <0.00> speed <55.00>;
				turn lbleg2 to z-axis <0.00> speed <55.00>;
				turn lbleg3 to z-axis <0.00> speed <55.00>;
				//turn lbleg4 to z-axis <0.00> speed <55.00>;
				
				turn rblegy to y-axis <-45.00> speed <55.00>;
				//turn rblegy2 to y-axis <0.00> speed <55.00>;
				turn rbleg to z-axis <0.00> speed <55.00>;
				turn rbleg2 to z-axis <0.00> speed <55.00>;
				turn rbleg3 to z-axis <0.00> speed <55.00>;
				//turn rbleg4 to z-axis <0.00> speed <55.00>;
				
				turn lflegy to y-axis <-45.00> speed <55.00>;
				//turn lflegy2 to y-axis <0.00> speed <55.00>;
				turn lfleg to z-axis <0.00> speed <55.00>;
				turn lfleg2 to z-axis <0.00> speed <55.00>;
				turn lfleg3 to z-axis <0.00> speed <55.00>;
				//turn lfleg4 to z-axis <0.00> speed <55.00>;
				
				turn rflegy to y-axis <45.00> speed <55.00>;
				//turn rflegy2 to y-axis <0.00> speed <55.00>;
				turn rfleg to z-axis <0.00> speed <55.00>;
				turn rfleg2 to z-axis <0.00> speed <55.00>;
				turn rfleg3 to z-axis <0.00> speed <55.00>;
				//turn rfleg4 to z-axis <0.00> speed <55.00>;
				
				JustMoved = 0;
				}
			sleep 40;
			}
		}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 135;
	}
	
	start-script MotionControl();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from pelvis;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}


Create()
{
	
	bMoving = 0;
	turn turret1 to y-axis <45.00> now;
	turn turret2 to y-axis <-45.00> now;
	turn turret3 to y-axis <135.00> now;
	turn turret4 to y-axis <-135.00> now;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 2500;
	turn turret1 to y-axis <45.00> speed <50.000000>;
	turn turret2 to y-axis <-45.00> speed <50.000000>;
	turn turret3 to y-axis <135.00> speed <50.000000>;
	turn turret4 to y-axis <-135.00> speed <50.000000>;	
	turn turret1 to x-axis <0.> speed <50.000000>;
	turn turret2 to x-axis <0.> speed <50.000000>;
	turn turret3 to x-axis <0.> speed <50.000000>;
	turn turret4 to x-axis <0.> speed <50.000000>;
}

AimFromWeapon1(piecenum)
{
	piecenum = sleeves1;
}

AimFromWeapon2(piecenum)
{
	piecenum = sleeves2;
}

AimFromWeapon3(piecenum)
{
	piecenum = sleeves3;
}

AimFromWeapon4(piecenum)
{
	piecenum = sleeves4;
}


AimWeapon1(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn turret1 to y-axis heading speed <150.000000>;
	turn turret1 to x-axis <0.0> - pitch speed <100.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn turret1 around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret2 to y-axis heading speed <150.000000>;
	turn turret2 to x-axis <0.0> - pitch speed <100.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn turret2 around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret3 to y-axis heading speed <150.000000>;
	turn turret3 to x-axis <0.0> - pitch speed <100.000000>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn turret3 around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	turn turret4 to y-axis heading speed <150.000000>;
	turn turret4 to x-axis <0.0> - pitch speed <1001.000000>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn turret4 around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

QueryWeapon1(PieceNum)
{
	piecenum = flare1;
}

QueryWeapon2(PieceNum)
{
	piecenum = flare2;
}

QueryWeapon3(PieceNum)
{
	piecenum = flare3;
}

QueryWeapon4(PieceNum)
{
	piecenum = flare4;
}

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(severity, corpseType)
{

	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pelvis type NOHEATCLOUD;
		explode lbleg2 type NOHEATCLOUD;
		explode rbleg2 type NOHEATCLOUD;
		explode rfleg2 type NOHEATCLOUD;
		explode lfleg2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pelvis type NOHEATCLOUD;
		explode lbleg2 type NOHEATCLOUD | FALL;
		explode rbleg2 type NOHEATCLOUD | FALL;
		explode rfleg2 type NOHEATCLOUD | FALL;
		explode lfleg2 type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode pelvis type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode lbleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode rbleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode rfleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode lfleg2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	return (corpsetype);
}
