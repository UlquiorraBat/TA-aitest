#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, socle, pillar, cap, turret, system, pitchturret, barrel1, barrel2, fire1, fire2;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
		
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	start-script SmokeUnit();
	set ARMORED to 1;	
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

RestoreAfterDelay()
{
	sleep 2000;
	
	turn turret to y-axis <0.0> speed <90.00>;
	turn pitchturret to x-axis <0.00> speed <90.00>;
	move barrel1 to z-axis [0.00] speed [6.00];
	move barrel2 to z-axis [0.00] speed [6.00];
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	
	move pillar to y-axis [0.00] speed [6.00];
	wait-for-move pillar along y-axis;
	set ARMORED to 1;
}

AimFromPrimary(PieceNum)
{
	PieceNum = pitchturret;
}

AimFromsecondary(PieceNum)
{
	PieceNum = pitchturret;
}

QueryPrimary(PieceNum)
{
	PieceNum = fire1;
}

QuerySecondary(PieceNum)
{
	PieceNum = fire2;
}

AimPrimary(Heading, Pitch)
{
	signal 2;
	set-signal-mask 2;
	
	set ARMORED to 0;
	
	move pillar to y-axis [6.00] speed [6.00];
	wait-for-move pillar along y-axis;
	move barrel1 to z-axis [2.00] speed [6.00];
	move barrel2 to z-axis [2.00] speed [6.00];
	
	turn turret to y-axis heading speed <180.00>;
	turn pitchturret to x-axis <0.00> - pitch speed <180.00>;
	
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

FirePrimary()
{
	move barrel1 to z-axis [1.00000] speed [500.000000];
	sleep 150;
	move barrel1 to z-axis [2.000000] speed [0.75];	
}

AimSecondary(Heading, Pitch)
{
	signal 4;
	set-signal-mask 4;
	wait-for-move pillar along y-axis;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	return(1);
}

FireSecondary()
{
	move barrel2 to z-axis [1.00000] speed [500.000000];
	sleep 150;
	move barrel2 to z-axis [2.000000] speed [0.75];	
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pillar type NOHEATCLOUD;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode cap type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pillar type NOHEATCLOUD;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		explode cap type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode pillar type NOHEATCLOUD;
	explode barrel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode cap type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}