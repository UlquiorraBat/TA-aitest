#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, aft, wake1, wake2, wake3, wake4,
       flare1, flare2, flare3,
       turret1, turret2, turret3, sleeves1, sleeves2, sleeves3;

static-var  restore_delay;

// Signal definitions
#define SIG_AIM_1			2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_MOVE			16

waveSplash()
{
	while( TRUE )
	{
		turn base to x-axis <-3.000000> speed <3.000000>;
		move base to y-axis [0.319995] speed [0.319995];
		wait-for-turn base around x-axis;
		turn base to x-axis <0.000000> speed <3.000000>;
		move base to y-axis [0.000000] speed [0.319995];
		wait-for-turn base around x-axis;
		sleep 150;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	restore_delay = 3000;
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	start-script waveSplash();
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		sleep 150;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	turn base to x-axis <0.000000> speed <3.000000>;
	move base to y-axis [0.000000] speed [0.319995];
}

RestoreAfterDelay1()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn turret1 to y-axis <0.000000> speed <35.000000>;
	turn sleeves1 to x-axis <0.000000> speed <15.000000>;
}

RestoreAfterDelay2()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn turret2 to y-axis <0.000000> speed <35.000000>;
	turn sleeves2 to x-axis <0.000000> speed <15.000000>;
}

RestoreAfterDelay3()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn turret3 to y-axis <0.000000> speed <35.000000>;
	turn sleeves3 to x-axis <0.000000> speed <15.000000>;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	turn turret1 to y-axis heading speed <150.000000>;
	turn sleeves1 to x-axis <0.000000> - pitch speed <40.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeves1 around x-axis;
	start-script RestoreAfterDelay1();
	return (1);
}

AimFromWeapon1(piecenum)
{
	piecenum = turret1;
}

QueryWeapon1(piecenum)
{
	piecenum = flare1;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret2 to y-axis heading speed <150.000000>;
	turn sleeves2 to x-axis <0.000000> - pitch speed <40.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeves2 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

AimFromWeapon2(piecenum)
{
	piecenum = turret2;
}

QueryWeapon2(piecenum)
{
	piecenum = flare2;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret3 to y-axis heading speed <150.000000>;
	turn sleeves3 to x-axis <0.000000> - pitch speed <40.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeves3 around x-axis;
	start-script RestoreAfterDelay3();
	return (1);
}

AimFromWeapon3(piecenum)
{
	piecenum = turret3;
}

QueryWeapon3(piecenum)
{
	piecenum = flare3;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode sleeves1 type NOHEATCLOUD;
		explode sleeves2 type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode aft type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode sleeves1 type NOHEATCLOUD | FALL;
		explode sleeves2 type NOHEATCLOUD | FALL;
		explode body type NOHEATCLOUD;
		explode aft type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret3 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode sleeves1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeves2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD;
	explode aft type NOHEATCLOUD;
	explode turret1 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret3 type NOHEATCLOUD;
	return (corpsetype);
}
