#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, turret, pitchturret, spray,
       lflegy, lfleg, lfleg2, lfleg3, lmlegy, lmleg, lmleg2, lmleg3, lblegy, lbleg, lbleg2, lbleg3,
       rflegy, rfleg, rfleg2, rfleg3, rmlegy, rmleg, rmleg2, rmleg3, rblegy, rbleg, rbleg2, rbleg3;

static-var  Static_Var_1, Static_Var_2, bMoving, bAiming;

activatescr()
{
	sleep 40;
}

deactivatescr()
{
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0.0> speed <180.00>;
	turn pitchturret to x-axis <0.00> speed <180.00>;	
}

MotionControl(Moving, Aiming, JustMoved)
	{
	JustMoved = 1;
	while( TRUE )
		{
		Moving = bMoving;
		Aiming = bAiming;
		if( Moving )
			{
			if( bMoving )
				{
				turn lmlegy to y-axis <30.00> speed <101.00>;
				turn lmleg to z-axis <20.00> speed <81.00>;
				turn lmleg2 to z-axis <-30.00> speed <101.00>;
				turn lmleg3 to z-axis <10.00> speed <51.00>;
				
				turn rmlegy to y-axis <30.00> speed <101.00>;
				turn rmleg to z-axis <10.00> speed <51.00>;
				turn rmleg2 to z-axis <20.00> speed <51.00>;
				//turn rmleg3 to z-axis <-20.00> speed <0.00>;
				
				turn rblegy to y-axis <-70.00> speed <81.00>;
				turn rbleg to z-axis <-40.00> speed <151.00>;
				turn rbleg2 to z-axis <60.00> speed <201.00>;
				turn rbleg3 to z-axis <-20.00> speed <121.00>;
				
				turn lblegy to y-axis <30.00> speed <81.00>;
				turn lbleg to z-axis <-70.00> speed <51.00>;
				turn lbleg2 to z-axis <80.00> speed <51.00>;
				//turn lbleg3 to z-axis <0.00> speed <0.00>;
				
				turn lflegy to y-axis <-70.00> speed <81.00>;
				turn lfleg to z-axis <-20.00> speed <185.00>;
				turn lfleg2 to z-axis <-10.00> speed <203.00>;
				turn lfleg3 to z-axis <20.00> speed <81.00>;
				
				turn rflegy to y-axis <30.00> speed <81.00>;
				turn rfleg to z-axis <50.00> speed <81.00>;
				turn rfleg2 to z-axis <-75.00> speed <101.00>;
				turn rfleg3 to z-axis <25.00> speed <51.00>;
					
				sleep 200;
				}
			
			if( bMoving )
				{
				//turn lmlegy to y-axis <30.00> speed <0.00>;
				turn lmleg to z-axis <-10.00> speed <101.00>;
				turn lmleg2 to z-axis <-20.00> speed <51.00>;
				turn lmleg3 to z-axis <20.00> speed <51.00>;
				
				//turn rmlegy to y-axis <30.00> speed <0.00>;
				turn rmleg to z-axis <-20.00> speed <101.00>;
				turn rmleg2 to z-axis <30.00> speed <51.00>;
				turn rmleg3 to z-axis <-10.00> speed <51.00>;
				
				//turn rblegy to y-axis <-70.00> speed <0.00>;
				turn rbleg to z-axis <20.00> speed <205.00>;
				turn rbleg2 to z-axis <10.00> speed <188.00>;
				//turn rbleg3 to z-axis <-20.00> speed <0.00>;
				
				//turn lblegy to y-axis <30.00> speed <0.00>;
				turn lbleg to z-axis <-50.00> speed <81.00>;
				turn lbleg2 to z-axis <75.00> speed <50.00>;
				turn lbleg3 to z-axis <-25.00> speed <128.00>;
				
				//turn lflegy to y-axis <-70.00> speed <0.00>;
				turn lfleg to z-axis <40.00> speed <202.00>;
				turn lfleg2 to z-axis <-60.00> speed <188.00>;
				//turn lfleg3 to z-axis <20.00> speed <0.00>;
				
				//turn rflegy to y-axis <30.00> speed <0.00>;
				turn rfleg to z-axis <70.00> speed <81.00>;
				turn rfleg2 to z-axis <-80.00> speed <50.00>;
				turn rfleg3 to z-axis <0.00> speed <128.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				turn lmlegy to y-axis <0.00> speed <101.00>;
				turn lmleg to z-axis <-20.00> speed <51.00>;
				turn lmleg2 to z-axis <-10.00> speed <51.00>;
				//turn lmleg3 to z-axis <20.00> speed <0.00>;
				
				turn rmlegy to y-axis <0.00> speed <101.00>;
				turn rmleg to z-axis <0.00> speed <81.00>;
				turn rmleg2 to z-axis <0.00> speed <101.00>;
				turn rmleg3 to z-axis <0.00> speed <51.00>;
				
				turn rblegy to y-axis <-50.00> speed <81.00>;
				turn rbleg to z-axis <60.00> speed <400.00>;
				turn rbleg2 to z-axis <-70.00> speed <800.00>;
				turn rbleg3 to z-axis <0.00> speed <81.00>;
				
				turn lblegy to y-axis <50.00> speed <81.00>;
				turn lbleg to z-axis <-30.00> speed <81.00>;
				turn lbleg2 to z-axis <45.00> speed <101.00>;
				turn lbleg3 to z-axis <-15.00> speed <51.00>;
				
				turn lflegy to y-axis <-50.00> speed <81.00>;
				turn lfleg to z-axis <-30.00> speed <151.00>;
				turn lfleg2 to z-axis <45.00> speed <201.00>;
				turn lfleg3 to z-axis <-15.00> speed <121.00>;
				
				turn rflegy to y-axis <50.00> speed <81.00>;
				turn rfleg to z-axis <60.00> speed <51.00>;
				turn rfleg2 to z-axis <-70.00> speed <51.00>;
				//turn rfleg3 to z-axis <0.00> speed <0.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				turn lmlegy to y-axis <-30.00> speed <101.00>;
				turn lmleg to z-axis <-10.00> speed <51.00>;
				turn lmleg2 to z-axis <-20.00> speed <51.00>;
				//turn lmleg3 to z-axis <20.00> speed <0.00>;
				
				turn rmlegy to y-axis <-30.00> speed <101.00>;
				turn rmleg to z-axis <-20.00> speed <81.00>;
				turn rmleg2 to z-axis <30.00> speed <101.00>;
				turn rmleg3 to z-axis <-10.00> speed <51.00>;
				
				turn rblegy to y-axis <-30.00> speed <81.00>;
				turn rbleg to z-axis <70.00> speed <51.00>;
				turn rbleg2 to z-axis <-80.00> speed <51.00>;
				//turn rbleg3 to z-axis <0.00> speed <0.00>;
				
				turn lblegy to y-axis <70.00> speed <81.00>;
				turn lbleg to z-axis <40.00> speed <151.00>;
				turn lbleg2 to z-axis <-60.00> speed <201.00>;
				turn lbleg3 to z-axis <20.00> speed <121.00>;
				
				turn lflegy to y-axis <-30.00> speed <81.00>;
				turn lfleg to z-axis <-50.00> speed <81.00>;
				turn lfleg2 to z-axis <75.00> speed <101.00>;
				turn lfleg3 to z-axis <-25.00> speed <51.00>;
				
				turn rflegy to y-axis <70.00> speed <81.00>;
				turn rfleg to z-axis <20.00> speed <185.00>;
				turn rfleg2 to z-axis <10.00> speed <202.00>;
				turn rfleg3 to z-axis <-20.00> speed <81.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				//turn lmlegy to y-axis <-30.00> speed <0.00>;
				turn lmleg to z-axis <20.00> speed <101.00>;
				turn lmleg2 to z-axis <-30.00> speed <51.00>;
				turn lmleg3 to z-axis <10.00> speed <51.00>;
				
				//turn rmlegy to y-axis <-30.00> speed <0.00>;
				turn rmleg to z-axis <10.00> speed <101.00>;
				turn rmleg2 to z-axis <20.00> speed <51.00>;
				turn rmleg3 to z-axis <-20.00> speed <51.00>;
				
				//turn rblegy to y-axis <-30.00> speed <0.00>;
				turn rbleg to z-axis <50.00> speed <81.00>;
				turn rbleg2 to z-axis <-75.00> speed <26.00>;
				turn rbleg3 to z-axis <25.00> speed <128.00>;
				
				//turn lblegy to y-axis <70.00> speed <0.00>;
				turn lbleg to z-axis <-20.00> speed <252.00>;
				turn lbleg2 to z-axis <-10.00> speed <252.00>;
				//turn lbleg3 to z-axis <20.00> speed <0.00>;
				
				//turn lflegy to y-axis <-30.00> speed <0.00>;
				turn lfleg to z-axis <-70.00> speed <81.00>;
				turn lfleg2 to z-axis <80.00> speed <50.00>;
				turn lfleg3 to z-axis <0.00> speed <128.00>;
				
				//turn rflegy to y-axis <70.00> speed <0.00>;
				turn rfleg to z-axis <-40.00> speed <202.00>;
				turn rfleg2 to z-axis <60.00> speed <151.00>;
				//turn rfleg3 to z-axis <-20.00> speed <0.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				turn lmlegy to y-axis <0.00> speed <101.00>;
				turn lmleg to z-axis <0.00> speed <81.00>;
				turn lmleg2 to z-axis <0.00> speed <101.00>;
				turn lmleg3 to z-axis <0.00> speed <51.00>;
				
				turn rmlegy to y-axis <0.00> speed <101.00>;
				turn rmleg to z-axis <20.00> speed <51.00>;
				turn rmleg2 to z-axis <10.00> speed <51.00>;
				//turn rmleg3 to z-axis <-20.00> speed <0.00>;
				
				turn rblegy to y-axis <-50.00> speed <81.00>;
				turn rbleg to z-axis <30.00> speed <81.00>;
				turn rbleg2 to z-axis <-45.00> speed <101.00>;
				turn rbleg3 to z-axis <15.00> speed <51.00>;
				
				turn lblegy to y-axis <50.00> speed <81.00>;
				turn lbleg to z-axis <-60.00> speed <151.00>;
				turn lbleg2 to z-axis <70.00> speed <201.00>;
				turn lbleg3 to z-axis <0.00> speed <81.00>;
				
				turn lflegy to y-axis <-50.00> speed <81.00>;
				turn lfleg to z-axis <-60.00> speed <51.00>;
				turn lfleg2 to z-axis <70.00> speed <51.00>;
				//turn lfleg3 to z-axis <0.00> speed <0.00>;
				
				turn rflegy to y-axis <50.00> speed <81.00>;
				turn rfleg to z-axis <30.00> speed <151.00>;
				turn rfleg2 to z-axis <-45.00> speed <201.00>;
				turn rfleg3 to z-axis <15.00> speed <121.00>;
				
				sleep 200;
				}
			JustMoved = 1;
			}
		if( !Moving )
			{
			if( JustMoved )
				{
				turn lmlegy to y-axis <0.00> speed <82.00>;
				turn lmleg to z-axis <0.00> speed <82.00>;
				turn lmleg2 to z-axis <0.00> speed <82.00>;
				turn lmleg3 to z-axis <0.00> speed <82.00>;
				
				turn rmlegy to y-axis <0.00> speed <82.00>;
				turn rmleg to z-axis <0.00> speed <82.00>;
				turn rmleg2 to z-axis <0.00> speed <82.00>;
				turn rmleg3 to z-axis <0.00> speed <82.00>;
				
				turn lflegy to y-axis <-50.00> speed <82.00>;
				turn lfleg to z-axis <0.00> speed <82.00>;
				turn lfleg2 to z-axis <0.00> speed <82.00>;
				turn lfleg3 to z-axis <0.00> speed <82.00>;
				
				turn rflegy to y-axis <50.00> speed <82.00>;
				turn rfleg to z-axis <0.00> speed <82.00>;
				turn rfleg2 to z-axis <0.00> speed <82.00>;
				turn rfleg3 to z-axis <0.00> speed <82.00>;
				
				turn lblegy to y-axis <50.00> speed <82.00>;
				turn lbleg to z-axis <0.00> speed <82.00>;
				turn lbleg2 to z-axis <0.00> speed <82.00>;
				turn lbleg3 to z-axis <0.00> speed <82.00>;
				
				turn rblegy to y-axis <-50.00> speed <82.00>;
				turn rbleg to z-axis <0.00> speed <82.00>;
				turn rbleg2 to z-axis <0.00> speed <82.00>;
				turn rbleg3 to z-axis <0.00> speed <82.00>;
				
				JustMoved = 0;
				}
			sleep 200;
			}
		}
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( Static_Var_1 )
		{
			call-script deactivatescr();
			bAiming = 1;
			currentstate = 1;
		}
		else
		{
			call-script activatescr();
			bAiming = 0;
			currentstate = 0;
		}
	}
	Static_Var_2 = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script MotionControl();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from hull;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = 0;
	bAiming = 1;
	Static_Var_1 = 1;
	Static_Var_2 = 0;
	turn lflegy to y-axis <-50.00> now;
	turn lblegy to y-axis <50.00> now;
	turn rflegy to y-axis <50.00> now;
	turn rblegy to y-axis <-50.00> now;
	start-script SmokeUnit();
}

StartMoving()
{
	signal 256;
	set-signal-mask 256;
	bMoving = 1;
}

StopMoving()
{
	signal 256;
	set-signal-mask 256;
	bMoving = 0;
	
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

QueryNanoPiece(PieceNum)
{
	PieceNum = spray;
}

StartBuilding(Heading, Pitch)
{
	start-script RequestState(0);
	while( bAiming )
	{
		sleep 100;
	}
	signal 4;	
	turn turret to y-axis Heading speed <180.00>;
	turn pitchturret to x-axis <-65.00> - Pitch speed <180.00>;	
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal 4;
	set-signal-mask 4;
	sleep 6000;
	set-signal-mask 0;
	signal 4;
	start-script RequestState(1);
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD;
		explode rbleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lbleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD;
		explode pitchturret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode hull type NOHEATCLOUD;
		explode rbleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode lbleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD | FALL;
		explode pitchturret type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode hull type NOHEATCLOUD;
	explode rbleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lbleg type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pitchturret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}